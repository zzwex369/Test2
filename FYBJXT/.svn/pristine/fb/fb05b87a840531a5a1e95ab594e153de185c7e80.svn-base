<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  width="100%" height="100%" 
		  creationComplete="moduleCreationCompleteHandler(event)">
	<fx:Declarations>
		<s:RemoteObject id="l302Service" destination="l302Service"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="renewL302" result="delL302Handler(event)"/>
			<s:method name="delL302" result="delL302Handler(event)"/>

			<s:method name="queryL302" result="queryL302Handler(event)"/>
		</s:RemoteObject>
		
		<s:RemoteObject id="systemService" destination="systemService"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>
		</s:RemoteObject>
		
		<!--data 10 因为结案把9 状态占用-->
		<fx:XMLList id="modelListUpdate">
			<state label="修改检查信息">   
				<state label="1.病史情况" data="0" currentState="bs"/>   
				<state label="2.妇科检查" data="1"  currentState="fk"/> 
				<state label="3.HPV检查" data="2"  currentState="hpv"/> 
				<state label="4.宫颈细胞学检查" data="3" currentState="gjxbx"/> 
				<state label="5.初筛临床建议" data="9"  currentState="csjy"/>   
				<state label="6.醋酸染色或复方碘染色后肉眼观察法检查（VIA/VILI）" data="4" currentState="via"/> 
				<state label="7.阴道镜检查 " data="5"  currentState="ydj"/> 
				<state label="8.组织病理检查" data="6" currentState="zz"/> 
				<state label="9.最后诊断" data="7" currentState="zd"/> 
				<state label="10.随访治疗情况" data="8"  currentState="sf"/> 
				
				
			</state>
		</fx:XMLList>
		<fx:XMLList id="modelListRegister">
			<state label="登记检查信息">   
				<state label="1.妇科检查" data="1" currentState="fk"/>  
				<state label="2.HPV检查" data="2"  currentState="hpv"/> 
				<state label="3.宫颈细胞学检查" data="3" currentState="gjxbx"/> 
				<state label="4.初筛临床建议" data="9"  currentState="csjy"/>   
				<state label="5.醋酸染色或复方碘染色后肉眼观察法检查（VIA/VILI）" data="4"  currentState="via"/> 
				<state label="6.阴道镜检查 " data="5"  currentState="ydj"/> 
				<state label="7.组织病理检查" data="6"  currentState="zz"/> 
				<state label="8.最后诊断" data="7"  currentState="zd"/> 
				<state label="9.随访治疗情况" data="8"  currentState="sf"/> 
			</state>
		</fx:XMLList>
		
		<fx:XMLList id="modelListDel">
			<state label="删除检查信息">   
				<state label="1.病史情况" data="0" />   
				<state label="2.妇科检查" data="1" />   
				<state label="3.HPV检查" data="2" />   
				<state label="4.宫颈细胞学检查" data="3"/>   
				<state label="5.初筛临床建议" data="9"/>   
				<state label="6.醋酸染色或复方碘染色后肉眼观察法检查（VIA/VILI）" data="4"/>   
				<state label="7.阴道镜检查 " data="5"/>
				<state label="8.组织病理检查" data="6"/>   
				<state label="9.最后诊断" data="7"/>   
				<state label="10.随访治疗情况" data="8"/>
			</state>
		</fx:XMLList>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		mx|MenuBar
		{
			cornerRadius:3;
			fillAlphas: 1.0, 1.0; 
			/*fillColors: #C0C0C0,#C0C0C0;    //通过此方法进行menubar顶级菜单栏的背景色设置 */
			contentBackgroundColor:#f2f1f1;/*  //通过此方法进行menubar子菜单栏的背景色设置 */
			chromeColor:#CCCCCC;/*按钮背景颜色*/
			rollOverColor:#65a1fc;/*列表悬浮颜色*/
			letterSpacing: 2;
			itemOverSkin:ClassReference("com.xyw.sys.custom.skin.MenuBarActiveSkin");
			itemDownSkin:ClassReference("com.xyw.sys.custom.skin.MenuBarActiveSkin");
		}
		mx|ToolTip
		{
			fontSize:15;  
			color:#FF6699; 
		}
		
		
		s|TextInput:normalWithPrompt {
			color: #D60505;
			fontStyle:normal;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.msss.la.fngjadacx.finishCaseWindow;
			import com.xyw.module.msss.la.model.L302;
			import com.xyw.module.msss.la.model.L302Request;
			import com.xyw.module.msss.la.model.L306Request;
			import com.xyw.module.msss.la.model.VL302;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.SystemUser;
			
			import flash.net.navigateToURL;
			
			import flex.lang.reflect.Field;
			
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.MenuEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.messaging.AbstractConsumer;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.events.GridSelectionEvent;
			include "../fngjadacx/customLA.as";
			[Bindable]
			private var vl302:Object =null;
			public var l302Request:L302Request =null; 
			[Bindable]
			public var systemUser:SystemUser =null;
			[Bindable]
			private var xmlListCollectionUpdate:XMLListCollection ; 
			[Bindable]
			private var xmlListCollectionRegister:XMLListCollection;
			[Bindable]
			private var xmlListCollectionDel:XMLListCollection;
			private var codeArr:Array;//录入机构字段
			private static const PREFIX:String="l302";
			private var comboBoxDataList:ArrayCollection =new ArrayCollection() ;
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				initializeComboBox();
				
				this.systemUser = this.parentApplication.systemUser;
				
				this.certificateDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE,onSelected);
				xmlListCollectionUpdate=new XMLListCollection(modelListUpdate);
				xmlListCollectionRegister=new XMLListCollection(modelListRegister);
				xmlListCollectionDel=new XMLListCollection(modelListDel);

				codeArr=['118','59','68','76','82','92','98','105','112','171'];
			
			}
			
			private function initializeComboBox():void
			{
				var comboBoxDataRequest:ComboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.sql = "select d101_01,d101_02 from D101 where d101_06>2";
				comboBoxDataRequest.flag = "D101";
				comboBoxDataRequest.showPrompt = false;
				this.systemService.getComboBoxData(comboBoxDataRequest);
			}
			
			
			/******************得到数据******************/
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object =  event.result;
				comboBoxDataList = comboBoxDataResponse.comboBoxDataList;
			}
			
			
			private function onSelected(event:GridSelectionEvent):void
			{
				this.vl302 = DataGrid(event.target).selectedItem;
			}
			
			/*----------获取查询条件数据---------*/
			private function initQueryParam():void
			{
				var code:String;
				var l302:L302=new L302();
				l302Request = new L302Request();
				try{
						var type:String = L302_118.getLastSelectedInstitution();
						var l302_118:String = L302_118.getLastSelectedInstitutionCode();
					
						code =type=="8"?l302_118:l302_118.substring(0,Number(type));
						var l30203:String=StringUtil.trim(L302_03.text);
						var l30204:String=StringUtil.trim(L302_04.text);
						if(l30203||l30204)
						{
							l302.l30203=l30203;
							l302.l30204=l30204;
						}else
						{
							l302Request.timeStr=DateField.stringToDate(timeStart.text,"YYYY-MM-DD");
							l302Request.timeEnd=DateField.stringToDate(timeEnd.text,"YYYY-MM-DD");
							l302.l302132=CompMethod.getRadioButtonValue([L302_132]);//是否宫颈结案
							l302.l302137=CompMethod.getRadioButtonValue([L302_137]);//是否上传图片
						}
						l302Request.l302=l302;
						l302Request.suffixSql=' and ('+getSuffixSql(code)+')';
						vl302=null;
				}catch(e:Error)
				{
					Alert.show("查询异常","系统提示");
				}
			}
			
			/**
			 *
			 */
			private function getSuffixSql(code:String):String
			{
				var isFull:Boolean=code.length==14;
				var sql:String=setCodeSql(code,'l302_118',isFull)+
							   setCodeSql(code,'l302_59',isFull)+
							   setCodeSql(code,'l302_68',isFull)+
							   setCodeSql(code,'l302_76',isFull)+
							   setCodeSql(code,'l302_82',isFull)+
							   setCodeSql(code,'l302_92',isFull)+
							   setCodeSql(code,'l302_98',isFull)+
							   setCodeSql(code,'l302_105',isFull)+
							   setCodeSql(code,'l302_112',isFull);
				sql=sql.slice(sql.indexOf('l302_118'));
				trace(sql);
				return sql;
			}
			
			/**
			 *
			 */
			private function setCodeSql(code:String,field:String,isFull:Boolean):String
			{
				var codeSql:String=' or '+field ;
				codeSql+=isFull?'=':' like '
				codeSql+="'"+code;
				codeSql+=isFull?"'":"%'";
				return codeSql;
			}
			
			private function query():void
			{
				_query(1,20);
			}
			
			private function queryL302Handler(event:ResultEvent):void
			{
				var l302Response:Object = event.result;
				var vl302s:ArrayCollection = l302Response.vl302s;
				var rowCount:Number = l302Response.rowCount;
				this.pagerBar.dataGrid = this.certificateDataGrid;
				this.pagerBar.rowCount = rowCount;
				this.pagerBar.resultData = vl302s;
				this.pagerBar.dataBind();
				this.pagerBar.pagerFunction = pagerFunction;
				if(rowCount > 0) {
					this.pagerBar.enabled = true;
				}	
				if(!l302Response.state)
				{
					Alert.show(l302Response.errorMessage,"系统提示");
					return;
				}
			}
			
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				_query(currentPageIndex,pageSize);
			}
			
			public function refresh():void
			{
				_query(this.pagerBar.currentPageIndex,20);
			}
			
			private function _query(currentPageIndex:int,pageSize:int):void
			{
				this.initQueryParam();
				l302Request.parameterPageindex = currentPageIndex;
				l302Request.parameterPagesize = pageSize;
				this.l302Service.queryL302(l302Request);
			}
			
			private function labelFunction(item:Object,col:GridColumn):String
			{
				var idx:int=CompMethod.getDropDownListSelectedIndex(comboBoxDataList,item[col.dataField]);
				var flag:String=!idx?"未登记":comboBoxDataList.getItemAt(idx).label.toString();
				var flagWith:int=flag.length*14;
				col.width=!idx?col.width:flagWith>col.width?flagWith:col.width;
				return flag;
			}
			private function readCard():void
			{
				var arr:Array=CompMethod.readCard();
				if(arr!=null)
				{
					var boolean:Boolean=CompMethod.sex("女",arr[1]);
					if(boolean)
					{
						L302_03.text=arr[0];
						L302_04.text=arr[5];
						query();
					}
				}else
				{					
					Alert.show("读卡失败","系统提示");
				}
			}
			
			/**
			 *
			 */
			private function getItemData(event:MenuEvent):Array
			{
				var dataId:String=event.item.@data;
				var code:String=vl302[PREFIX+codeArr[Number(dataId)]];
				return new Array(dataId,code);
			}
			
			private function itemClickHandler(event:MenuEvent):void
			{
				if(!hasFieldVal(null,null,true))
					return;
			    var state:String=event.item.@currentState;
				var title:String=(event.item.@label).toString().substring(2);
				var window:titleWindow=new titleWindow();
				var id:Object=event.target;
				window.vl302=this.vl302;
				if(id==popUpdate)
				{
					window.state="0";//修改状态
					window.titleName=title+"修改";			
				}			
				else if(id==popRegister)
				{
					window.state="1";//首次登记状态
					window.titleName=title+"登记";					
				}
				
				if(!validate(getItemData(event),id,window.state))
					return;
				window.dataId=state;
				CompMethod.popUpTitleWindow(window,this);
		
			}
			
			
			/**
			 *验证是否符合登记或者修改信息   
			 * 参数1.登记机构
			 * 参数2.点击按钮
			 * 参数3.修改还是登记  状态
			 */
			private function validate(dataArr:Array,id:Object,status:String):Boolean
			{
				var institutionCode:Object=dataArr[1];
				if(status=="1")
				{
					if(id==popRegister&&institutionCode)
					{
						Alert.show("不能重复登记","系统提示");
						return false;
					}
				}
				else if(status=="0") {
					if(dataArr[0]=='7'&&vl302[PREFIX+codeArr[Number(dataArr[0])+1]])//最后诊断修改   并且 随访也登记了 就不让修改
					{
						Alert.show("已登记随访，不能修改最后诊断！清删除随访信息!","系统提示");
						return false;
					}
					
					if(!hasFieldVal(institutionCode,['没有登记无法修改','不是原单位登记的信息，不能修改']))
						return false;
					
				}
				return true;
			}
		
			
			/**
			 *
			 */
			private function hasFieldVal(institutionCode:Object,text:Array,hasL302132:Boolean=false):Boolean
			{
				if(hasL302132)
				{
					if(vl302.l302132)
					{
						Alert.show("宫颈癌已结案，无法进行任何操作!","系统提示");
						return false;
					}
				}else
				{
					if(!institutionCode)
					{
						Alert.show(text[0],"系统提示");
						return false;
					}
					if(institutionCode!=this.systemUser.institutionCode)
					{
						Alert.show(text[1],"系统提示");
						return false;
					}
				}
				
				return true;
			}
			
			
			
			
			private function sfdj():void
			{
				var window:gjajcsf = new gjajcsf();
				window.vl302=vl302;
				CompMethod.popUpTitleWindow(window,this);
			}
			
			private function finishCase():void
			{
				if(!hasFieldVal(null,null,true))
					return;
				else if(!vl302.l302171)
				{
					Alert.show("未登记初筛临床建议功能无法进行结案！","系统提示");
					return;
				}
				else if(!vl302.l302125)
				{
					Alert.show("未登记最后诊断功能无法进行结案！","系统提示");
					return;
				}else if(getCheckEnabled(['2','3','13','17','18','19','20'],
					vl302.l302102.split(','))[0]&&!vl302.l302112)//需要登记随访
				{
					Alert.show("最后诊断为癌前病变或恶性肿瘤，需要登记随访信息才能结案！","系统提示");
					return;
				}
				else if(this.systemUser.institutionCode!=vl302.l302118)
				{
					Alert.show("不是本单位登记的病史是无法结案的！","系统提示");
					return;
				}
						
					Alert.yesLabel="审核并结案";
					Alert.noLabel="结案";
					Alert.cancelLabel="取消";
					Alert.buttonWidth=80;
					Alert.show("结案之后就无法修改对应检查信息，请确认","系统提示",11,this,popHandler);	
					
			
			}
			
			private function popHandler(event:CloseEvent):void
			{
				Alert.yesLabel="是";
				Alert.noLabel="否";
				Alert.buttonWidth=65;
				var detail:int=event.detail;
				if(detail==1||detail==2)
				{
					if(detail==1)
						print('gja','l30201=' +vl302.l30201);
					var window:finishCaseWindow=new finishCaseWindow();
					window.dataArr=new Array(vl302.l30202,vl302.l30203,vl302.l30204,
						vl302.l30205,!Boolean(vl302.l302132),
						false,true);
					CompMethod.popUpTitleWindow(window,this);
				}
				
			}
			
		
			/**
			 *查看图片
			 */
			private function queryPic():void
			{
				var l302137:String=vl302.l302137;
				if(!l302137)
				{
					Alert.show("该信息尚未上传任何图片！","系统提示");
					return;
				}
				var window:picTitleWindow=new picTitleWindow();
				window.picTypeArr=["1","",""];
				window.parentID=vl302.l30201;
				CompMethod.popUpTitleWindow(window,this,true);
			}
			
			private function del_itemClickHandler(event:MenuEvent):void
			{
				
				var dataArr:Array=getItemData(event);
				if(dataArr[0]=='7'&&vl302[PREFIX+codeArr[Number(dataArr[0])+1]])//最后诊断修改   并且 随访也登记了 就不让修改
				{
					Alert.show("已登记随访，不能删除最后诊断！清删除随访信息!","系统提示");
					return ;
				}
				
				if(!hasFieldVal(null,null,true))
					return;
				
				if(!hasFieldVal(dataArr[1],['没有登记无法删除','不是原单位登记的信息，不能删除']))
					return ;
				doDelItem(dataArr[0]);
			}
			
			/**
			 *
			 */
			private function hasOtherCode():Boolean
			{
				for(var i:int=1; i<codeArr.length;i++)
				{
					if(vl302[PREFIX+codeArr[i]])
						return true;
				}
				return false;
			}
			
			/**
			 *
			 */
			private function doDelItem(flag:String):void
			{
				var l302Request:L302Request=new L302Request();
				if(flag!='0')
				{
					var l302:L302=new L302();
					l302.l30201=vl302.l30201;
					l302.l30202=vl302.l30202;
					l302Request.l302=l302;
					l302Request.flag=flag;
					l302Service.renewL302(l302Request);
					
				}else
				{
					if(hasOtherCode())
					{
						Alert.show("该信息其他项已检查，不能删除病史信息！","系统提示");
						return;
					}
					l302Request.l30201=vl302.l30201;
					l302Service.delL302(l302Request);

				}
				
			}
			
			/**
			 *
			 */
			private function delL302Handler(event:ResultEvent):void
			{
				var l302Response:Object=event.result;
				if(l302Response.state)
				{
					this.refresh();
					Alert.show('删除成功',"系统提示");
					return ;
				}
				Alert.show('删除失败',"系统提示");
			}
			/**
			 *
			 */
			private function print(suffixPath:String,param:String):void
			{
				
				navigateToURL(new URLRequest(this.parentApplication.contextRoot + 
					"/print_new/ms/gja/"+suffixPath+".jsp?"+param),null);
			}
			
			private function button1_clickHandler(event:MouseEvent):void
			{
				if(!vl302.l30292)
				{
					Alert.show("该信息没有录入阴道镜检查！",'系统提示');
					return;
				}
				if(vl302.l30285!='1')
				{
					Alert.show("该信息没有接受阴道镜检查！",'系统提示');
					return;
				}
				print('ydjbgd','l30101='+ vl302.l30202+'&isL301=2');
			}
			
		]]>
	</fx:Script>
	<s:Scroller width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup width="100%">
	<mx:TabNavigator width="1200"  chromeColor="#ffffff" creationPolicy="all" id="tab">
		<s:NavigatorContent width="100%" label="综合查询">
			<s:VGroup width="100%">
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
					<s:Label color="#ED1313" fontSize="16"
							 text="友情提示:只要登记过检查都可以查询，跟是否登记过病史无关，结案需要病史登记机构登记！"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
					<s:Label text="病史登记机构"/>
					<component:InstitutionComboBox id="L302_118" width="629"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
				<s:HGroup width="357"  verticalAlign="middle" id="L302_132" gap="35">
					<s:Label width="91" text="宫颈癌结案"/>
					<s:RadioButton groupName="L302_132" label="全部" value="" selected="true"/>
					<s:RadioButton groupName="L302_132" label="已结案" value=" is not null "/>
					<s:RadioButton groupName="L302_132" label="未结案" value=" is null "/>
				</s:HGroup>
				<s:Label text="病史登记日期"/>
					<component:CustomRangeDateField  id="timeStart" isSelectNow="true" isQuerySysDate="false" getRangesDate="{timeEnd.disabledRanges}"/>

				<s:Label text="至"/>
					<component:CustomRangeDateField  id="timeEnd"  isSelectNow="true"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" verticalAlign="middle" id="L302_137" gap="35">
					<s:Label text="上传阴道镜图片"/>
					<s:RadioButton groupName="L302_137" label="全部" value="" selected="true"/>
					<s:RadioButton groupName="L302_137" label="是" value="1"/>
					<s:RadioButton groupName="L302_137" label="否" value="1"/>
					
					<s:HGroup width="100%" height="100%"  verticalAlign="baseline">
						<s:Label text="姓名"/><s:TextInput id="L302_03"/>
						<s:Label text="证件号码"/><s:TextInput id="L302_04" width="200"/>
						<s:Button id="duka1" width="60" label="读卡"   buttonMode="true" enabled="{systemUser.duka=='1'}" click="readCard()"/>
						
					</s:HGroup>  
					
						</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
					
					<s:Button label="查询" click="query()"/>
					<s:Button label="打印" enabled="{vl302!=null}" click="print('gjady','l30101='+ vl302.l30202+'&amp;isL301=2')"/>
					<s:Button label="阴道镜报告单" enabled="{vl302!=null}" click="button1_clickHandler(event)"/>
					<s:Button label="阴道镜检查转诊单" enabled="{vl302!=null}" 
							  click="print('gja','l30201='+vl302.l30201+'&amp;status=2')"  />
					<s:Button label="结案登记"   buttonMode="true" enabled="{vl302!=null}" click="finishCase()"/>	
					<s:Button label="反馈卡" buttonMode="true" enabled="{vl302!=null}" 
							  click="print('gja','l30201='+vl302.l30201+'&amp;status=1')" 
							  />
					<s:Button label="查看图片" buttonMode="true" enabled="{vl302!=null}" click="queryPic()" />
					<!--					<s:Button label="宫颈癌随访登记" buttonMode="true" enabled="{vl302!=null}" click="sfdj()" />
					-->					<mx:MenuBar id="popUpdate"  dataProvider="{xmlListCollectionUpdate}" labelField="@label" buttonMode="true" itemClick="itemClickHandler(event)" enabled="{vl302!=null}"/>
					<mx:MenuBar  id="popRegister" labelField="@label" dataProvider="{xmlListCollectionRegister}"  textIndent="0" buttonMode="true"  itemClick="itemClickHandler(event)" enabled="{vl302!=null}"/>
					<mx:MenuBar  id="popDel" labelField="@label" dataProvider="{xmlListCollectionDel}"  textIndent="0" buttonMode="true"  itemClick="CompMethod.delConfirm(del_itemClickHandler,event)" enabled="{vl302!=null}"/>

				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
	</mx:TabNavigator>
	<s:Scroller y="190" width="1200"  horizontalScrollPolicy="auto"
				verticalScrollPolicy="auto">
		<s:VGroup width="1200" paddingBottom="10">
			<s:DataGrid id="certificateDataGrid" width="100%"  height="340" borderAlpha="0.3" alternatingRowColors="[#FFFFFF,#EEEEEE]" editable="false" rowHeight="22" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn visible="false" dataField="l30201" headerText="主键"/>
						<s:GridColumn width="40" editable="false" headerText="序号" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer"/>
						<s:GridColumn width="140" dataField="l30203" headerText="姓名"/>
						<s:GridColumn width="140" dataField="l30204" headerText="证件号码"/>
						<s:GridColumn width="180" dataField="l30205" headerText="档案编号"/>
						<s:GridColumn width="100" dataField="l30259" headerText="妇科检查" labelFunction="labelFunction"  resizable="false"/>
						<s:GridColumn width="100" dataField="l30268" headerText="HPV检查" labelFunction="labelFunction"  resizable="false"/>
						<s:GridColumn width="100" dataField="l30276" headerText="宫细胞学检查" labelFunction="labelFunction"  resizable="false"/>
						<s:GridColumn width="100" dataField="l302171" headerText="初筛临床建议" labelFunction="labelFunction"  resizable="false"/>
						<s:GridColumn width="100" dataField="l30282" headerText="VIA/VILI检查" labelFunction="labelFunction"  resizable="false"/>
						<s:GridColumn width="100" dataField="l30292" headerText="阴道镜检查" labelFunction="labelFunction"  resizable="false"/>
						<s:GridColumn width="100" dataField="l30298" headerText="组织病理检查" labelFunction="labelFunction"  resizable="false"/>
						<s:GridColumn width="100" dataField="l302105" headerText="最后诊断" labelFunction="labelFunction"  resizable="false"/>
						<s:GridColumn width="100" dataField="l302112" headerText="随访治疗" labelFunction="labelFunction"  resizable="false"/>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
			<component:PagerBar id="pagerBar" enabled="false" isExcel="false" isExcel2="false" isPrinter="false"/>
		</s:VGroup>	
	</s:Scroller>
	</s:VGroup>
	</s:Scroller>
</s:Module>

