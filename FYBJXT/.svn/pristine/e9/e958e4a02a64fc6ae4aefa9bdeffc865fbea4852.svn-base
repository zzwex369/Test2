<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:component="com.xyw.sys.custom.component.*" creationComplete="moduleCreationCompleteHandler(event)">
	<fx:Declarations>
		<s:RemoteObject id="e704Service" destination="e704Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryE704"  result="queryE704Handler(event)"/>
			<s:method name="deleteE704"  result="deleteE704Handler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		mx|GridItem
		{
			horizontalAlign:left;
			verticalAlign:middle;
		}
		s|TextInput
		{
			fontFamily:微软雅黑;
		}
		s|ComboBox{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomComboBoxSkin");
			
		}
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		s|DataGrid
		{
			borderAlpha:"0.3";
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDataGridSkin");
			alternatingRowColors:"[#FFFFFF,#EEEEEE]";
		}
		
		s|TextInput:normalWithPrompt {
			color: #D60505;
			fontStyle:normal;
		}
		mx|ToolTip
		{
			fontSize:15;  
			color:#FF6699; 
		}
		
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.etbj.etsl.model.E704Request;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.custom.component.CustomIcon;
			import com.xyw.sys.model.SystemUser;
			
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.events.GridSelectionEvent;
			
			[Bindable]
			private var systemUser:SystemUser =null;
			private var e704Request:E704Request;
			public var ve704:Object;
			private var delefalg:Boolean = false;
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				
				this.systemUser = this.parentApplication.systemUser;
			}
			 
			private function query_():void
			{
				e704Request = new E704Request();
				this.initQueryParam();
				e704Request.parameterPageindex = 1;
				e704Request.parameterPagesize = 20;
				this.e704Service.queryE704(e704Request);
			}
			private function initQueryParam():void
			{
				var type:String = this.jigou.getLastSelectedInstitution();
				var jigou_:String = this.jigou.getLastSelectedInstitutionCode();
				
				e704Request.jigou = (type == "10")?jigou_:jigou_.substring(0,Number(type));
				
				e704Request.e70403=StringUtil.trim(this.e704_03.text);
				e704Request.e70404=StringUtil.trim(this.e704_04.text);
				
				if(date_id.selected){
					e704Request.e70416_str = DateField.stringToDate(timeStart.text,'YYYY-MM-DD');
					e704Request.e70416_end = DateField.stringToDate(timeEnd.text,'YYYY-MM-DD');
				}else{
					e704Request.e70406_str = DateField.stringToDate(timeStart.text,'YYYY-MM-DD');
					e704Request.e70406_end = DateField.stringToDate(timeEnd.text,'YYYY-MM-DD');
				}
				
			}
			private function queryE704Handler(event:ResultEvent):void{
				var e704Response:Object = event.result;
				var rowCount:Number = e704Response.rowCount;
				if(e704Response.falg){
					this.pagerBar.dataGrid = this.certificateDataGrid;
					this.pagerBar.rowCount = rowCount;
					this.pagerBar.resultData = e704Response.ve704s;
					this.pagerBar.dataBind();
					this.pagerBar.pagerFunction = pagerFunction;
					if(rowCount > 0) {
						this.pagerBar.enabled = true;
					}else{
						if(!delefalg){
							Alert.show("暂无数据!","系统提示");
						}
					}
					this.certificateDataGrid.dataProvider = e704Response.ve704s;
					this.ve704 = null;
				}else{
					
					Alert.show("请稍后重试","系统提示");
				}
				delefalg = false;
			}
			private function delete_(event:Event):void{
				if(this.ve704 == null){  
					Alert.show("请选择要操作的行","系统提示");
					return;
				}
				if(ve704.e70415!=systemUser.institutionCode){
					Alert.show("不是本机构录入的信息,不能删除","系统提示");
					return;
				}
				Alert.yesLabel = '是'; 
				Alert.noLabel = '否';
				Alert.show('确认删除信息？','删除登记信息',1|2,this,deleteValidate);
			}
			protected function deleteValidate(event:CloseEvent):void
			{
				if(event.detail == Alert.YES){
					e704Request = new E704Request();
					e704Request.zhujian=ve704.e70401;
					this.e704Service.deleteE704(e704Request);
				}
			}
			private function deleteE704Handler(event:ResultEvent):void{
				var e704Response:Object = event.result;
				if(e704Response.falg){
					Alert.show("删除成功", "系统提示");
					delefalg = true;
					refresh();
					this.ve704 = null;
				}else{
					Alert.show("请稍后重试","系统提示");
				}
			}
			private function update_(event:Event):void{
				if(this.ve704 == null){
					Alert.show("请选择要操作的行！","系统提示");
					return;
				}
				if(ve704.e70415!=systemUser.institutionCode){
					Alert.show("不是本机构录入的信息,不能修改","系统提示");
					return;
				}
				var window:title = new title();
				window.ve704 = this.ve704;
				CompMethod.popUpTitleWindow(window,this,true);
				window.addEventListener("ok_click",refresh1);
				
			}
			public function refresh1(event:Event):void{
				this.ve704=null;
				refresh();
			}
			public function refresh():void
			{
				e704Request = new E704Request();
				this.initQueryParam();
				e704Request.parameterPageindex = this.pagerBar.currentPageIndex;
				e704Request.parameterPagesize = 20;
				this.e704Service.queryE704(e704Request);
			}
			private function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				e704Request=new E704Request();
				this.initQueryParam();
				e704Request.parameterPageindex = currentPageIndex;
				e704Request.parameterPagesize = pageSize;
				this.e704Service.queryE704(e704Request);
			}
			private function onSelected(event:GridSelectionEvent):void
			{
				this.ve704 = DataGrid(event.target).selectedItem;
			}
			protected function readCard_B(event:MouseEvent):void
			{
				try
				{
					var array:Array = CompMethod.read_card(null);//性别
					if(!array)
						return ;
					//readCard是调用index.js下的函数，读卡涉及index.jsp和index.js两个文件
						
					var sex:String = array[1];//性别
						
					this.e704_03.text = array[0];//姓名
					this.e704_04.text = array[5];//身份证号
						
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			private function setStringDate(item:Object, column:GridColumn):String
			{
				var date:Date=item[column.dataField];
				return DateField.dateToString(date,"YYYY-MM-DD");
			}
		]]>
	</fx:Script>
	<s:Scroller x="1" y="1" width="100%" height="100%" horizontalScrollPolicy="auto"
				verticalScrollPolicy="auto">
		<s:VGroup width="100%">
			<mx:TabNavigator width="1155" chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent width="100%" label="综合查询">
					<s:VGroup>
						<s:HGroup width="100%" paddingBottom="0" paddingLeft="6" paddingRight="10"
								  verticalAlign="middle">
							<s:Label text="录入机构"/>
							<component:InstitutionComboBox id="jigou"  width="942" villageVisible="true"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="0" paddingLeft="6" paddingRight="10"
								  verticalAlign="middle">
							<s:Label text="儿童姓名"/><s:TextInput id="e704_03"/>
							<s:Label text="证号号码"/><s:TextInput id="e704_04" width="184"/>
							<s:Button label="读卡" click="readCard_B(event)" icon="{CustomIcon.READCARD}" enabled="{systemUser.duka=='1'}"/>
						</s:HGroup>
						<s:HGroup width="100%" height="100%" paddingLeft="6" paddingBottom="1">
							<s:RadioButton label="录入日期" buttonMode="true" groupName="date" id="date_id"
										   selected="true" value="2"/>
							<s:RadioButton label="随访日期" buttonMode="true" groupName="date" value="3"/>
							
							<component:CustomRangeDateField  id="timeStart" isSelectFirst="true" />
							<s:Label paddingTop="4" text="至"/>
							<component:CustomRangeDateField  id="timeEnd"  isSelectNow="true"/>
							<s:Button label="查询" click="query_()" icon="{CustomIcon.QUERY}"/>
							<s:Button label="修改" click="update_(event)" icon="{CustomIcon.MODYFY}"/>
							<s:Button label="删除" click="delete_(event)" icon="{CustomIcon.DEL}"/>
						</s:HGroup>  
					</s:VGroup>
				</s:NavigatorContent>
				</mx:TabNavigator>
			<s:VGroup id="vgroupDataGrid" height="400" paddingRight="5"  width="1155">
				<s:DataGrid id="certificateDataGrid" height="328"
							alternatingRowColors="[#FFFFFF,#EEEEEE]" editable="false"
							rowHeight="22" selectionChange="onSelected(event)"
							width="1155">
					<s:columns>
						<s:ArrayList>
							<s:GridColumn width="40" editable="false" headerText="序号" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer"/>
							<s:GridColumn width="100" dataField="e70403" headerText="儿童姓名"/>
							<s:GridColumn width="150" dataField="e70404" headerText="身份证号"/>
							<s:GridColumn width="100" dataField="e70405" headerText="随访人"/>
							<s:GridColumn width="110" dataField="e70406" headerText="随访日期" labelFunction="setStringDate"/>
							<s:GridColumn width="170" dataField="e70409_zh" headerText="随访单位"/>
							<s:GridColumn width="100" dataField="e70417" headerText="录入人"/>
							<s:GridColumn width="110" dataField="e70416" headerText="录入日期" labelFunction="setStringDate"/>
							<s:GridColumn dataField="e70415_zh" headerText="录入单位"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>					
				<component:PagerBar id="pagerBar" enabled="false" isExcel="false" isExcel2="false" isPrinter="false"/>
			</s:VGroup>
			</s:VGroup>
		</s:Scroller>
						
</s:Module>
