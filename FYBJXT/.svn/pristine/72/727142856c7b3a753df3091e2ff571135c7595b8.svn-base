<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%" height="100%"
		  creationComplete="moduleCreationCompleteHandler(event)"
		  xmlns:component="com.xyw.sys.custom.component.*">
	<fx:Declarations>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="certificateApplyService" destination="certificateApplyService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="certificateApply" result="certificateApplyHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		mx|GridItem
		{
			horizontalAlign:right;
			verticalAlign:middle;
		}
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;
			cornerRadius:3;
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
			cornerRadius:5;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.csyxzm.model.D501;
			import com.xyw.module.csyxzm.model.D501Request;
			import com.xyw.module.csyxzm.model.D501Response;
			import com.xyw.sys.constant.SystemConstant;
			import com.xyw.sys.event.CustomAreaCityEvent;
			import com.xyw.sys.event.CustomAreaCountyEvent;
			import com.xyw.sys.event.CustomAreaTownEvent;
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.ComboBoxDataResponse;
			import com.xyw.sys.model.SessionException;
			import com.xyw.sys.model.SystemUser;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			public var systemUser:SystemUser =  null;
			public var d501:D501 = null;
			public var d501Request:D501Request = null;
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				systemUser = this.parentApplication.systemUser;
				this.d501_05.enabled = false;
				this.d501_09.enabled = false;
				this.d501_09.text = this.systemUser.institution;
				this.d501_07.addEventListener(FocusEvent.FOCUS_OUT, onD50107FacusOutHandler);
				this.d501_08.addEventListener(FocusEvent.FOCUS_OUT, onD50108FocusOutHandler);
				this.initilizeComboBox();
			}
			
			private function initilizeComboBox():void
			{
				var comboBoxDataRequest:ComboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				var areaCode:String = this.systemUser.areaCode;
				if(areaCode.length == 6) {
					//areaCode = areaCode + "___";
					areaCode = areaCode + "%"
				} else {
					//areaCode = areaCode + "__";
					areaCode = areaCode + "%"
				}
				comboBoxDataRequest.sql = "select t.d101_01, t.d101_02 from D101 t where t.d101_11 = " +
											this.systemUser.institutionCode ;
				comboBoxDataRequest.flag = "D101";
				
				this.systemService.getComboBoxData(comboBoxDataRequest);
			}
			
			private function onD50107FacusOutHandler(event:FocusEvent):void
			{
				if(this.d501_07.text != "" && this.d501_08.text != "")
				{
					var d501_08_text_num:Number = Number(d501_08.text);
					var d501_07_text_num:Number = Number(d501_07.text);
					if(d501_07_text_num > d501_08_text_num) {
						Alert.show("出生证起始编号不能超出终止编号", "系统提示");
						return;
					}
					this.d501_05.text = String(d501_08_text_num - d501_07_text_num + 1);
				}
			}
			
			private function onD50108FocusOutHandler(event:FocusEvent):void
			{
				if(this.d501_07.text != "" && this.d501_08.text != "")
				{
					var d501_08_text_num:Number = Number(d501_08.text);
					var d501_07_text_num:Number = Number(d501_07.text);
					if(d501_07_text_num > d501_08_text_num) {
						Alert.show("出生证起始编号不能超出终止编号", "系统提示");
						return;
					}
					this.d501_05.text = String(d501_08_text_num - d501_07_text_num + 1);
				}
			}
			
			private function showHandle(event:CloseEvent):void
			{
				if(this.d501_07.text == null || this.d501_07.text == "")
				{
					this.d501_08.focusEnabled = false;
					this.d501_07.setFocus();
				}else if(this.d501_08.text == null || this.d501_08.text == "")
				{
					this.d501_08.focusEnabled = false;
					this.d501_08.setFocus();
				}
			}
			
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object = event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				if(flag == "D101") {
					this.d501_02.dataProvider = comboBoxDataList;
					this.d501_02.selectedIndex = 0;
				}else if(flag == "D101_04")
				{
					var areaCode:String = comboBoxDataList.getItemAt(1).data;
					this.area.setAreaCode(areaCode);
				}
			}
			
			
			private function changeAreaName():void
			{
				var comboBoxDataRequest:ComboBoxDataRequest = null;
				if(this.d501_02.selectedIndex > 0)
				{
				
					var d50102:String = this.d501_02.selectedItem.data;
					
					comboBoxDataRequest = new ComboBoxDataRequest();
					comboBoxDataRequest.showPrompt = true;
					comboBoxDataRequest.sql = "select t.d101_04, t.d101_02 from D101 t where t.d101_01 = '" + d50102 + "'";
					comboBoxDataRequest.flag = "D101_04";
					
					this.systemService.getComboBoxData(comboBoxDataRequest);
				}else if(this.d501_02.selectedIndex == 0)
				{
					comboBoxDataRequest = new ComboBoxDataRequest();
					comboBoxDataRequest.showPrompt = true;
					comboBoxDataRequest.sql = "select t.d101_04, t.d101_02 from D101 t where t.d101_01 = '" + this.systemUser.institutionCode + "'";
					comboBoxDataRequest.flag = "D101_04";
					
					this.systemService.getComboBoxData(comboBoxDataRequest);
				}
			}
			
			private function certificateVlidateApply(event:MouseEvent):void
			{
				
				var d501_14:String = this.area.getAreaCode();
				
				if(this.systemUser.areaCode.length == 6) {
					/*
					if(d501_14.length < 8)
					{
						Alert.show("地址应选到乡!", "系统提示");
						this.applyButton.enabled = false;
						return;
					}*/
				} else if(this.systemUser.areaCode.length == 4) {
					if(d501_14.length < 6) {
						Alert.show("地址应选到县!", "系统提示");
						this.applyButton.enabled = false;
						return;
					}
				} else if(this.systemUser.areaCode.length == 2) {
					if(d501_14.length < 4) {
						Alert.show("地址应选到市!", "系统提示");
						this.applyButton.enabled = false;
						return;
					}
				}
					
				
				if(this.d501_02.selectedItem.data == null || this.d501_02.selectedItem.data == "") {
					Alert.show("申领单位不能为空!", "系统提示");
					this.d501_03.setFocus();
					this.applyButton.enabled = false;
					return;
				}
				
				if(this.d501_03.text == null || this.d501_03.text == "") {
					Alert.show("申请人1不能为空!", "系统提示");
					this.d501_03.setFocus();
					this.applyButton.enabled = false;
					return;
				}
				
				if(this.d501_04.text == null || this.d501_04.text == "") {
					Alert.show("申请人2不能为空!", "系统提示");
					this.d501_04.setFocus();
					this.applyButton.enabled = false;
					return;
				}
				
				if(this.d501_06.text == null || this.d501_06.text == "") {
					Alert.show("出生证首字母不能为空", "系统提示");
					this.d501_06.setFocus();
					this.applyButton.enabled = false;
					return;
				}
				
				if(this.d501_07.text == null || this.d501_07.text == "") {
					Alert.show("出生证起始编号不能为空!", "系统提示");
					this.d501_07.setFocus();
					this.applyButton.enabled = false;
					return;
				}
				
				if(this.d501_08.text == null || this.d501_08.text == "") {
					Alert.show("出生证终止编号不能为空!", "系统提示");
					this.d501_08.setFocus();
					this.applyButton.enabled = false;
					return;
				}
				
				if(this.d501_10.text == null || this.d501_10.text == "")
				{
					Alert.show("发放人1不能为空!", "系统提示");
					this.d501_10.setFocus();
					this.applyButton.enabled = false;
					return;
				}
				
				if(this.d501_11.text == null || this.d501_11.text == "")
				{
					Alert.show("发放人1不能为空!", "系统提示");
					this.d501_11.setFocus();
					this.applyButton.enabled = false;
					return;
				}
				
				if(this.d501_13.text == null || this.d501_13.text == "")
				{
					Alert.show("发放地点不能为空!", "系统提示");
					this.d501_13.setFocus();
					this.applyButton.enabled = false;
					return;
				}
				
				
				var d501_02_text:String = this.d501_02.selectedItem.data;
				var d501_03_text:String = this.d501_03.text;
				var d501_04_text:String = this.d501_04.text;
				var d501_05_text:String = this.d501_05.text
				var d501_06_text:String = this.d501_06.text;
				var d501_07_text:String = this.d501_07.text;
				var d501_08_text:String = this.d501_08.text;
				var d501_09_text:String = this.systemUser.institutionCode;
				var d501_10_text:String = this.d501_10.text;
				var d501_11_text:String = this.d501_11.text;
				var d501_12_date:Date = this.d502_12.selectedDate;
				var d501_13_text:String = this.d501_13.text;
				
				
				d501 = new D501();
				d501.d50102 = d501_02_text;
				d501.d50103 = d501_03_text;
				d501.d50104 = d501_04_text;
				d501.d50105 = Number(d501_05_text);
				d501.d50106 = d501_06_text;
				d501.d50107 = d501_07_text;
				d501.d50108 = d501_08_text;
				d501.d50109 = d501_09_text;
				d501.d50110 = d501_10_text;
				d501.d50111 = d501_11_text;
				d501.d50112 = d501_12_date;
				d501.d50113 = d501_13_text;
				d501.d50114 = d501_14;
				
				d501Request = new D501Request();
				d501Request.d501 = d501;
				
				var window:Confirmation = new Confirmation();
				window.owner = this;
				
				window.d501 = this.d501;
				window.d50102 = this.d501_02.selectedItem.label;
				window.d50109 = this.systemUser.institution;
				window.d50114 = this.area.getAreaName();
				
				PopUpManager.addPopUp(window,this);
				var x:Number = (this.parentApplication.mdiCanvas.width - window.width) / 2;
				var y:Number = (this.parentApplication.mdiCanvas.height - window.height) / 2;
				window.move(x, y);
				
				this.applyButton.enabled = true;
			}
			
			private function certificateApply(event:MouseEvent):void
			{
				this.applyButton.enabled = false;
				this.certificateApplyService.certificateApply(d501Request);
			}
			
			private function getDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:ComboBoxData = arrayCollection.getItemAt(i) as ComboBoxData;
					if(comboBoxDataP.data == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			private function certificateApplyHandler(event:ResultEvent):void
			{
				var d501Response:Object = event.result;
				if(d501Response.errorMessage == null) {
					Alert.show(d501Response.promptMessage, "系统提示");
					this.applyButton.enabled = false;
				} else {
					Alert.show(d501Response.errorMessage, "系统提示");
				}
			}
			
			private function faultHandler(event:FaultEvent):void
			{
				var sessionException:SessionException = event.fault.rootCause as SessionException;
				var errorCode:String = "";
				try {
					errorCode = sessionException.errorCode;
					if(errorCode == SystemConstant.LOGIN_USER_INFO_IS_NULL) {
						Alert.show(sessionException.errorMessage, "系统提示");
						return;
					}
				} catch(error:Error) {
					Alert.show("系统异常", "系统提示");
				}
			}
		]]>
	</fx:Script>
	<s:VGroup width="100%">
		<mx:TabNavigator  width="100%" chromeColor="#ffffff" creationPolicy="all">
			<s:NavigatorContent  label="出生证申领" width="100%">
				<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
					<mx:Grid>
						<mx:GridRow>
							<mx:GridItem width="72">
								<s:Label text="申领人地址"/>
							</mx:GridItem>
							<mx:GridItem>
								<component:AreaComboBox id="area" enabled="false"/>
							</mx:GridItem>
						</mx:GridRow>
					</mx:Grid>
					
					<mx:Grid>
						<mx:GridRow>
							<mx:GridItem>
								<s:Label text="申请单位"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:DropDownList id="d501_02" width="150" change="changeAreaName()"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label text="申领人1"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:TextInput id="d501_03"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label text="申领人2"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:TextInput id="d501_04"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label text="首字母"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:TextInput id="d501_06" width="128"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem>
								<s:Label text="起始编号"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:TextInput id="d501_07" width="150" restrict="0-9/."/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label text="终止编号"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:TextInput id="d501_08" restrict="0-9/."/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label text="申领数量"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:TextInput id="d501_05"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label text="发放时间"/>
							</mx:GridItem>
							<mx:GridItem>
								<mx:DateField id="d502_12" yearNavigationEnabled="true" selectedDate="{new Date()}" width="128" dayNames='["日","一","二","三","四","五","六"]'
											  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
											  formatString="YYYY-MM-DD"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem>
								<s:Label text="发放单位"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:TextInput id="d501_09" width="150"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label text="发放人1"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:TextInput id="d501_10"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label text="发放人2"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:TextInput id="d501_11"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label text="发放地点"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:TextInput id="d501_13"/>
							</mx:GridItem>
						</mx:GridRow>
					</mx:Grid>
				</s:VGroup>	
			</s:NavigatorContent>
		</mx:TabNavigator>
		<s:HGroup verticalAlign="middle" horizontalAlign="right" paddingBottom="20" paddingTop="10" paddingLeft="10" paddingRight="100" width="100%" height="30">
			<s:Button label="确定" id="vlidateApplyButton" click="certificateVlidateApply(event)"/>
			<s:Button label="确定保存" id="applyButton" click="certificateApply(event)" enabled="false"/>
		</s:HGroup>
	</s:VGroup>
</s:Module>
