<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="1200" backgroundColor="white" chromeColor="#5CACEE" close="removeWindow()"
			   cornerRadius="5" creationComplete="initParaCounty()" horizontalCenter="0"
			   title="更新公告" verticalCenter="0"
			   backgroundColor.normal="#E4E2E2">
	<fx:Declarations>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getArticleB" result="getArticleBHandler(event)"/>
			<s:method name="setArticleB" result="setArticleBHandler(event)" fault="faultHandler(event)"/>
			<s:method name="setNotice" result="setNoticeHandler(event)" fault="method1_faultHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.xyw.sys.constant.SystemConstant;
			import com.xyw.sys.model.NoticeRequest;
			import com.xyw.sys.model.SessionException;
			
			import flash.utils.setTimeout;
			
			import flashx.textLayout.conversion.TextConverter;
			
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			public var userCode:String;
			public var quanxian:String;
			[Bindable]
			public var alterNotice:String;
			[Bindable]
			public var gonggao:String;
			private function removeWindow():void
			{
				PopUpManager.removePopUp(this);
			}
			
			private function _keyUpHandler(event:KeyboardEvent):void
			{
				if(event.keyCode==Keyboard.ESCAPE)
					removeWindow();
			}
			
			private function initPara():NoticeRequest
			{
				var noticeRequest:NoticeRequest = new NoticeRequest();
				var path:String = "policyPaper/renewNotice/";
				var fileName:String = "ggMessage"+quanxian;
				noticeRequest.fileName = fileName;
				noticeRequest.path = path;
				return noticeRequest;
			}
			
			private function initParaCounty():void
			{
				this.addEventListener(KeyboardEvent.KEY_DOWN,_keyUpHandler);
				this.setFocus();
				getArticleB();
			}
			
			private function getArticleB():void
			{
				var noticeRequest:NoticeRequest = initPara();
				this.systemService.getArticleB(noticeRequest);
			}
			
			 private function getArticleBHandler(event:ResultEvent):void
			{
				var noticeResponse:Object = event.result;
				var fileName:String = noticeResponse.errorMessage;
				
				if(fileName == ("ggMessage"+quanxian))
					//this.provinceNoticeMessage.htmlText = noticeResponse.message;
					this.ggMessage.textFlow = TextConverter.importToFlow(noticeResponse.message,TextConverter.TEXT_FIELD_HTML_FORMAT);
			} 
			
			private function clickHandler(event:MouseEvent):void
			{		
				if(this.gonggao=='2')
					systemService.setNotice(userCode,"1");//1关闭提示
				else
					this.removeWindow();
			}
			private function setNoticeHandler(event:ResultEvent):void
			{
				var flag:Object=event.result;
				var message:String=flag?"修改成功":"修改失败,请联系客服";
				this.gonggao=flag?"1":this.gonggao;
				Alert.show(message,"系统提示",1,this,
					function(event:CloseEvent):void{
						removeWindow();
					});
			}
			
			private function button1_clickHandler(event:MouseEvent):void
			{
				
				this.ggMessage.textFlow = TextConverter.importToFlow(richText.htmlText,TextConverter.TEXT_FIELD_HTML_FORMAT);
			}
			
			private function save(event:MouseEvent):void
			{
				var noticeRequest:NoticeRequest = initPara();
				noticeRequest.message = this.richText.htmlText;
				this.systemService.setArticleB(noticeRequest);
			}
			
			private function setArticleBHandler(event:ResultEvent):void
			{
				var noticeResponse:Object = event.result as Object;
				if(noticeResponse.errorMessage == null)
				{
					Alert.show(noticeResponse.promptMessage,"系统提示",1,this,
						function (event:CloseEvent):void{
							getArticleB();
						});
				}else
				{
					Alert.show(noticeResponse.errorMessage,"系统提示");
				}
			}
			
			private function faultHandler(event:FaultEvent):void
			{
				var sessionException:SessionException = event.fault.rootCause as SessionException;
				var errorCode:String = "";
				try {
					errorCode = sessionException.errorCode;
					 if(errorCode == SystemConstant.LOGIN_USER_INFO_IS_NULL) {
						Alert.show(sessionException.errorMessage, "系统提示");
						return;
					} 
				} catch(error:Error) {
					Alert.show("系统异常", "系统提示");
				}
			}
			
			private function button2_clickHandler(event:MouseEvent):void
			{
				var label:String=event.target.label;
				event.target.label=(label=="取消编辑")?"编辑":"取消编辑";
				this.currentState=(this.currentState==this.states[0].name)?this.states[1].name:this.states[0].name;
			
				
			}
			
			private function enterFrameHandler(event:Event):void
			{
				var x:Number = (this.owner.width - this.width) / 2;
				var y:Number = (this.owner.height - this.height) / 2;
				this.move(x, y);
				
			}
			
			private function enterStateHandler(event:FlexEvent):void
			{
				this.addEventListener(Event.ENTER_FRAME,enterFrameHandler);
				
			}
			
			protected function method1_faultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.message);
				
			}
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>
		<s:State name="special" enterState="enterStateHandler(event)"/>
	</s:states>
	<s:Scroller  width="100%" height="100%" chromeColor="#CCCCCC" includeIn="normal,special"
				horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup width="100%" paddingBottom="20" paddingTop="20"
				  contentBackgroundColor.normal="#CCCCCC">
			<s:HGroup width="100%" horizontalAlign="center" paddingBottom="20">
				<s:Label fontSize="20" fontStyle="italic" fontWeight="bold" text="更新公告"/>
			</s:HGroup>
			<s:VGroup width="100%" includeIn="special">
				<mx:RichTextEditor width="100%" height="200" id="richText"/>
			</s:VGroup>
			<s:VGroup width="100%">
				<s:TextArea id="ggMessage" width="100%" height="270"
							editable="false"/>			
			</s:VGroup>
			<s:HGroup width="100%" horizontalAlign="right" paddingRight="20" gap="15">
				<s:CheckBox label="不再提示" buttonMode="true" id="select" selected="{gonggao=='2'}" visible="{gonggao!='1'}"/>
				<s:Button label="关闭" cornerRadius="5" click="clickHandler(event)" buttonMode="true"/>
				<s:Button label="编辑" cornerRadius="5" click="button2_clickHandler(event)"
						  buttonMode="true" visible="{alterNotice=='2'}"/>
				<s:Button label="预览" cornerRadius="5" includeIn="special"
						  click="button1_clickHandler(event)" buttonMode="true"/>
				<s:Button label="清空" cornerRadius="5" includeIn="special"
						  click="richText.text=''" buttonMode="true"/>
				<s:Button label="保存修改" cornerRadius="5" includeIn="special"
						  click="save(event)" buttonMode="true"/>
			</s:HGroup>
		</s:VGroup>
	</s:Scroller>
</s:TitleWindow>
