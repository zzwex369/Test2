<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:component = "com.xyw.sys.custom.component.*"
		  xmlns:fnrxada="com.xyw.module.msss.la.fnrxada.*"
		  width="100%" height="100%" 
		  creationComplete="init()">
	<fx:Declarations>
		<s:RemoteObject id="systemService" destination="systemService"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="l401Service" destination="l401Service"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="saveL401" result="saveL401Handler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		s|DataGrid
		{
			borderAlpha:"0.3";
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDataGridSkin");
			alternatingRowColors:"[#FFFFFF,#EEEEEE]";
		}
		s|TextInput
		{
			fontFamily:"微软雅黑";
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.msss.la.model.L401;
			import com.xyw.module.msss.la.model.L401Request;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			[Bindable]
			private var systemUser:SystemUser=null;
			private var comboBoxDataRequest:ComboBoxDataRequest;
			private var i:int=0;
			private function init():void
			{
				systemUser=this.parentApplication.systemUser;
				var date:Date=new Date();
				L401_19.selectedDate=date;
				initializeComboBox();
			}
			/******************下拉框填充数据******************/
			private function initializeComboBox():void
			{
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select t.d101_01, t.d101_02 from D101 t where t.D101_01 = " + this.systemUser.institutionCode + " or t.D101_11 = " + this.systemUser.institutionCode;
				comboBoxDataRequest.flag = "D101";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from  S301_03 t";
				comboBoxDataRequest.flag = "S301_03";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from  S301_04 t";
				comboBoxDataRequest.flag = "S301_04";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_06 t";
				comboBoxDataRequest.flag = "S301_06";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from  S601_01 t";
				comboBoxDataRequest.flag = "S601_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
			}
			/******************得到数据******************/
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object =  event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				if(flag == "D101")
				{
					i = CompMethod.getDropDownListSelectedIndex(comboBoxDataList, this.systemUser.institutionCode);
					this.L401_17.dataProvider = comboBoxDataList;
					this.L401_17.selectedIndex = i;	
				}else if(flag=="S301_03")
				{
					L401_08.dataProvider=comboBoxDataList;
					i= CompMethod.getDropDownListSelectedIndex(comboBoxDataList, "CHN");
					L401_08.selectedIndex=i;
				}else if(flag=="S301_04")
				{
					L401_07.dataProvider=comboBoxDataList;
					L401_07.selectedIndex=1;
				}else if(flag=="S301_06")
				{
					L401_03.dataProvider=comboBoxDataList;
					L401_03.selectedIndex=1;
				}else if(flag=="S601_01")
				{
					L401_09.dataProvider=comboBoxDataList;
					L401_09.selectedIndex=0;
				}
				
			}
			/*******************验证*****************/
			private function saveL401(event:MouseEvent):void
			{
				if(L401_02.text=="")
				{
					Alert.show("请输入姓名","系统提示");
					return;
				}
				if(L401_03.selectedIndex==0)
				{
					Alert.show("请选择证件类型","系统提示");
					return;
				}
				if(L401_04.text=="")
				{
					Alert.show("请输入证件号码","系统提示");
					return ;
				}
				if(L401_03.selectedIndex==1)
				{
					var patternMonther:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
					if(!patternMonther.test(this.L401_04.text))
					{
						Alert.show("身份证号格式错误","系统提示");
						return ;
					}
				}
				if(L401_05.text=="")
				{
					Alert.show("请选择出生日期","系统提示");
					return ;
				}
				if(L401_06.text=="")
				{
					Alert.show("请输入年龄","系统提示");
					return ;
				}
				if(L401_07.selectedIndex==0)
				{
					Alert.show("请选择民族","系统提示");
					return ;
				}
				if(L401_09.selectedIndex==0)
				{
					Alert.show("请选择文化程度","系统提示");
					return ;
				}
				if(L401_10.text=="")
				{
					Alert.show("请输入联系方式","系统提示");
					return ;
				}
				if(!CompMethod.validateAreaCode(L401_11.getAreaCode(),"4113"))
				{
					Alert.show("户口地址选择到最下级","系统提示");
					return ;
				}
				if(L401_12.text=="")
				{
					Alert.show("请输入户口地址详情","系统提示");
					return ;
				}
				if(!CompMethod.validateAreaCode(L401_13.getAreaCode(),"4113"))
				{
					Alert.show("现住址选择到最下级","系统提示");
					return ;
				}
				if(L401_18.text=="")
				{
					Alert.show("请输入录入人员信息","系统提示");
					return ;
				}
				_save();
			}
			private function _save():void
			{
				var l401:L401=new L401();
				var l401Request:L401Request=new L401Request();
				l401.l40102=StringUtil.trim(L401_02.text);				
				l401.l40103=L401_03.selectedItem.data;
				l401.l40104=StringUtil.trim(L401_04.text);
				l401.l40105=DateField.stringToDate(L401_05.text,"YYYY-MM-DD");
				l401.l40106=Number(StringUtil.trim(L401_06.text));
				l401.l40107=L401_07.selectedItem.data;
				l401.l40108=L401_08.selectedItem.data;
				l401.l40109=L401_09.selectedItem.data;
				l401.l40110=StringUtil.trim(L401_10.text);
				l401.l40111=L401_11.getAreaCode();
				l401.l40112=StringUtil.trim(L401_12.text);
				l401.l40113=L401_13.getAreaCode();
				l401.l40117=L401_17.selectedItem.data;
				l401.l40118=StringUtil.trim(L401_18.text);
				l401.l40119=DateField.stringToDate(L401_19.text,"YYYY-MM-DD");
				l401Request.l401=l401;
				l401Service.saveL401(l401Request);				
			}
			
			private function saveL401Handler(event:ResultEvent):void
			{
				CompMethod.resultHandler(event);		
			}

			private function readCard():void
			{
				var arr:Array=CompMethod.readCard();
				
				if(arr!=null)
				{
					var boolean:Boolean=CompMethod.sex("女",arr[1]);
					if(boolean)
					{
					L401_02.text=arr[0];
					L401_04.text=arr[5];
					L401_06.text=CompMethod.getAge(arr[5]);
					L401_05.text=arr[3];
					L401_07.selectedIndex=CompMethod.getDropDownListSelectedIndex(ArrayCollection(L401_07.dataProvider),arr[2],true);
					L401_12.text=arr[4];
					if(L401_03.selectedIndex==0)L401_03.selectedIndex=1;
					}
				}else
				{					
					Alert.show("读卡失败","系统提示");
				}
			}
			private function setAge():void
			{
				if(L401_03.selectedIndex==1&&StringUtil.trim(L401_04.text).length>= 16)
				{
					L401_06.text=CompMethod.getAge(StringUtil.trim(L401_04.text));
					L401_05.text=CompMethod.getBirthday(StringUtil.trim(L401_04.text));
				}
			}
			
		]]>
	</fx:Script>
	<s:Scroller  width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup paddingBottom="20" paddingLeft="10" paddingRight="10" paddingTop="10">
			<s:VGroup id="djVGroup">
				<mx:TabNavigator width="1150" chromeColor="#ffffff" creationPolicy="all">
					<s:NavigatorContent width="100%" label="基本信息">			
						<s:VGroup paddingBottom="2" paddingLeft="10" paddingRight="10">	
							<s:HGroup width="100%" height="100%" paddingBottom="5" verticalAlign="middle">
								<s:Label text="姓      名"/><s:TextInput id="L401_02" width="130" restrict="^0-9"/>
								<s:Label text="证件类型"/><s:DropDownList width="130" id="L401_03"/>
								<s:Label text="证件号码"/><s:TextInput id="L401_04" width="140" restrict="0-9X" changing="setAge()"/>
								<s:Label text="年       龄"/><s:TextInput id="L401_06" width="130" restrict="0-9" maxChars="2"/>
								<s:Label text="出生日期"/><mx:DateField id="L401_05" width="130"
																	dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
																	monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
																	formatString="YYYY-MM-DD" yearNavigationEnabled="true"/>
								
								<s:Button label="读卡" buttonMode="true" enabled="{systemUser.duka=='1'}" click="readCard()"/>
							</s:HGroup>
							<s:HGroup width="100%" height="100%" paddingBottom="5" verticalAlign="middle">
								<s:Label text="民      族"/><s:DropDownList width="130" id="L401_07"/>
								<s:Label text="国      籍" width="52"/><s:DropDownList width="130" id="L401_08"/>
								<s:Label text="文化程度"/><s:DropDownList width="142" id="L401_09"/>
								<s:Label text="联系方式"/><s:TextInput id="L401_10" width="130" restrict="0-9"/>
							</s:HGroup>
							<s:HGroup width="100%" height="100%" paddingBottom="5" verticalAlign="middle">
								<s:Label width="57" text="现住址"/>
								<component:AreaComboBoxVillage id="L401_13" width="844" buttonMode="true"/>
							</s:HGroup>
							<s:HGroup width="100%" height="100%" paddingBottom="5" verticalAlign="middle">
								<s:Label width="57" text="户口地址"/>
								<component:AreaComboBoxVillage id="L401_11" width="844" buttonMode="true"/>
							</s:HGroup>
							<s:HGroup width="100%" height="100%" paddingBottom="5" verticalAlign="middle">
								<s:Label text="户口地址详情"/>
								<s:TextInput id="L401_12" width="823"/>
							</s:HGroup>
						</s:VGroup>
					</s:NavigatorContent>
				</mx:TabNavigator>
				<mx:TabNavigator width="1150" chromeColor="#ffffff" creationPolicy="all">
					<s:NavigatorContent width="100%" label="录入信息">			
						<s:VGroup paddingBottom="2" paddingLeft="10" paddingRight="10">	
							<s:HGroup width="100%" height="100%" paddingBottom="5" verticalAlign="middle">
								<s:Label text="录入单位"/><s:DropDownList width="130" id="L401_17" enabled="false"/>
								<s:Label text="录入人员"/><s:TextInput width="130" id="L401_18"/>
								<s:Label text="录入时间"/><mx:DateField id="L401_19" width="130" enabled="false"
																	dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
																	monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
																	formatString="YYYY-MM-DD" yearNavigationEnabled="true"/>
								
							</s:HGroup>
						</s:VGroup>
					</s:NavigatorContent>
				</mx:TabNavigator>
					<s:HGroup width="1150" height="30" contentBackgroundColor="#FF0000" horizontalAlign="center"
						  paddingBottom="20" paddingLeft="10" paddingTop="10" verticalAlign="middle">
						<s:Button label="保存" buttonMode="true" id="save"  click="saveL401(event)"/>
					</s:HGroup>				
			</s:VGroup>
			</s:VGroup>
	</s:Scroller>
</s:Module>
