<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  verticalAlign="middle" horizontalAlign="center"
		  creationComplete="hgroupCreationCompleteHandler(event)">
	<fx:Declarations>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getCustomInstitutionComboBoxData" result="getCustomInstitutionComboBoxDataHandler(event)"/>
			<s:method name="getInstitutionLevel" result="getInstitutionLevelHandler(event)"/>
			<s:method name="getCustomInstitutionComboBoxDataCounty" result="getCustomInstitutionComboBoxDataCountyHandler(event)"/>
			<s:method name="getCustomInstitutionComboBoxDataTown" result="getCustomInstitutionComboBoxDataTownHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.InstitutionRequest;
			import com.xyw.sys.model.InstitutionResponse;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			
			private var systemUser:SystemUser = null;
			private var institutionIDArr:Array;
			[Bindable]
			public var villageVisible:Boolean=false;
			
			private function hgroupCreationCompleteHandler(event:FlexEvent):void
			{
				institutionIDArr=[province,city,county,town];
				if(villageVisible)
				{
					institutionIDArr.push(village);
					town.addEventListener(IndexChangeEvent.CHANGE, onTownIndexChangeEventHandler);	
				}	
				this.systemUser = this.parentApplication.systemUser;
				var institutionRequest:InstitutionRequest = new InstitutionRequest();
				institutionRequest.institutionCode = this.systemUser.institutionCode;
				this.systemService.getInstitutionLevel(institutionRequest);
				
			}
			
			private function getInstitutionLevelHandler(event:ResultEvent):void
			{
				var institutionResponse:Object = event.result;
				if(institutionResponse.errorMessage == null) {
					var institutionFlag:String = institutionResponse.institutionFlag;
					var institutionRequest:InstitutionRequest = new InstitutionRequest();
					institutionRequest.institutionCode = this.systemUser.institutionCode;
					institutionRequest.institutionFlag = institutionFlag
					institutionRequest.flag = true;
					this.systemService.getCustomInstitutionComboBoxData(institutionRequest);					
				} else {
					Alert.show(institutionResponse.errorMessage, "系统提示");
					return;
				}
			}
			
			private function getCustomInstitutionComboBoxDataHandler(event:ResultEvent):void
			{
				var institutionResponse:Object = event.result;
				var institutionFlag:String = institutionResponse.institutionFlag;
				var comboBoxDataList:ArrayCollection = institutionResponse.comboBoxDataList;
				var label:String = this.systemUser.institution;
				var data:String = this.systemUser.institutionCode;
				var lastDataArr:Array=[{label : label, data : data}];
				if(institutionResponse.errorMessage == null) {
					switch(institutionFlag) {
						case "0" :
							setDropDownListData(institutionFlag,null,lastDataArr);//赋值
							comboBoxDataList.addItemAt({label:"请选择", data:""}, 0);
							doDropDownListData([city],comboBoxDataList);//赋值
							this.city.addEventListener(IndexChangeEvent.CHANGE, onCityIndexChangeEventHandler);
							this.county.addEventListener(IndexChangeEvent.CHANGE, onCountyIndexChangeEventHandler);
							doDropDownListData(institutionIDArr.slice(2));//赋值一条记录 请选择  只有一条
							break;
						case "1" :
							comboBoxDataList=setDropDownListData(institutionFlag,comboBoxDataList,lastDataArr);//赋值 并删除多余项
							doDropDownListData([county],comboBoxDataList);//赋值
							this.county.addEventListener(IndexChangeEvent.CHANGE,onCountyIndexChangeEventHandler);
							doDropDownListData(institutionIDArr.slice(3));//赋值一条记录 请选择  只有一条
							break;
						case "2" :
							comboBoxDataList=setDropDownListData(institutionFlag,comboBoxDataList,lastDataArr);//赋值 并删除多余项
							doDropDownListData([town],comboBoxDataList);//赋值
							if(villageVisible)
								doDropDownListData(institutionIDArr.slice(4));//赋值一条记录 请选择  只有一条
							break;
						case "3" :
							comboBoxDataList=setDropDownListData(institutionFlag,comboBoxDataList,lastDataArr);//赋值 并删除多余项
							doDropDownListData([village],comboBoxDataList);//赋值 
							break;
						case "4" :
							setDropDownListData(institutionFlag,comboBoxDataList,lastDataArr);//赋值 并删除多余项
							//if(villageVisible)
							//	town.removeEventListener(IndexChangeEvent.CHANGE, onTownIndexChangeEventHandler);
							break;
					} 
				} else {
					Alert.show(institutionResponse.errorMessage, "系统提示");
				}
			}
			
			
			
			private function onCityIndexChangeEventHandler(event:IndexChangeEvent):void
			{

				if(initSelectItem(event))
					return ;
					var institutionRequest:InstitutionRequest = new InstitutionRequest();
					institutionRequest.institutionCode = getLastSelectedInstitutionCode();
					institutionRequest.flag = false;
					doDropDownListData([town]);//赋值一条记录 请选择  只有一条
					systemService.getCustomInstitutionComboBoxDataCounty(institutionRequest);
			}
			
			private function getCustomInstitutionComboBoxDataCountyHandler(event:ResultEvent):void {
				var institutionResponse:Object = event.result;
				var comboBoxDataList:ArrayCollection = institutionResponse.comboBoxDataList;
				if(!institutionResponse.errorMessage) {
					comboBoxDataList.addItemAt({label:"请选择", data:""}, 0);
					doDropDownListData([county],city.selectedItem.data?comboBoxDataList:null);
				} else {
					Alert.show(institutionResponse.errorMessage, "系统提示");
				}
			}
			
			private function onCountyIndexChangeEventHandler(event:IndexChangeEvent):void
			{	
		
				if(initSelectItem(event))
					return ;
				var institutionRequest:InstitutionRequest = new InstitutionRequest();
				institutionRequest.institutionCode = getLastSelectedInstitutionCode();
				institutionRequest.flag = false;
				systemService.getCustomInstitutionComboBoxDataTown(institutionRequest);
			}
			
			private function getCustomInstitutionComboBoxDataTownHandler(event:ResultEvent):void {
				var institutionResponse:Object = event.result;
				var comboBoxDataList:ArrayCollection = institutionResponse.comboBoxDataList;
				if(!institutionResponse.errorMessage) {
					comboBoxDataList.addItemAt({label:"请选择", data:""}, 0);
					doDropDownListData([village],null);
					doDropDownListData([town],county.selectedItem.data?comboBoxDataList:null);
				} else {
					Alert.show(institutionResponse.errorMessage, "系统提示");
				}
			}
			
			private function onTownIndexChangeEventHandler(event:IndexChangeEvent):void
			{	
	
				if(initSelectItem(event))
					return ;
	
					var institutionRequest:InstitutionRequest = new InstitutionRequest();
					institutionRequest.institutionCode = getLastSelectedInstitutionCode();
					institutionRequest.flag = false;
					CompMethod.customRemoteObject(["systemService","getCustomInstitutionComboBoxData",
						getCustomInstitutionComboBoxDataVillageHandler],institutionRequest);
				
			}
			
			private function getCustomInstitutionComboBoxDataVillageHandler(event:ResultEvent):void {
				var institutionResponse:Object = event.result;
				var comboBoxDataList:ArrayCollection = institutionResponse.comboBoxDataList;
				if(!institutionResponse.errorMessage) {
					comboBoxDataList.addItemAt({label:"请选择", data:""}, 0);
					doDropDownListData([village],town.selectedItem.data?comboBoxDataList:null);
					
				} else {
					Alert.show(institutionResponse.errorMessage, "系统提示");
				}
			}
			
			
			public function getLastSelectedInstitutionCode():String
			{
				return getSelectedItemOrIndex().data;
			}
			
			public function getLastSelectedInstitutiLabel():String
			{
				return getSelectedItemOrIndex().label;
			}
			
			public function getLastSelectedInstitution():String
			{	
				var type:Number=Number(getSelectedItemOrIndex(false))*2;
				type=villageVisible&&type==8?type+1:type;
				return type.toString();
			}
			
			/**
			 *	根据flag返回一个对象 或者 下标 下标从1开始
			 * 	默认 flag=true 
			 * 	true 返回对象  false 返回数组序号
			 */
			private function getSelectedItemOrIndex(flag:Boolean=true):Object
			{
				var itemObj:Object;
				for(var i:int=institutionIDArr.length;i>0;i--)
				{
					var item:Object=this.institutionIDArr[i-1];
					if(item.selectedItem.data)
					{
						itemObj=flag?item.selectedItem:i;
						break;
					}	
				}
				return itemObj;
			}
			
			/**
			 * 为下拉框赋值
			 */
			private function doDropDownListData(arr:Array,data:ArrayCollection=null):void
			{
				
				var listData:ArrayCollection=data?data:new ArrayCollection([{label:"请选择", data:""}]);
				for(var i:String in arr)
				{
					arr[i].dataProvider = listData;
					arr[i].selectedIndex = 0;
				}
			}
			/**
			 *	为下拉框赋值
			 */
			private function setDropDownListData(institutionFlag:String,comboBoxDataList:ArrayCollection,defaultArr:Array):ArrayCollection
			{
				var maxIndex:int=Number(institutionFlag);
				for(var i:int=0;i<maxIndex;i++)
				{
					doDropDownListData([institutionIDArr[i]],new ArrayCollection([comboBoxDataList.getItemAt(i)]));
				}
				doDropDownListData([institutionIDArr[maxIndex]],new ArrayCollection(defaultArr));
				
				return doRemoveItemAt(maxIndex,comboBoxDataList);
			}
			
			
			/**
			 *	删除 添加 项
			 */
			private function doRemoveItemAt(maxIndex:int,comboBoxDataList:ArrayCollection):ArrayCollection
			{
				if(maxIndex<4&&maxIndex>0)
				{
					for(var j:int=1;j<maxIndex;j++)
					{
						comboBoxDataList.removeItemAt(0);
					}
					comboBoxDataList.setItemAt({label:"请选择", data:""}, 0);
				}
				return comboBoxDataList;
			}
			
			
			/**
			 *父选项选择第一个 则重置后面的子选项内容为第一个
			 * 否则 查询数据
			 */
			private function initSelectItem(event:IndexChangeEvent):Boolean
			{
				var isAdd:Boolean=false;
				var target:Object=event.target;
				for(var i:int=0;i<institutionIDArr.length;i++)
				{
					if(institutionIDArr[i]==target)
						isAdd=true;
					else if(isAdd)
					{
						institutionIDArr[i].dataProvider=new ArrayCollection([{label:"请选择", data:""}]);
						institutionIDArr[i].selectedIndex=0;				
					}
				}
				
				return target.selectedItem.data?false:true;
			}
			
			/**
			 * idx institutionIDArr（显示的下拉框组件） 数组下标 从1开始
			 * 是否还有下级机构 
			 * return false 没有 下级机构  true 有 下级机构 
			 */
			public function hasChild(idx:Number=0):Boolean
			{
				var result:Boolean=false;
				var idx:Number=idx?idx:Number(getSelectedItemOrIndex(false));//得到最后选择不为空的下拉框(数组下标从1开始)
				if(idx!=institutionIDArr.length)
					result=institutionIDArr[idx].dataProvider.length>1?true:false;
				return result;
			}
			
			/**
			 *得到最终的机构编码
			 */
			public function getInstitutionCode():String
			{
				var type:String = getLastSelectedInstitution();
				var code:String = getLastSelectedInstitutionCode();
				return  (type == "10")?code:hasChild()?code.substring(0,Number(type)):code;				
			}
			
		]]>
	</fx:Script>
	<s:DropDownList id="province" width="100%"/><s:DropDownList id="city" width="100%"/>
	<s:DropDownList id="county" width="100%"/><s:DropDownList id="town" width="100%"/>
	<s:DropDownList id="village" width="100%" visible="{villageVisible}" includeInLayout="{villageVisible}"/>
</s:HGroup>