<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  width="100%" creationComplete="creationCompleteHandler(event)">
	<fx:Declarations>
		<s:RemoteObject id="e301Service" destination="e301Service"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="queryE301" result="queryE301Handler(event)"/>
		</s:RemoteObject>
		
		
		<s:Parallel id="parallel" effectEnd="this.currentState=='normal'"
					effectStart="this.currentState=='special'" target="{certificateDataGrid}">
			<!--模糊-->
			<!--<mx:Blur duration="1000" 
			blurXFrom="10.0" blurXTo="0.0" 
			blurYFrom="10.0" blurYTo="0.0"/>-->
			<!--正常-->
			<!--<mx:Blur duration="1000"
			blurXFrom="0.0" blurXTo="10.0" 
			blurYFrom="0.0" blurYTo="10.0"/>-->
			<s:Resize duration="1300" heightFrom="100" heightTo="246" widthFrom="300" widthTo="1158"/>
		</s:Parallel>
		
		
		<s:GlowFilter id="glow1" color="#de7800"/>
		<s:AnimateFilter id="effect1" bitmapFilter="{glow1}" duration="2000" repeatBehavior="reverse"
						 repeatCount="0" target="{lbl}">
			<s:SimpleMotionPath property="blurX" valueFrom="0" valueTo="20"/>
			<s:SimpleMotionPath property="blurY" valueFrom="0" valueTo="20"/>
		</s:AnimateFilter>
	</fx:Declarations>
	<fx:Metadata>
		[Event(name="selectChange", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.etbj.etbjzhcx.zhTitle;
			import com.xyw.module.etbj.model.E301Request;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.custom.component.CustomIcon;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.events.GridSelectionEvent;
			public var systemUser:SystemUser = null;
			[Bindable]
			public var item:Object;
			private function creationCompleteHandler(event:FlexEvent):void
			{
				this.systemUser = this.parentApplication.systemUser;
				//检查读卡权限
				if(this.systemUser.duka =="1"){
					this.duka1.enabled =true;
				}

			}
			
			public function queryF301():void
			{
				queryetjcdj(1,10);
			}
			
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				queryetjcdj(currentPageIndex,pageSize);
			}
			
			public function refresh():void
			{
				queryetjcdj(pagerBar.currentPageIndex,10);
			}
			
			/**
			 *
			 */
			private function verificaText():Array
			{
				var hasVal:Boolean=false;
				var result:Array=new Array(4);
				var f30102:String=StringUtil.trim(F301_02.text);
				var f30105:String=StringUtil.trim(F301_05.text);
				var f30111:String=StringUtil.trim(F301_11.text);
				if(f30102||f30105||f30111)
				{
					result[1]=f30102;
					result[2]=f30105;
					result[3]=f30111;
					hasVal=true;
				}
				result[0]=hasVal;
				return result;
			}
			
			
			private function onSelected(event:GridSelectionEvent):void{
				this.currentState=this.states[0].name;
				item=DataGrid(event.target).selectedItem;
				dispatchEvent(new Event("selectChange"));			
			}
			
			/**
			 *
			 */
			private function getData(data:ArrayCollection,rowCount:int):void
			{
				pagerBar.dataGrid = certificateDataGrid;  
				pagerBar.rowCount = rowCount;
				pagerBar.resultData = data;
				pagerBar.dataBind();
				pagerBar.pagerFunction = pagerFunction;
				if(rowCount > 0) {
					pagerBar.enabled = true;
				}
			}
			
			
			private function queryetjcdj(currentPageIndex:int, pageSize:int):void
			{
				var e301Request:E301Request  = new E301Request();
				e301Request.e30116 = E301_16.getInstitutionCode();
				var result:Array=verificaText();
				if(result[0])
				{
					e301Request.f30102 = result[1];
					e301Request.f30105 = result[2];
					e301Request.e30111 = result[3];
				}else
				{
					if(CompMethod.getTimeSpace(timeStart,timeEnd))
						return;
					
					e301Request.e30114Start=DateField.stringToDate(timeStart.text,'YYYY-MM-DD');
					e301Request.e30114End=DateField.stringToDate(timeEnd.text,'YYYY-MM-DD');
					
				}
				
				e301Request.parameterPageindex = currentPageIndex;
				e301Request.parameterPagesize = pageSize;
				
				this.e301Service.queryE301(e301Request);
			}
			
			
			private function queryE301Handler(event:ResultEvent):void {
				var e301Response:Object = event.result;	
				if(e301Response.state){
					var rowCount:int=e301Response.rowCount;
					if(rowCount)
					{
						this.currentState=this.states[1].name;
						parallel.play();
						callLater(getData,[e301Response.ve301s,rowCount]);
					}else
						Alert.show('暂无数据',"系统提示");
					
				}else{
					Alert.show(e301Response.errorMessage,"系统提示");
				}
			}
			
			private function readCard_B(event:MouseEvent):void
			{
				try
				{
					//readCard是调用index.js下的函数，读卡涉及index.jsp和index.js两个文件
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(sex=="女"){
							this.F301_02.text = array[0];//姓名
							this.F301_05.text = array[5];//身份证号
							queryF301();
						}else{
							Alert.show("请读母亲信息！","系统提示");
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			/**
			 *
			 */
			private function queryAll(event:MouseEvent):void
			{
				
				var result:Array=verificaText();
				if(!result[0])
				{
					Alert.show("请输入任一内容！","系统提示");
					return;	
				}
				var querywindow:zhTitle = new zhTitle();
				querywindow.parentName = result[1];
				querywindow.card = result[2];
				querywindow.phoneNumber = result[3];
				querywindow.creationMoveWindow(this);
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="special"/>
	</s:states>
	<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" height.normal="117"  height.special="405" width="100%">
		
	
		<s:NavigatorContent width="100%" label="产妇查询">			
			<s:VGroup paddingBottom="2" paddingLeft="10" paddingRight="10">	
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
					
					<s:Label id="lbl" color="#FD0909" creationComplete="effect1.play();"
							 fontSize="16" text="!  注意：若输入内容，查询不受日期条件限制，有读卡功能的直接读卡就可以查询"/>
				</s:HGroup>
				
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
					<s:Label text="录入单位"/>
					<component:InstitutionComboBox id="E301_16" width="871" buttonMode="true"
												   villageVisible="true"/>
					
				</s:HGroup>
				
				<s:HGroup width="100%" height="100%" gap="0" paddingBottom="5" verticalAlign="middle">
					<s:HGroup id="fmload" visible="true" verticalAlign="middle">
						<s:Label paddingLeft="8" text="产妇姓名"/><s:TextInput id="F301_02"/>
						<s:Label text="证件号码"/><s:TextInput id="F301_05" width="140"/>
						<s:Label text="电话号码"/><s:TextInput id="F301_11" width="140"/>
						<s:Label text="登记时间"/>
						<component:CustomRangeDateField id="timeStart" isSelectFirst="true" width="100"/>
						
						<s:Label text="至"/>
						<component:CustomRangeDateField id="timeEnd" isSelectNow="true" width="100"/>
						<s:Button label="查询" click="queryF301()" icon="{CustomIcon.QUERY}"/>	
						<s:Button id="duka1" label="读卡" click="readCard_B(event)"
								  enabled="false"  icon="{CustomIcon.READCARD}"/>
						<s:Button label="综合查询" click="queryAll(event)" icon="{CustomIcon.QUERY}"/>
					</s:HGroup>
				</s:HGroup>
				<s:VGroup includeIn="special" width="100%" height="100%" chromeColor="#F6F8FA"
						  paddingBottom="5">
					<s:DataGrid id="certificateDataGrid" width="1158" height="246"
								alternatingRowColors="[#FFFFFF,#EEEEEE]" editable="false"
								rowHeight="22" selectionChange="onSelected(event)">
						<s:columns>
							<s:ArrayList>
								<s:GridColumn visible="false" dataField="e30101" headerText="主键"/>
								<s:GridColumn width="40" editable="false" headerText="序号"
											  itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer"/>
								<s:GridColumn width="150" dataField="e30117" headerText="保健卡号"/>
								<s:GridColumn width="80" dataField="f30102" headerText="妇女姓名"/>
								<s:GridColumn width="140" dataField="f30105" headerText="妇女身份证号"/>
								<s:GridColumn width="80" dataField="f30118" headerText="配偶姓名"/>
								<s:GridColumn width="140" dataField="f30121" headerText="配偶身份证号"/>
								<s:GridColumn width="80" dataField="e30103" headerText="儿童姓名"/>
								<s:GridColumn width="80" dataField="e30104Zh" headerText="儿童性别"/>	
								<s:GridColumn width="80" dataField="e30113" headerText="出生证号"/>
								<s:GridColumn width="150" dataField="e30106Str" headerText="出生日期"/>
								<s:GridColumn width="80" dataField="e30110" headerText="联系人"/>
								<s:GridColumn width="80" dataField="e30111" headerText="联系电话"/>
								<s:GridColumn width="100" dataField="e30109Zh" headerText="家庭地址"/>
								<s:GridColumn width="100" dataField="e30112Zh" headerText="联系地址"/>
							</s:ArrayList>
						</s:columns>
					</s:DataGrid>	
					
					<component:PagerBar id="pagerBar" enabled="false"  pageSize="10"/>
				</s:VGroup>
			</s:VGroup>
		</s:NavigatorContent>
</mx:TabNavigator>
</s:VGroup>
