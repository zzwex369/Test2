<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  xmlns:local="com.xyw.sys.custom.component.*"
		  creationComplete="moduleCreationComplete()">
	<fx:Declarations>
		<s:RemoteObject id="birthService" destination="birthService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="validateSaveBirthCertiticate" result="validateSaveBirthCertiticateHandler(event)"/>
			<s:method name="validateStockCertiticate" result="validateStockCertiticateHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		mx|GridItem
		{
			horizontalAlign:right;
			verticalAlign:middle;
		}
		s|HGroup
		{
			horizontalAlign:right;
			verticalAlign:middle;
		}
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|TextInput
		{
			fontFamily:微软雅黑;
		}
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import com.xyw.module.csyxzm.model.D301;
			import com.xyw.module.csyxzm.model.QueryBirthRequest;
			import com.xyw.module.csyxzm.model.QueryBirthResponse;
			import com.xyw.module.csyxzm.model.VBirthInfo;
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.ComboBoxDataResponse;
			import com.xyw.sys.model.SystemUser;
			import com.xyw.module.csyxzm.csyxzmqf.Querywindow;
			
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.controls.Text;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.formatters.DateTimeFormatter;
			
			private var comboBoxDataRequest:ComboBoxDataRequest;
			private var d301:D301;
			private var vBrithInfo:VBirthInfo;
			public var systemUser:SystemUser = null;
			
			private var birth_day:String;
			private var birth_hour:String;
			private var birth_minute:String;
			private var d301_04_str:String;
			private var d301_04_date:Date;
			[Bindable]
			public var sexData:ArrayCollection = new ArrayCollection(
				[	{label:"请选择",data:0},
					{label:"男",data:1},
					{label:"女",data:2},
					{label:"未知",data:3}]);
			
			//初始化方法
			private function moduleCreationComplete():void
			{
				this.systemUser = this.parentApplication.systemUser;
				if(this.systemUser.duka =="1"){
					this.duka1.enabled =true;
					this.duka2.enabled =true;
					this.duka3.enabled =true;
 					this.duka4.enabled =true;
					this.duka5.enabled =true;
				}
				this.initializeComboBox();//初始化数据
				this.d301_28.text = DateField.dateToString(new Date, "YYYY-MM-DD");
				this.d301_12.addEventListener(FlexEvent.ENTER,setMontherBirthday);
				this.d301_12.addEventListener(FlexEvent.CHANGING,setMontherBirthday);
				this.d301_17.addEventListener(FlexEvent.ENTER,setFatherBirthday);
				this.d301_17.addEventListener(FlexEvent.CHANGING,setFatherBirthday);
				this.d301_12_17.addEventListener(FlexEvent.ENTER,setSingleBirthday);
				this.d301_12_17.addEventListener(FlexEvent.CHANGING,setSingleBirthday);
				var date:Date = new Date();
				this.hour.text = (String)(date.hours);
				this.minute.text = (String)(date.minutes);
				
				d301Enabled();
			}
			private function d301Enabled():void{
				this.d301_02.enabled =false;
				this.d301_03.enabled =false;
				this.d301_04.enabled =false;
				
				this.d301_11.enabled =false;
				this.d301_12.enabled =false;
				this.d301_14.enabled =false;
				this.d301_15.enabled =false;
				this.d301_21.enabled =false;
				this.d301_34.enabled =false;
				this.d301_16.enabled =false;
				this.d301_17.enabled =false;
				this.d301_19.enabled =false;
				this.d301_20.enabled =false;
				this.d301_35.enabled =false;
				this.d301_48.enabled =false;
				
				/* this.d301_36.enabled =false;
				this.d301_37.enabled =false;
				this.d301_38.enabled =false;
				this.d301_39.enabled =false; */
				
				this.mother.enabled =false;
				this.father.enabled =false;
				this.parents.enabled =false;
				this.d301_11_16.enabled =false;
				this.d301_34_35.enabled =false;
				this.d301_12_17.enabled =false;
				this.d301_14_19.enabled =false;
				this.d301_15_20.enabled =false;
				this.d301_21_.enabled =false;
			}
			private function setMontherBirthday(event:Event):void
			{
				if(this.d301_34.selectedItem.data == 1){
					var cardId:String = this.d301_12.text;
					if(cardId.length>=16){
						cardId=cardId.substring(6,14);
						this.d301_13.text = cardId.substring(0,4) + "-" + cardId.substring(4,6) + "-" + cardId.substring(6,8);
					}else
					{
						cardId=cardId.substring(6,12);
						this.d301_13.text = "19" + cardId.substring(0,2) + "-" + cardId.substring(2,4) + "-" + cardId.substring(4,6);
					}
				}
			}
			
			private function setFatherBirthday(event:Event):void
			{
				if(this.d301_35.selectedItem.data == 1){
					var cardId:String = this.d301_17.text;
					if(cardId.length>=16){
						cardId=cardId.substring(6,14);
						this.d301_18.text = cardId.substring(0,4) + "-" + cardId.substring(4,6) + "-" + cardId.substring(6,8);
					}else
					{
						cardId=cardId.substring(6,12);
						this.d301_18.text = "19" + cardId.substring(0,2) + "-" + cardId.substring(2,4) + "-" + cardId.substring(4,6);
					}
				}
			}
			
			private function setSingleBirthday(event:Event):void
			{
				if(this.d301_34_35.selectedItem.data == 1){
					var cardId:String = this.d301_12_17.text;
					if(cardId.length>=16){
						cardId=cardId.substring(6,14);
						this.d301_13_18.text = cardId.substring(0,4) + "-" + cardId.substring(4,6) + "-" + cardId.substring(6,8);
					}else
					{
						cardId=cardId.substring(6,12);
						this.d301_13_18.text = "19" + cardId.substring(0,2) + "-" + cardId.substring(2,4) + "-" + cardId.substring(4,6);
					}
				}
			}
			/*------查询车辆类型和车辆使用性质 下拉菜单-----------*/
			private function initializeComboBox():void
			{
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_01";
				comboBoxDataRequest.sql = "select * from S301_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_02";
				comboBoxDataRequest.sql = "select * from S301_02";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_03";
				comboBoxDataRequest.sql = "select * from S301_03";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_04";
				comboBoxDataRequest.sql = "select * from S301_04";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_05";
				comboBoxDataRequest.sql = "select * from S301_05";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select t.d101_01, t.d101_02 from D101 t";
				comboBoxDataRequest.flag = "D101";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_06";
				comboBoxDataRequest.flag = "S301_06";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_07";
				comboBoxDataRequest.flag = "S301_07";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = false;
				comboBoxDataRequest.sql = "select t.s_01,t.s_02 from S301_10 t where t.S_05='0' and t.S_03 ="+this.systemUser.institutionCode;
				comboBoxDataRequest.flag = "S301_10";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				var systemCode:String = this.systemUser.institutionCode;
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = false;
				comboBoxDataRequest.sql = "select * from S301_09 t where t.S_03='"+systemCode+"'";
				comboBoxDataRequest.flag = "S301_09";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
			}
			
			/*-----------------返回数据放到赋值到下拉菜单-----------------*/
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object =  event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				
				if(flag == "S301_02")
				{
					this.d301_09.dataProvider = comboBoxDataList;
					this.d301_09.selectedIndex = 0;
				}else if(flag == "S301_03")
				{
					this.d301_14.dataProvider = comboBoxDataList;
					var countryIndex:int = this.getCountrySelectedIndex(comboBoxDataList);
					this.d301_14.selectedIndex = countryIndex;
					this.d301_19.dataProvider = comboBoxDataList;
					this.d301_19.selectedIndex = countryIndex;
					this.d301_14_19.dataProvider = comboBoxDataList;
					this.d301_14_19.selectedIndex = countryIndex;
				}else if(flag == "S301_04")
				{
					this.d301_15.dataProvider = comboBoxDataList;
					var volkIndex:int = this.getVolkSelectedIndex(comboBoxDataList);
					this.d301_15.selectedIndex = volkIndex;
					this.d301_20.dataProvider = comboBoxDataList;
					this.d301_20.selectedIndex = volkIndex;
					this.d301_15_20.dataProvider = comboBoxDataList;
					this.d301_15_20.selectedIndex = volkIndex;
				}else if(flag == "S301_05")
				{
					this.d301_22.dataProvider = comboBoxDataList;
					var birthIndex:int = this.getBirthSelectedIndex(comboBoxDataList);
					this.d301_22.selectedIndex = birthIndex;
				}else if(flag == "D101")
				{
					var index:int = this.getDropDownListSelectedIndex(comboBoxDataList, this.systemUser.institutionCode);
					this.d301_26.dataProvider = comboBoxDataList;
					this.d301_26.selectedIndex = index;
					this.d301_26.enabled = false;
				}else if(flag == "S301_06")
				{
					this.d301_34.dataProvider = comboBoxDataList;
					this.d301_34.selectedIndex = 1;
					
					this.d301_35.dataProvider = comboBoxDataList;
					this.d301_35.selectedIndex = 1;
					
					this.d301_34_35.dataProvider = comboBoxDataList;
					this.d301_34_35.selectedIndex = 1;
					
					this.d301_38.dataProvider = comboBoxDataList;
					this.d301_38.selectedIndex = 1;
					
					
				}else if(flag == "S301_07")
				{
					this.d301_37.dataProvider = comboBoxDataList;
					this.d301_37.selectedIndex = 0;
				}else if(flag == "S301_10")
				{
					this.d301_27.dataProvider = comboBoxDataList;
					this.d301_27.selectedIndex = 0;
					
				}else if(flag == "S301_09"){
					this.d301_25.dataProvider = comboBoxDataList;
					this.d301_25.selectedIndex = 0;
					
				}
			}
			
			/*-----------------默认国籍 中国---------------------*/
			private function getCountrySelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "CHN") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			/*-----------------默认民族  汉族---------------------*/
			private function getVolkSelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "01") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			/*-----------------默认出生地点分类        医院---------------------*/
			private function getBirthSelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "1") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			private function getDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			public function queryRecord(vd307:Object):void{
				this.d301_02.text =vd307.d30702;
				this.d301_03.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_03.dataProvider),vd307.d30703);
				
				this.d301_04.text =DateField.dateToString(vd307.d30704,"YYYY-MM-DD");
				var d30704_:String = vd307.d30704Str;
				//this.d307_04.selectedDate = DateFormatter.parseDateString(vd307.d30704);
				this.hour.text = d30704_.substring(11,13);
				this.minute.text = d30704_.substring(14,16);
				this.d301_05.setAreaCode(vd307.d30705);
				
				if(vd307.d30731 =="2"){
					this.tab.selectedIndex =1;
					this.mother.selected =true;
					this.d301_11_16.text =vd307.d30706;
					this.d301_34_35.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_34_35.dataProvider),vd307.d30707);
					this.d301_12_17.text =vd307.d30708;
					this.d301_14_19.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_14_19.dataProvider),vd307.d30709);
					this.d301_15_20.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_15_20.dataProvider),vd307.d30710);
					this.d301_21_.text =vd307.d30711;
					
					this.d301_43_.text =vd307.d30722;
					var cardIdM:String = vd307.d30708;
					if(vd307.d30707 == "1"){
						if(cardIdM.length>=16){
							cardIdM=cardIdM.substring(6,14);
							this.d301_13_18.text = cardIdM.substring(0,4) + "-" + cardIdM.substring(4,6) + "-" + cardIdM.substring(6,8);
						}else
						{
							cardIdM=cardIdM.substring(6,12);
							this.d301_13_18.text = "19" + cardIdM.substring(0,2) + "-" + cardIdM.substring(2,4) + "-" + cardIdM.substring(4,6);
						}
					}
				}else if(vd307.d30731 =="1"){
					this.tab.selectedIndex =1;
					this.father.selected =true;
					this.d301_11_16.text =vd307.d30712;
					this.d301_34_35.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_34_35.dataProvider),vd307.d30713);
					this.d301_12_17.text =vd307.d30714;
					this.d301_14_19.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_14_19.dataProvider),vd307.d30715);
					this.d301_15_20.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_15_20.dataProvider),vd307.d30716);
					this.d301_21_.text =vd307.d30717;
					
					this.d301_43_.text =vd307.d30722;
					var cardIdF:String = vd307.d30714;
					if(vd307.d30713 == "1"){
						if(cardIdF.length>=16){
							cardIdF=cardIdF.substring(6,14);
							this.d301_13_18.text = cardIdF.substring(0,4) + "-" + cardIdF.substring(4,6) + "-" + cardIdF.substring(6,8);
						}else
						{
							cardIdM=cardIdF.substring(6,12);
							this.d301_13_18.text = "19" + cardIdF.substring(0,2) + "-" + cardIdF.substring(2,4) + "-" + cardIdF.substring(4,6);
						}
					}
				}else{
					this.tab.selectedIndex =0;
					this.d301_11.text =vd307.d30706;
					this.d301_34.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_34.dataProvider),vd307.d30707);
					this.d301_12.text =vd307.d30708;
					this.d301_14.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_14.dataProvider),vd307.d30709);
					this.d301_15.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_15.dataProvider),vd307.d30710);
					this.d301_21.text =vd307.d30711;
					this.d301_16.text =vd307.d30712;
					this.d301_35.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_35.dataProvider),vd307.d30713);
					this.d301_17.text =vd307.d30714;
					this.d301_19.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_19.dataProvider),vd307.d30715);
					this.d301_20.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_20.dataProvider),vd307.d30716);
					this.d301_48.text =vd307.d30717;
					
					this.d301_43.text =vd307.d30722;
					var cardIdM_:String = vd307.d30708;
					if(vd307.d30707 == "1"){
						if(cardIdM_.length>=16){
							cardIdM_=cardIdM_.substring(6,14);
							this.d301_13.text = cardIdM_.substring(0,4) + "-" + cardIdM_.substring(4,6) + "-" + cardIdM_.substring(6,8);
						}else
						{
							cardIdM_=cardIdM_.substring(6,12);
							this.d301_13.text = "19" + cardIdM_.substring(0,2) + "-" + cardIdM_.substring(2,4) + "-" + cardIdM_.substring(4,6);
						}
					}
					
					var cardIdF_:String = vd307.d30714;
					if(vd307.d30713 == "1"){
						if(cardIdF_.length>=16){
							cardIdF_=cardIdF_.substring(6,14);
							this.d301_18.text = cardIdF_.substring(0,4) + "-" + cardIdF_.substring(4,6) + "-" + cardIdF_.substring(6,8);
						}else
						{
							cardIdF_=cardIdF_.substring(6,12);
							this.d301_18.text = "19" + cardIdF_.substring(0,2) + "-" + cardIdF_.substring(2,4) + "-" + cardIdF_.substring(4,6);
						}
					}
				}
				this.d301_36.text =vd307.d30718;
				this.d301_37.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_37.dataProvider),vd307.d30719);
				this.d301_38.selectedIndex =this.getDropDownListSelectedIndex(ArrayCollection(this.d301_38.dataProvider),vd307.d30720);
				this.d301_39.text =vd307.d30721;
				this.d301_57.text =vd307.d30701.toString();
			}
			/*--------------保存出生证明信息-----------------*/
			private function validateSaveBirthCertiticate():void 
			{
				var patternFather:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
				var patternMonther:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
				if(this.d301_31.getAreaCode().length < 9)
				{
					Alert.show("所属地区选到乡镇级别!", "系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_02.text) == "")
				{
					Alert.show("请输入婴儿姓名!","系统提示");
					return;
				}
				if(this.d301_03.selectedItem.data == 0)
				{
					Alert.show("请选择性别!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_04.text) == "")
				{
					Alert.show("请选择婴儿出生日期!","系统提示");
					return;
				}
				if((Number)(this.hour.text) < 0 || (Number)(this.hour.text) > 23) 
				{
					Alert.show("输入时间(小时)不符合格式", "系统提示");
					return;
				}if((Number)(this.minute.text) < 0 || (Number)(this.minute.text) > 59) 
				{
					Alert.show("输入时间(分钟)不符合格式", "系统提示");
					return;
				}if((Number)(this.d301_47.text) < 0 || (Number)(this.d301_47.text) > 7) 
				{
					Alert.show("输入天数不符合格式", "系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_47.text) == "")
				{
					Alert.show("请输入孕周天数！","系统提示");
					return;
				}
				/* if(StringUtil.trim(this.d301_32.text) == "")
				{
					Alert.show("请输入住院病历号!","系统提示!");
					return;
				} */
				/* if(this.d301_09.selectedItem.data == 0)
				{
					Alert.show("请选择健康状况!","系统提示");
					return;
				} */
				if(StringUtil.trim(this.d301_33.text) == "")
				{
					Alert.show("请选择填表日期!","系统提示!");
					return;
				}
				/* if(StringUtil.trim(this.d301_25.text) == "")
				{
					Alert.show("请输入接生员!","系统提示");
					return;
				} */
				if(StringUtil.trim(this.d301_10.text) == "")
				{
					Alert.show("请输入出生证号!","系统提示");
					return;
				}
				if(this.d301_05.getAreaCode().length < 8) {
					Alert.show("出生地选到乡镇级别!", "系统提示");
					return;
				}
				if(this.mother.selected || this.father.selected){
					if(StringUtil.trim(this.d301_11_16.text) == "")
					{
						Alert.show("请输入父亲或者母亲姓名!","系统提示");
						return;
					}
					if(this.d301_34_35.selectedItem.data == 0)
					{
						Alert.show("请选择证件类别!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d301_12_17.text) == "")
					{
						Alert.show("请输入证件号码!","系统提示");
						return;
					}
					if(!patternFather.test(this.d301_12_17.text) && this.d301_34_35.selectedItem.data == "1")
					{
						Alert.show("父亲或母亲身份证号码有误！","系统提示");
						return;
					}
					if(StringUtil.trim(this.d301_13_18.text) == "")
					{
						Alert.show("请输入出生日期!","系统提示");
						return;
					}
					if(this.d301_14_19.selectedItem.data == 0)
					{
						Alert.show("请选择国籍!","系统提示");
						return;
					}
					if(this.d301_15_20.selectedItem.data == 0)
					{
						Alert.show("请选择民族!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d301_21_.text) == "")
					{
						Alert.show("请输入家庭地址!","系统提示");
						return;
					}
				}else{
					if(StringUtil.trim(this.d301_11.text) == "")
					{
						Alert.show("请输入母亲姓名!","系统提示");
						return;
					} 
					if(StringUtil.trim(this.d301_12.text) == "")
					{
						Alert.show("请输入母亲证件号码！","系统提示");
						return;
					}
					if(this.d301_34.selectedItem.data == 1)
					{
						if(!patternMonther.test(this.d301_12.text))
						{
							Alert.show("母亲身份证号码有误!","系统提示");
							return;
						}
					}
					if(StringUtil.trim(this.d301_13.text) == "")
					{
						Alert.show("请选择母亲出生日期!","系统提示");
						return;
					}
					if(this.d301_14.selectedItem.data == 0)
					{
						Alert.show("请选择母亲国籍!","系统提示");
						return;
					}
					if(this.d301_15.selectedItem.data == 0)
					{
						Alert.show("请选择母亲民族!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d301_16.text) == "")
					{
						Alert.show("请输入父亲姓名!","系统提示");
						return;
					} 
					if(StringUtil.trim(this.d301_17.text) == "")
					{
						Alert.show("请输入父亲证件号码！","系统提示");
						return;
					}
					if(!patternFather.test(this.d301_17.text) && this.d301_35.selectedItem.data == "1")
					{
						Alert.show("父亲身份证号码有误!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d301_18.text) == "")
					{
						Alert.show("请选择父亲出生日期!","系统提示");
						return;
					}
					if(this.d301_19.selectedItem.data == 0)
					{
						Alert.show("请选择父亲国籍!","系统提示");
						return;
					}
					if(this.d301_20.selectedItem.data == 0)
					{
						Alert.show("请选择父亲民族!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d301_21.text) == "")
					{
						Alert.show("请输入母亲家庭地址!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d301_48.text) == "")
					{
						Alert.show("请输入父亲家庭地址!","系统提示");
						return;
					}
				}
				if(StringUtil.trim(this.d301_36.text) == "")
				{
					Alert.show("请输入领证人!","系统提示");
					return;
				}
				if(this.d301_37.selectedItem.data == 0)
				{
					Alert.show("请选择与新生儿关系!","系统提示");
					return;
				}
				if(this.d301_38.selectedItem.data == 0)
				{
					Alert.show("请选择领证人有效证件类别!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_39.text) == "")
				{
					Alert.show("请输入领证人证件号码!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_40.text) == "")
				{
					Alert.show("请选择填表日期!","系统提示");
					return;
				}
				if(this.d301_22.selectedItem.data == 0)
				{
					Alert.show("请选择出生地点分类!","系统提示");
					return;
				}
				if(this.d301_23.enabled == true && StringUtil.trim(this.d301_23.text) == "")
				{
					Alert.show("请输入出生地其它!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_27.text) == "")
				{
					Alert.show("请输入签发人!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_28.text) == "")
				{
					Alert.show("请选择签发时间!","系统提示");
					return;
				}
				var queryBirthRequest:QueryBirthRequest = new QueryBirthRequest();
				queryBirthRequest.d301_10 = this.d301_10.text;
				this.birthService.validateSaveBirthCertiticate(queryBirthRequest);
			}
			
			private function validateSaveBirthCertiticateHandler(event:ResultEvent):void
			{
				var queryBirthResponse:Object = event.result;
				if(!queryBirthResponse.state)
				{
					Alert.show(queryBirthResponse.errorMessage,"系统提示");
					return;
				}
				var queryBirthRequest:QueryBirthRequest = new QueryBirthRequest();
				queryBirthRequest.d301_10 = this.d301_10.text;
				queryBirthRequest.d301_26 = this.systemUser.institutionCode;
				this.birthService.validateStockCertiticate(queryBirthRequest);
			}
			
			private function validateStockCertiticateHandler(event:ResultEvent):void
			{
				var queryBirthResponse:Object = event.result;
				if(!queryBirthResponse.state)
				{
					Alert.show(queryBirthResponse.errorMessage,"系统提示");
					return;
				}
				
				this.savevalidateBirthCertificate();
			}
			
			private function savevalidateBirthCertificate():void
			{
				this.vBrithInfo = new VBirthInfo();
				this.d301 = new D301();
				this.d301.d30102 = StringUtil.trim(this.d301_02.text);
				this.d301.d30103 = this.d301_03.selectedItem.data;
				
				var dateTimeFormatter:DateTimeFormatter = new DateTimeFormatter();
				dateTimeFormatter.dateTimePattern = "yyyy-MM-dd";
				var dateTime_str:String = this.d301_04.text; //dateTimeFormatter.format(this.d301_04.selectedDate);
				this.d301_04_str = dateTime_str + " " +  this.hour.text + ":" + this.minute.text;
				this.d301_04_date = DateFormatter.parseDateString(this.d301_04_str);;
				this.d301.d30104 = this.d301_04_date;
				
				this.d301.d30105 = this.d301_05.getAreaCode();
				this.d301.d30107 = this.d301_07.value;
				this.d301.d30147 = StringUtil.trim(this.d301_47.text);
				this.d301.d30108 = this.d301_08.value;
				this.d301.d30109 = this.d301_09.selectedItem.data;
				this.d301.d30110 = StringUtil.trim(this.d301_10.text);
				if(this.father.selected == true)
				{
					this.d301.d30167 ="1";
					this.d301.d30116 = StringUtil.trim(this.d301_11_16.text);
					this.d301.d30117 = StringUtil.trim(this.d301_12_17.text);
					this.d301.d30118 = DateField.stringToDate(StringUtil.trim(this.d301_13_18.text),"YYYY-MM-DD");
					this.d301.d30119 = this.d301_14_19.selectedItem.data;
					this.d301.d30120 = this.d301_15_20.selectedItem.data;
					this.d301.d30135 = this.d301_34_35.selectedItem.data;
					this.d301.d30148 = StringUtil.trim(this.d301_21_.text);
					this.d301.d30143 = StringUtil.trim(this.d301_43_.text);
					
					this.d301.d30111 = "";
					this.d301.d30134 = "";
					this.d301.d30112 = "";
					this.d301.d30113 = null;
					this.d301.d30114 = "";
					this.d301.d30115 = "";
					this.d301.d30121 = "";
					
					this.vBrithInfo.fatherType = this.d301_34_35.selectedItem.label;
					this.vBrithInfo.fatherNationality = this.d301_14_19.selectedItem.label;
					this.vBrithInfo.fatherVolk = this.d301_15_20.selectedItem.label;
					this.vBrithInfo.familyFaAddress = StringUtil.trim(this.d301_21_.text) ;
				}else if(this.mother.selected == true)
				{
					this.d301.d30167 ="2";
					this.d301.d30111 = StringUtil.trim(this.d301_11_16.text);
					this.d301.d30112 = StringUtil.trim(this.d301_12_17.text);
					this.d301.d30113 = DateField.stringToDate(StringUtil.trim(this.d301_13_18.text),"YYYY-MM-DD");
					this.d301.d30114 = this.d301_14_19.selectedItem.data;
					this.d301.d30115 = this.d301_15_20.selectedItem.data;
					this.d301.d30121 = StringUtil.trim(this.d301_21_.text);
					this.d301.d30134 = this.d301_34_35.selectedItem.data;
					this.d301.d30143 = StringUtil.trim(this.d301_43_.text);
					
					this.d301.d30116 = "";
					this.d301.d30135 = "";
					this.d301.d30117 = "";
					this.d301.d30118 = null;
					this.d301.d30119 = "";
					this.d301.d30120 = "";
					this.d301.d30148 = "";
					
					this.vBrithInfo.montherType = this.d301_34_35.selectedItem.label;
					this.vBrithInfo.motherNationality = this.d301_14_19.selectedItem.label;
					this.vBrithInfo.motherVolk = this.d301_15_20.selectedItem.label;
					this.vBrithInfo.familyAddress = StringUtil.trim(this.d301_21_.text) ;
				}else{
					if(StringUtil.trim(this.d301_11.text) != ""){
						this.d301.d30111 = StringUtil.trim(this.d301_11.text);
						this.d301.d30112 = StringUtil.trim(this.d301_12.text);
						this.d301.d30113 = DateField.stringToDate(StringUtil.trim(this.d301_13.text),"YYYY-MM-DD");
						this.d301.d30114 = this.d301_14.selectedItem.data;
						this.d301.d30115 = this.d301_15.selectedItem.data;
						this.d301.d30134 = this.d301_34.selectedItem.data;
						
						this.vBrithInfo.montherType = this.d301_34.selectedItem.label;
						this.vBrithInfo.motherNationality = this.d301_14.selectedItem.label;
						this.vBrithInfo.motherVolk = this.d301_15.selectedItem.label;
						this.d301.d30121 = StringUtil.trim(this.d301_21.text);
						this.vBrithInfo.familyAddress = StringUtil.trim(this.d301_21.text);
					}
					if(StringUtil.trim(this.d301_16.text) != ""){
						this.d301.d30116 = StringUtil.trim(this.d301_16.text);
						this.d301.d30117 = StringUtil.trim(this.d301_17.text);
						this.d301.d30118 = DateField.stringToDate(StringUtil.trim(this.d301_18.text),"YYYY-MM-DD");;
						this.d301.d30119 = this.d301_19.selectedItem.data;
						this.d301.d30120 = this.d301_20.selectedItem.data;
						this.d301.d30135 = this.d301_35.selectedItem.data;
						
						this.vBrithInfo.fatherType = this.d301_35.selectedItem.label;
						this.vBrithInfo.fatherNationality = this.d301_19.selectedItem.label;
						this.vBrithInfo.fatherVolk = this.d301_20.selectedItem.label;
						this.d301.d30148 = StringUtil.trim(this.d301_48.text);//父亲家庭地址
						this.vBrithInfo.familyFaAddress = StringUtil.trim(this.d301_48.text);
					}
					this.d301.d30167 = null;
					this.d301.d30143 = StringUtil.trim(this.d301_43.text);
				}
				
				this.d301.d30122 = this.d301_22.selectedItem.data;
				this.d301.d30123 = StringUtil.trim(this.d301_23.text);
				/* this.d301.d30124 = this.d301_24.selectedItem.data; */
				this.d301.d30125 = StringUtil.trim(this.d301_25.text);
				this.d301.d30126 = this.d301_26.selectedItem.data;
				this.d301.d30127 = StringUtil.trim(this.d301_27.text);
				this.d301.d30128 = DateField.stringToDate(this.d301_28.text, "YYYY-MM-DD");
				this.d301.d30129 = this.d301_29.value;
				this.d301.d30130 = "2";//签发机构类型
				this.d301.d30131 = this.d301_31.getAreaCode();
				this.d301.d30132 = StringUtil.trim(this.d301_32.text);
				this.d301.d30133 = this.d301_33.selectedDate;
				this.d301.d30136 = StringUtil.trim(this.d301_36.text);
				this.d301.d30137 = this.d301_37.selectedItem.data;
				this.d301.d30138 = this.d301_38.selectedItem.data;
				this.d301.d30139 = StringUtil.trim(this.d301_39.text);
				this.d301.d30140 = this.d301_40.selectedDate;
				this.d301.d30142 = "5";//换发类型  0 首发        1换发        2补发
				this.d301.d30157 =Number(this.d301_57.text);
				
				this.vBrithInfo.areaName = this.d301_31.getAreaName();
				this.vBrithInfo.sex = this.d301_03.selectedItem.label;
				this.vBrithInfo.birth = this.d301_04_str;
				this.vBrithInfo.health = this.d301_09.selectedItem.label;
				this.vBrithInfo.deliverDate = this.d301_33.text;
				this.vBrithInfo.birthAreaName = this.d301_05.getAreaName();
				this.vBrithInfo.relation = this.d301_37.selectedItem.label;
				this.vBrithInfo.licensType = this.d301_38.selectedItem.label;
				this.vBrithInfo.licensDate = this.d301_40.text;
				this.vBrithInfo.birthAreaType = this.d301_22.selectedItem.label;
				/* this.vBrithInfo.birthIns = this.d301_24.selectedItem.label; */
				this.vBrithInfo.viseIns = this.d301_26.selectedItem.label;
				this.vBrithInfo.signDate = this.d301_28.text;
				
				var window:Confirmation = new Confirmation();
				window.owner = this;
				window.d301 = this.d301;
				window.vBirthInfo = this.vBrithInfo;
				PopUpManager.addPopUp(window,this);
				var x:Number = (this.parentApplication.mdiCanvas.width - window.width) / 2;
				var y:Number = (this.parentApplication.mdiCanvas.height - window.height) / 2;
				window.move(x, y);
				
			}
			
/* 			private function saveBirthCertificate():void
			{
				this.birthService.saveBirthCertificate(d301);
			} */
			
			
			private function queryByIdHandler(event:ResultEvent):void
			{
				var flag:String = event.result as String;
				var urlRequest:URLRequest = null;
				if(flag == "1") {
					urlRequest = new URLRequest(this.parentApplication.contextRoot + "/print/printBirthInfo_new.jsp?d30110=" + this.d301.d30110 + "&userCode=" + this.systemUser.userCode);
				} else if(flag == "0") {
					urlRequest = new URLRequest(this.parentApplication.contextRoot + "/print/printBirthInfo.jsp?d30110=" + this.d301.d30110);
				}
				navigateToURL(urlRequest,"_blank");
			}
			
			/*----------监控出生地点分类-------------*/
			private function changeBrith():void
			{
				if(this.d301_22.selectedItem.data == 4)
				{
					this.d301_23.enabled = true;
				}else
				{
					this.d301_23.text = "";
					this.d301_23.enabled = false;
				}
			}
			
			private function changeLicen():void
			{
				var id:String = this.d301_37.selectedItem.data;
				if(id == "1")
				{
					if(this.father.selected){
						this.d301_36.text = StringUtil.trim(this.d301_11_16.text);
						this.d301_39.text = StringUtil.trim(this.d301_12_17.text);
						this.d301_38.selectedIndex = this.d301_34_35.selectedIndex;
					}else{
						this.d301_36.text = StringUtil.trim(this.d301_16.text);
						this.d301_39.text = StringUtil.trim(this.d301_17.text);
						this.d301_38.selectedIndex = this.d301_35.selectedIndex;
					}
				}else if(id == "2")
				{
					if(this.mother.selected){
						this.d301_36.text = StringUtil.trim(this.d301_11_16.text);
						this.d301_39.text = StringUtil.trim(this.d301_12_17.text);
						this.d301_38.selectedIndex = this.d301_34_35.selectedIndex;
					}else{
						this.d301_36.text = StringUtil.trim(this.d301_11.text);
						this.d301_39.text = StringUtil.trim(this.d301_12.text);
						this.d301_38.selectedIndex = this.d301_34.selectedIndex;
					}
					
				}else
				{
					this.d301_36.text = "";
					this.d301_39.text = "";
					this.d301_38.selectedIndex =1;
				}
			}
			//读卡获取民族信息
			private function getNationDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.label == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			//读卡(单亲)
			protected function readCardClickHandler(event:MouseEvent):void
			{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(this.father.selected && sex=="女"){
							Alert.show("请读父亲信息！","系统提示");
						}else if(this.mother.selected && sex=="男"){
							Alert.show("请读母亲信息！","系统提示"); 
						}else{
							this.d301_11_16.text = array[0];//姓名
							this.d301_12_17.text = array[5];//身份证号
							this.d301_13_18.text = array[3];//出生日期
							this.d301_21_.text = array[4];//家庭地址
							var nation:String = array[2] + "族";
							var nationDataProvider:ArrayCollection = ArrayCollection(this.d301_15_20.dataProvider);
							var nationIndex:int = getNationDropDownListSelectedIndex(nationDataProvider,nation);
							this.d301_15_20.selectedIndex = nationIndex;
							setSingleBirthday(null);
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			//读卡(母亲)
			protected function readCard_mother(event:MouseEvent):void
			{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(sex=="女"){
							this.d301_11.text = array[0];//姓名
							this.d301_12.text = array[5];//身份证号
							this.d301_13.text = array[3];//出生日期
							this.d301_21.text = array[4];//家庭地址
							var nation:String = array[2] + "族";//民族
							var nationDataProvider:ArrayCollection = ArrayCollection(this.d301_15.dataProvider);
							var nationIndex:int = getNationDropDownListSelectedIndex(nationDataProvider,nation);
							this.d301_15.selectedIndex = nationIndex;
							setMontherBirthday(null);
						}else{
							Alert.show("请读母亲信息！","系统提示");
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			//读卡(父亲)
			protected function readCard_father(event:MouseEvent):void
			{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(sex=="男"){
							this.d301_16.text = array[0];//姓名
							this.d301_17.text = array[5];//身份证号
							this.d301_18.text = array[3];//出生日期
							this.d301_48.text = array[4];//家庭地址
							var nation:String = array[2] + "族";//民族
							var nationDataProvider:ArrayCollection = ArrayCollection(this.d301_20.dataProvider);
							var nationIndex:int = getNationDropDownListSelectedIndex(nationDataProvider,nation);
							this.d301_20.selectedIndex = nationIndex;
							setFatherBirthday(null);
						}else{
							Alert.show("请读父亲信息！","系统提示");
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			/*--------------母亲查询信息-----------------*/
 			private function queryMother():void
			{
				try{
					opensave(null);
					if(this.parentMother.selected){
						if(this.d307_06.text == ""){
							Alert.show("请输入母亲姓名!","系统提示");
							return;
						}
						if(this.d307_08.text == ""){
							Alert.show("请输入母亲证件号码!","系统提示");
							return;
						}
					}else if(this.parentFather.selected){
						if(this.d307_06.text == ""){
							Alert.show("请输入父亲姓名!","系统提示");
							return;
						}
						if(this.d307_08.text == ""){
							Alert.show("请输入父亲证件号码!","系统提示");
							return;
						}
					}
					var querywindow:Querywindow = new Querywindow();
					if(this.parentMother.selected){
						querywindow.d30706 = StringUtil.trim(this.d307_06.text);
						querywindow.d30708 = StringUtil.trim(this.d307_08.text);
					}else if(this.parentFather.selected){
						querywindow.d30712 = StringUtil.trim(this.d307_06.text);
						querywindow.d30714 = StringUtil.trim(this.d307_08.text);
					}
					querywindow.owner = this;
					PopUpManager.addPopUp(querywindow,this);
					var x:Number = (this.parentApplication.mdiCanvas.width - querywindow.width) / 2 + 50;
					var y:Number = (this.parentApplication.mdiCanvas.height - querywindow.height) / 2;
					querywindow.move(x, y);
				}catch(error:Error){
					Alert.show("网络繁忙，请重试!","系统提示");
				}
				
			} 
			
			private function opensave(event:Event):void{
				this.saveD301.enabled = true;
			}
 			protected function readCardMother(event:MouseEvent):void
			{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						var sex:String = array[1];
						if(this.parentFather.selected && sex=="女"){
							Alert.show("请读父亲信息！","系统提示");
						}else if(this.parentMother.selected && sex=="男"){
							Alert.show("请读母亲信息！","系统提示"); 
						}else{
							this.d307_06.text = array[0];//姓名
							this.d307_08.text = array[5];//身份证号
							queryMother();
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			} 
			private function checkParent(event:MouseEvent):void{
				if(this.father.selected){
					this.d301_11_16.text =this.d301_16.text;
					this.d301_34_35.selectedIndex =this.d301_35.selectedIndex;
					this.d301_12_17.text =this.d301_17.text;
					this.d301_13_18.text =this.d301_18.text;
					this.d301_14_19.selectedIndex =this.d301_19.selectedIndex;
					this.d301_15_20.selectedIndex =this.d301_20.selectedIndex;
					this.d301_21_.text =this.d301_48.text;
					this.d301_43_.text =this.d301_43.text;
				}else if(this.mother.selected){
					this.d301_11_16.text =this.d301_11.text;
					this.d301_34_35.selectedIndex =this.d301_34.selectedIndex;
					this.d301_12_17.text =this.d301_12.text;
					this.d301_13_18.text =this.d301_13.text;
					this.d301_14_19.selectedIndex =this.d301_14.selectedIndex;
					this.d301_15_20.selectedIndex =this.d301_15.selectedIndex;
					this.d301_21_.text =this.d301_21.text;
					this.d301_43_.text =this.d301_43.text;
				}else if(this.parents.selected){
					this.d301_11_16.text ="";
					this.d301_34_35.selectedIndex =0;
					this.d301_12_17.text ="";
					this.d301_13_18.text ="";
					this.d301_14_19.selectedIndex =0;
					this.d301_15_20.selectedIndex =0;
					this.d301_43_.text ="";
					this.d301_21_.text ="";
				}
			}
			
			//与新生儿关系（读卡）
			private function readCard_A(event:MouseEvent):void{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						this.d301_36.text = array[0];//领证人姓名
						this.d301_39.text = array[5];//领证人身份证号
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
		]]>
	</fx:Script>
	<s:Scroller x="11" y="4" width="100%" height="100%" horizontalScrollPolicy="auto"
				verticalScrollPolicy="auto">
		<s:VGroup>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1175">
				<s:NavigatorContent  label="首签确认">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<s:HGroup width="100%" height="100%" verticalAlign="middle" paddingBottom="5" paddingLeft="10" paddingRight="10">
							<s:Label text="机构外首次签发申请表信息查询条件" styleName="mustQuery" paddingRight="3" color="#FF3030"/>
							<s:RadioButton id="parentMother" groupName="fm" label="母亲" selected="true"/>
							<s:RadioButton id="parentFather" groupName="fm" label="父亲"/>
							<s:Label text="姓名" paddingLeft="8"/><s:TextInput id="d307_06"/>
							<s:Label text="身份证号"/><s:TextInput id="d307_08" width="140" restrict="^ \f\n\r\t\v"/>
							<s:Button label="查询" click="queryMother()"/>
							<s:Button label="读卡" id="duka4" click="readCardMother(event)" enabled="false"/>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1175">
				<s:NavigatorContent  label="所属地区" width="100%">
					<s:VGroup paddingBottom="2" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem colSpan="12">
									<component:AreaComboBoxCommon id="d301_31" width="100%" paddingBottom="5" paddingTop="5" horizontalAlign="left"/>
									<s:TextInput id="d301_57" visible="false"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all"  width="1175">
				<s:NavigatorContent  label="分娩信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="姓　　名"/><s:TextInput id="d301_02"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="性　　别"/><s:DropDownList id="d301_03" width="130" dataProvider="{sexData}" labelField="label" selectedIndex="0"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="right">
									<s:Label text="身长"/><s:NumericStepper minimum="8" stepSize="0.1" maximum="100" value="50" id="d301_08" width="60"/><s:Label text="cm"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="right">
									<s:Label text="出生孕周"/><s:NumericStepper id="d301_07" value="40" maximum="70" minimum="20" width="60"/>
									<s:Label text="周"/>
									<s:TextInput id="d301_47" width="20" text="0" restrict="0-7"/><s:Label text="天"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="病历号"/><s:TextInput id="d301_32"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="出生日期"/><!--<s:TextInput id="d301_04"/>-->
									<!--component:DateTimeField yearNavigationEnabled="true" id="d301_04" width="130" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
									monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
									formatString="YYYY-MM-DD"/-->
									<mx:DateField yearNavigationEnabled="true" id="d301_04" width="110" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD"/>
									<s:TextInput id="hour" maxChars="2" restrict="0-9" width="20"/><s:Label text="时"/>
									<s:TextInput id="minute" maxChars="2" restrict="0-9" width="20"/><s:Label text="分"/>
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="健康状况"/><s:DropDownList id="d301_09" width="130"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="出生证号"/><s:TextInput id="d301_10"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="体重"/><s:NumericStepper  minimum="1" stepSize="0.1" maximum="10000" value="3000" id="d301_29" width="60"/><s:Label text="g"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="填表日期"/>
									<mx:DateField yearNavigationEnabled="true" id="d301_33" width="130" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="接生员"/><component:FindSelectedItemComboBox id="d301_25" editable="true" width="125"/>
								</mx:GridItem>
								<mx:GridItem>
									
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow>
								<mx:GridItem colSpan="6">
									<s:Label text="出生地址"/>
									<!--<component:AreaComboBox id="d301_05" width="100%" paddingBottom="10" paddingTop="5" horizontalAlign="left"/>-->
									<component:AreaComboBoxCommon id="d301_05" width="100%" paddingBottom="10" paddingTop="5" horizontalAlign="left"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1175" id="tab">
				<s:NavigatorContent label="双亲信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Button label="读卡" id="duka1" width="60" click="readCard_mother(event)" enabled="false"/>
							<s:Label text="母亲姓名"/><s:TextInput id="d301_11"/>
							<s:Label text="证件类别"/><s:DropDownList id="d301_34"/>
							<s:Label text="证件号码"/><s:TextInput id="d301_12" width="140"/>
							<s:Label text="出生日期"/><s:TextInput id="d301_13" width="100"/>
							<s:Label text="母亲国籍"/><s:DropDownList id="d301_14" width="120"/>
							<s:Label text="母亲民族"/><s:DropDownList id="d301_15" width="115"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Button label="读卡" id="duka2" width="60" click="readCard_father(event)" enabled="false"/>
							<s:Label text="父亲姓名"/><s:TextInput id="d301_16"/>
							<s:Label text="证件类别"/><s:DropDownList id="d301_35"/>
							<s:Label text="证件号码"/><s:TextInput id="d301_17" width="140"/>
							<s:Label text="出生日期"/><s:TextInput id="d301_18" width="100"/>
							<s:Label text="父亲国籍"/><s:DropDownList id="d301_19" width="120"/>
							<s:Label text="父亲民族"/><s:DropDownList id="d301_20" width="115"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="母亲地址"/><s:TextInput id="d301_21" width="300"/>
							<s:Label text="父亲地址"/><s:TextInput id="d301_48" width="300"/>
							<s:Label text="联系方式"/><s:TextInput id="d301_43"/>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
				<s:NavigatorContent label="单亲信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:RadioButton label="父亲" id="father" groupName="parent" click="checkParent(event)"/>
							<s:RadioButton label="母亲" id="mother" groupName="parent" click="checkParent(event)"/>
							<s:RadioButton label="取消选中" id="parents" groupName="parent" click="checkParent(event)"/>
							<s:Button label="读卡" id="duka3" click="readCardClickHandler(event)" enabled="false"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="姓　　名"/><s:TextInput id="d301_11_16"/>
							<s:Label text="证件类别"/><s:DropDownList id="d301_34_35"/>
							<s:Label text="证件号码"/><s:TextInput id="d301_12_17" width="140"/>
							<s:Label text="出生日期"/><s:TextInput id="d301_13_18" width="100"/>
							<s:Label text="国　　籍"/><s:DropDownList id="d301_14_19" width="130"/>
							<s:Label text="民　　族"/><s:DropDownList id="d301_15_20" width="130"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="联系方式"/><s:TextInput id="d301_43_"/>
							<s:Label text="家庭地址"/><s:TextInput id="d301_21_" width="310"/>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1175">
				<s:NavigatorContent label="领证人信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="与新生儿关系"/><s:DropDownList id="d301_37" change="changeLicen()"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="领证人"/><s:TextInput id="d301_36"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="证件类别"/><s:DropDownList id="d301_38"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="证件号码"/><s:TextInput id="d301_39" width="140"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="填表日期"/>
									<mx:DateField yearNavigationEnabled="true" id="d301_40" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Button label="读卡" id="duka5" click="readCard_A(event)" enabled="false"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1175">
				<s:NavigatorContent label="签发信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="出生地点分类"/><s:DropDownList id="d301_22" width="130" change="changeBrith()"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="出生地其他"/><s:TextInput id="d301_23" enabled="false"/>
								</mx:GridItem>
								<!--<mx:GridItem horizontalAlign="left">
								<s:Label text="接生机构"/><s:DropDownList id="d301_24"/>
								</mx:GridItem>-->
								<mx:GridItem>
									<s:Label text="签证机构"/><s:DropDownList id="d301_26"/>
								</mx:GridItem>
								<mx:GridItem  width="100%">
									<mx:FormItem label="签发人" required="false" width="100%">
										<local:FindSelectedItemComboBox id="d301_27" editable="true"  width="122">
										</local:FindSelectedItemComboBox>
									</mx:FormItem>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="签发时间"/><!--<s:TextInput id="d301_28"/>-->
									<mx:DateField yearNavigationEnabled="true" id="d301_28" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD" enabled="false"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<s:HGroup contentBackgroundColor="#FF0000" verticalAlign="middle" horizontalAlign="right" paddingBottom="20" paddingTop="10" paddingLeft="10" width="85%" paddingRight="20" height="30">
				<s:Button label="确定" click="validateSaveBirthCertiticate()" id="saveD301"/>
			</s:HGroup>
		</s:VGroup>
	</s:Scroller>
</s:Module>