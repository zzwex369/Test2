<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:component = "com.xyw.sys.custom.component.*"
	xmlns:skin = "com.xyw.sys.custom.skin.*"
	title="结案管理登记" horizontalCenter="0" verticalCenter="0" backgroundColor="white"
	chromeColor="#5CACEE" close = "removeWindow()" cornerRadius="5" width="1200" 
	skinClass="com.xyw.sys.custom.skin.CustomTitleWindow">
	<fx:Declarations>
		<s:RemoteObject id="f301Service" destination="f301Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="_renewF301"  result="_renewF301Handler(event)"/>
		</s:RemoteObject>
		
		
		<s:RemoteObject id="f307Service" destination="f307Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryById"  result="queryByIdHandler(event)"/>
		</s:RemoteObject>
		
		
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>
		</s:RemoteObject>
		
		<mx:DateValidator id="dateValidator"  property="text"
						  inputFormat="yyyy-mm-dd" 
						  wrongLengthError="格式错误  正确格式例：2008-01-01"
						  wrongDayError="天数错误"
						  wrongMonthError="月份错误"
						  wrongYearError="年份错误"
						  invalidCharError="内容无效"
						  requiredFieldError="内容不能为空"/>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace component "com.xyw.sys.custom.component.*";
		@namespace skin "com.xyw.sys.custom.skin.*";
		.textInput{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomTextInputSkin");
		}
		
		.myLabel {
			fontSize:12px;
			paddingTop:4px;
		}
		.myGrid {
			verticalAlign:middle;
		}
		.myTextInput
		{
			fontFamily:微软雅黑;
		}
		.must {
			color:red;
			fontSize:20px;
			fontWeight:bold;
			paddingTop:5px;
		}
		mx|ToolTip
		{
			fontSize:15;  
			color:#FF6699; 
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.fnbj.model.F301;
			import com.xyw.module.fnbj.model.F307Request;
			import com.xyw.module.fnbj.model.VF301;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.custom.component.CustomIcon;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			[Embed(source="images/add.png")] 
			private var addicon:Class; 
			[Embed(source="images/del.png")] 
			private var delicon:Class; 
			[Bindable]
			private var systemUser:SystemUser =null;
			private var f301:F301;
			[Bindable]
			private var rowVGroup:int =3;
			public var vf301:Object;
			private var comboBoxDataRequest:ComboBoxDataRequest;
			public var arrayTip:Array=[null,null,null,null];//保存提示信息  objId:Object,objType:String,errorString:String,tip:ToolTip
			
			private function removeWindow():void
			{
				PopUpManager.removePopUp(this);
			}
			
			private function creationCompleteHandler(event:FlexEvent):void
			{
				this.systemUser =this.parentApplication.systemUser;
				initializeComboBox();
			}
			
			private function initializeComboBox():void
			{
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.flag ="D101";
				comboBoxDataRequest.sql ="select t.d101_01, t.d101_02 from D101 t where t.d101_01 = '" + this.systemUser.institutionCode + "' or t.d101_11 ='" + this.systemUser.institutionCode +"'";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_06 t";
				comboBoxDataRequest.flag = "S301_06";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S601_04 t";
				comboBoxDataRequest.flag = "S601_04";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
			}
			/*-----------------返回数据放到赋值到下拉菜单-----------------*/
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				--rowVGroup;
				var index:int=0;
				var comboBoxDataResponse:Object =event.result;
				var flag:String =comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection =comboBoxDataResponse.comboBoxDataList;
				
				if(flag =="D101"){
					index=CompMethod.getDropDownListSelectedIndex(comboBoxDataList,this.systemUser.institutionCode);
					this.F301_55.dataProvider =comboBoxDataList;
					this.F301_55.selectedIndex =index;
				}else if(flag == "S301_06"){
					index =CompMethod.getDropDownListSelectedIndex(comboBoxDataList,"1");
					this.F301_04.dataProvider = comboBoxDataList;
					this.F301_04.selectedIndex = index;
				}else if(flag == "S601_04"){
					this.F301_51.dataProvider = comboBoxDataList;
					this.F301_51.selectedIndex = index;
					var f307Request:F307Request=new F307Request();
					f307Request.f30733=vf301.f30101;
					this.f307Service.queryById(f307Request);
				}
				if(!rowVGroup)
					loadF301();
			}
			
			private function loadF301():void
			{
				rowVGroup=1;
				f301=new F301();
				f301.f30101=vf301.f30101;
				F301_02_01.text=vf301.f30102;
				F301_04.selectedIndex=CompMethod.getDropDownListSelectedIndex(ArrayCollection(F301_04.dataProvider),vf301.f30104);
				F301_05_01.text=vf301.f30105;
				F301_06.text=DateField.dateToString(vf301.f30106,'YYYY-MM-DD');
				F301_17.text=vf301.f30117; 
			
			}
				
				//读卡(母亲)
				protected function readCard_mother(event:MouseEvent):void
				{
					try
					{
						var array:Array = CompMethod.readCard();
						var flag:Boolean=CompMethod.sex('女',array[1])
						if(flag){
							this.F301_02_01.text = array[0];//姓名
							this.F301_05_01.text = array[5];//身份证号
							this.F301_06.text = array[3];//出生日期
							//	setF303_08(null);
							var nation:String = array[2] + "族";//民族
						}else{
							Alert.show("请读母亲信息！","系统提示");
						} 
					}catch(error:Error) 
					{
						Alert.show("读卡失败！");
					}
				}
			
			protected function overAndUp(event:MouseEvent):void
			{
				if(event.type==MouseEvent.ROLL_OVER)
				{ 
					if(!arrayTip[3])
						arrayTip=CompMethod.showTip(arrayTip[0],arrayTip[1],arrayTip[2],arrayTip[3]);
					if(!this.hasEventListener(Event.ENTER_FRAME))
						this.addEventListener(Event.ENTER_FRAME,enterFrameHandler); 
				}else
				{
					this.removeEventListener(Event.ENTER_FRAME,enterFrameHandler);			
					arrayTip[3]=CompMethod.destoryTip(arrayTip[3]);		
				}
				
			}
			
			/***************显示删除提示信息*********************/
			private function enterFrameHandler(event:Event):void
			{
				if(arrayTip[3])	
					arrayTip=CompMethod.showTip(arrayTip[0],arrayTip[1],arrayTip[2],arrayTip[3]);		 
			}
			
			
			/**
			 *时间输入验证
			 */
			private function focusOut(id:Object):Boolean
			{
				var textDate:Date=DateField.stringToDate(id.text,"YYYY-MM-DD");
				if(id.errorString&&!textDate)
				{
					var str:String=id.errorString;
					id.errorString='';
					dateValidator.source=null;
					if((str.lastIndexOf("yyyy-mm-dd"))!=-1)
						str=str.substring(0,str.lastIndexOf("yyyy-mm-dd"));
					//保存提示信息  objId:Object,objType:String,errorString:String,tip:ToolTip
					arrayTip=CompMethod.showTip(id,"3",str,arrayTip[3]);
					return true;
				}else
					return dateValidatorHandler(id,textDate);
			}
			
			/**
			 *清空提示 格式化日期
			 */
			private function dateValidatorHandler(id:Object,textDate:Date):Boolean
			{
				dateValidator.source=null;
				id.errorString='';
				if(arrayTip[3])
				{
					CompMethod.destoryTip(arrayTip[3]);	
					arrayTip=[null,null,null,null]
				}					
				if(textDate)
					id.text=DateField.dateToString(textDate,"YYYY-MM-DD");
				return false;
			}
			
			
			
			
			private function validatePerinata():void
			{
				if(arrayTip[3])
					return;
				if(StringUtil.trim(F301_53.text)=="")
				{
					Alert.show("请输入结案人员","系统提示");
					return;
				}
				if(StringUtil.trim(F301_54.text)=="")
				{
					Alert.show("请输入结案时间","系统提示");
					return;
				}
				if(F301_51.selectedIndex==2)
				{
					if(!validateF301_52())
					{
						Alert.show("请输入未登记产后检查原因","系统提示");
						return;
					}
				}
				_renewF301();
			}
			
			private function _renewF301():void
			{
				f301.f30150='1';
				f301.f30151=F301_51.selectedItem.data;
				f301.f30153=StringUtil.trim(F301_53.text);
				f301.f30154=DateField.stringToDate(F301_54.text,'YYYY-MM-DD');
				f301.f30155=F301_55.selectedItem.data;
				f301.f30152=(F301_51.selectedIndex==1)?'':getF301_52Text();
				f301Service._renewF301(f301);
			}
			
			private function _renewF301Handler(event:ResultEvent):void
			{
				var f310Response:Object=event.result;
				if(f310Response.state)
				{
					Alert.show(f310Response.promptMessage+",点击确定即将关闭页面！","系统提示",1,this,closeHander);
				}else
				{
					save.enabled=true;				
					Alert.show(f310Response.errorMessage,"系统提示");
				}
			}
			
			private function closeHander(event:CloseEvent):void
			{
				if(event.detail==1)
				{
					var index:Object=this.owner;
					index.refresh();
					this.removeWindow();
				}
			}
			
			private function queryByIdHandler(event:ResultEvent):void
			{
				var f307Response:Object=event.result;
				if(f307Response.state)
				{
					if(f307Response.rowCount>=1)
					{
						this.currentState='';
						F301_51.selectedIndex=1
					}
					else if(f307Response.rowCount==0)
					{
						F301_51.selectedIndex=2;
						this.currentState="specialReason";
					}
					
				}else
				{
					Alert.show(f307Response.errorMessage,"系统提示");				
				}
			}
			
		
			
			
			/**
			 *添加行
			 */
			private function addRowHandler(event:FlexEvent):void
			{
				if(rowVGroup==5)
					return ;
				tab.height+=21;
				navigator.height+=21;
				grid.height+=21;
				vgroup.height+=20;
				var text:TextInput=new TextInput();
				text.width=859;
				text.setFocus();
				text.styleName='textInput';
				text.setStyle("height",20);
				text.setStyle('paddingLeft',20);
				text.addEventListener(FlexEvent.ENTER,addRowHandler);
				vgroup.addElementAt(text,vgroup.numElements);
				rowVGroup=vgroup.numElements;
				
			}
			
			/**
			 *删除行
			 */
			private function delRowHandler(event:MouseEvent):void
			{
				tab.height-=21;
				navigator.height-=21;
				grid.height-=21;
				vgroup.height-=20;
				vgroup.removeElementAt(vgroup.numElements-1);
				rowVGroup=vgroup.numElements;
			}
			
			
			/**
			 *验证是否为空
			 */
			private function validateF301_52():Boolean
			{
				var num:int=0;
				for(var k:int=0;k<vgroup.numElements;k++)
				{
					var textInput:Object=vgroup.getElementAt(k);
					if(!StringUtil.trim(textInput.text))
						num++;
				}
				if(num==vgroup.numElements)
					return false;
				return true;
			}
			
			/**
			 *得到诊断内容
			 */
			private function getF301_52Text():String
			{
				var str:String='';
				for(var k:int=0;k<vgroup.numElements;k++)
				{
					var textInput:Object=vgroup.getElementAt(k);
					if(StringUtil.trim(textInput.text))
						str+=(StringUtil.trim(textInput.text)+"!");
				}
				return  str; 
			}
			
				
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal" />			
		<s:State name="specialReason" />
	</s:states>
	<s:Scroller  width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup paddingBottom="20" horizontalAlign="center" paddingTop="10" creationComplete="creationCompleteHandler(event)">
			<mx:TabNavigator width="1155" chromeColor="#ffffff" creationPolicy="all" id="tab"
							 height.normal="96"
							 height.specialReason="154"
							 >
				<s:NavigatorContent width="100%" label="基本信息" id="navigator">	
					<mx:Grid paddingLeft="8" paddingBottom="10" id="grid"  
							 height.normal="62"
							 height.specialReason="120">
						<mx:GridRow>
							<mx:GridItem>
								<s:Label  styleName="myLabel" text="孕 妇  姓 名"/>	
								<s:TextInput id="F301_02_01" width="130" editable="false"/>	
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="证件类型" paddingLeft="15"/>
								<s:DropDownList id="F301_04" width="130" mouseChildren="false"/>
								
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="证件号码" paddingLeft="15"/>
								<s:TextInput id="F301_05_01" width="140" editable="false"/>
								
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="出生日期" paddingLeft="15"/>
								<component:CustomRangeDateField id="F301_06" />
								<s:Button label="读卡" id="duka2" enabled="{systemUser.duka =='1'}"  click="readCard_mother(event)" icon="{CustomIcon.READCARD}"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>	
							
							<mx:GridItem>
								<s:Label styleName="myLabel" text="建 册  编 号"/>	
								<s:TextInput id="F301_17" width="130" editable="false"/>
							</mx:GridItem>
							
							<mx:GridItem colSpan="3">
								<s:Label styleName="myLabel" text="产后访视" paddingLeft="15"/>
								<s:DropDownList id="F301_51" width="130" mouseChildren="false"/>
								
							</mx:GridItem>
						</mx:GridRow>
						
						<mx:GridRow paddingTop="5" includeIn="specialReason">
							<mx:GridItem  colSpan="4">
								<s:Label styleName="myLabel" text="未登记产后检查原因：" />
								<s:Label styleName="myLabel" text="(友情提示，在本行按回车添加行或者点击按钮)" color="red"/>
								<s:Button label="添加行" click="addRowHandler(null)" icon="{addicon}" enabled="{rowVGroup&lt;5}" iconPlacement="left"/>
								<s:Button label="删除行" click="delRowHandler(event)" icon="{delicon}" enabled="{rowVGroup&gt;1}" iconPlacement="left"/>
							</mx:GridItem>
						</mx:GridRow>
						
						<mx:GridRow includeIn="specialReason">
							<mx:GridItem paddingLeft="55" colSpan="4">
								<s:VGroup id="vgroup">
									<s:TextInput width="859" height="20"  enter="addRowHandler(null)" styleName="textInput"/>
								</s:VGroup>
							</mx:GridItem>
						</mx:GridRow>
					</mx:Grid>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator width="1155" chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent width="100%" label="结案信息">	
					<mx:Grid paddingLeft="8" paddingBottom="10">
						<mx:GridRow>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="结 案  人 员"/>
								<s:TextInput id="F301_53" width="130"/>
								
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="结案单位" paddingLeft="20"/>
								<s:DropDownList id="F301_55" width="130" mouseChildren="false"/>
								
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="结案时间" paddingLeft="10"/>
								<component:CustomRangeDateField id="F301_54" width="140" isSelectNow="true"/>
								
							</mx:GridItem>
						</mx:GridRow>
					</mx:Grid>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<s:HGroup verticalAlign="middle" horizontalAlign="center" paddingBottom="5" paddingTop="5" width="1155">
				<s:Button buttonMode="true" id="save" label="保存" click="validatePerinata()"  enabled="{F301_02_01.text}" chromeColor="#ffffff"/>
			</s:HGroup>
		</s:VGroup>
	</s:Scroller>
</s:TitleWindow>
