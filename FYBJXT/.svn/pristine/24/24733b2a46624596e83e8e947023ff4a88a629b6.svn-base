<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%" height="100%"
		  creationComplete="init()"
		  xmlns:component="com.xyw.sys.custom.component.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Declarations>
		<s:RemoteObject id="certificateRegistService" destination="certificateRegistService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryStock" result="queryStockHandler(event)" />
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.csyxzm.model.Stock;
			import com.xyw.module.csyxzm.model.StockRequest;
			import com.xyw.module.csyxzm.model.StockResponse;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			import mx.rpc.events.ResultEvent;
			
			import spark.events.GridSelectionEvent;
			
			private var stockRequest:StockRequest = null;
			
			public var stock:Stock = null;
			
			private function init():void
			{
				this.stockDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE, onSelectionChange);
			}
			
			private function onSelectionChange(event:GridSelectionEvent):void
			{
				this.stock = DataGrid(event.target).selectedItem as Stock;
			}
			
			private function query():void
			{
				this.stockRequest = new StockRequest();
				this.stockRequest.institution = this.institutionComboBox.getLastSelectedInstitutionCode();
				this.stockRequest.timeStart = this.timeStart.text;
				this.stockRequest.timeEnd = this.timeEnd.text;
				this.stockRequest.useType = "1";
				
				this.certificateRegistService.queryStock(stockRequest);
			}
			
			private function queryStockHandler(event:ResultEvent):void
			{
				var stockResponse:Object = event.result;
				var listStock:ArrayCollection = stockResponse.listStock;
				
				this.stockDataGrid.dataProvider = listStock;
			}
			
			private function detail():void
			{
				if(this.stock == null)
				{
					Alert.show("请选择要操作的行!","系统提示");
					return;
				}
				
				var detailTitleWindow:DetailTitleWindow = new DetailTitleWindow();
				detailTitleWindow.owner = this;
				PopUpManager.addPopUp(detailTitleWindow, this);
				var x:Number = (this.width - detailTitleWindow.width) / 2;
				var y:Number = (this.height - detailTitleWindow.height) / 2;
				detailTitleWindow.move(x, y);
				
				this.stockRequest.institution = this.stock.institutionCode;
				detailTitleWindow.stockRequest = this.stockRequest;
			}
		]]>
	</fx:Script>
	<s:VGroup width="100%">
		<mx:TabNavigator  width="100%" chromeColor="#ffffff" creationPolicy="all">
			<s:NavigatorContent  label="出生证库存查询" width="100%">
				<s:VGroup width="100%" paddingBottom="10" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Label text="单位"/><component:InstitutionComboBox id="institutionComboBox"/>
					</s:HGroup>
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Label text="签发时间"/><mx:DateField yearNavigationEnabled="true" id="timeStart" width="120" dayNames='["日","一","二","三","四","五","六"]'
															monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
															formatString="YYYY-MM-DD"/>
						<s:Label text="至"/><mx:DateField yearNavigationEnabled="true" id="timeEnd" width="120" dayNames='["日","一","二","三","四","五","六"]'
														 monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
														 formatString="YYYY-MM-DD"/>
						<s:Button label="查询" click="query()"/>
						<s:Button label="详情" click="detail()"/>
					</s:HGroup>
				</s:VGroup>
			</s:NavigatorContent>
		</mx:TabNavigator>
		<s:DataGrid id="stockDataGrid" editable="true" rowHeight="22" width="100%" height="400" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn headerText="序号" width="50" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
					<s:GridColumn dataField="institution" headerText="单位" width="200"/>
					<s:GridColumn dataField="count" headerText="库存" width="80"/>
					<s:GridColumn dataField="institutionCode" headerText="单位" visible="false"/>
					<s:GridColumn dataField="" headerText=""/>
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
	</s:VGroup>
</s:Module>
