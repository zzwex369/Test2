<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  xmlns:control="com.xyw.sys.custom.itemrenderer.*"
		  creationComplete="moduleCreationCompleteHandler(event)"
		  width="100%" height="100%">
	<fx:Declarations>
		<s:RemoteObject id="e601Service" destination="e601Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryE601" result="queryE601Handler(event)"/>
			<s:method name="deleteE601" result="deleteE601Handler(event)"/>
		</s:RemoteObject>
	
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		
		
		.textAlign
		{
			textAlign:center;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.msss.etbj.model.E601;
			import com.xyw.module.msss.etbj.model.E601Request;
			import com.xyw.module.msss.etbj.model.VE601;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.controls.ProgressBar;
			import mx.controls.Tree;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ModuleEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.modules.IModuleInfo;
			import mx.modules.ModuleManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.components.BorderContainer;
			import spark.components.DataGrid;
			import spark.events.GridSelectionEvent;
			private var comboBoxDataRequest:ComboBoxDataRequest;
			[Bindable]
			public var ve601:Object = null;
			public var e601:E601 = null;
			public var e601Request:E601Request=null;
			[Bindable]
			public var systemUser:SystemUser =null;
			[Bindable] 
			private var itemArr:ArrayCollection = new ArrayCollection(); 
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				this.systemUser = this.parentApplication.systemUser;
				
			
			}
			
			
			
			/*----------获取查询条件数据---------*/
			private function initQueryParam():Boolean
			{
				e601=new E601();
				e601Request = new E601Request();
				try{	
					var type:String = this.E601_47.getLastSelectedInstitution();
					var e60147:String = this.E601_47.getLastSelectedInstitutionCode();
					e601.e60147= type == "8"?e60147:e60147.substring(0,Number(type));	
					
					if(!E601_04.text&&!E601_16.text&&
					   !E601_03.text&&!E601_09.text)
						{
							
							e601Request.dateField='e601_34';
							e601.e60136=getRadioButtonValue();
							e601Request.timeStr = DateField.stringToDate(this.timeStart.text,'YYYY-MM-DD');
							e601Request.timeEnd = DateField.stringToDate(this.timeEnd.text,'YYYY-MM-DD');	
						}else{				
							e601.e60104 = StringUtil.trim(this.E601_04.text);
							e601.e60103 = StringUtil.trim(this.E601_03.text);					
							e601.e60109= StringUtil.trim(this.E601_09.text);	
							e601.e60116= StringUtil.trim(this.E601_16.text);	
						}
					
					e601Request.e601=e601;
				}catch(error:Error) {		
					Alert.show("查询条件异常");
					return false;
				}
				return true;
			}
			
			//读卡
			protected function readCard(event:MouseEvent):void
			{
				try
				{
					//readCard是调用index.js下的函数，读卡涉及index.jsp和index.js两个文件
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						if(array[1]!="女")
						{
							Alert.show("请读母亲信息！","系统提示");
							return;
						}
						this.E601_03.text = array[0];//姓名
						this.E601_04.text = array[5];//身份证号
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			public function queryE601(event:MouseEvent):void
			{
				queryVE601(1,20);
			}
			
			private function queryE601Handler(event:ResultEvent):void{
				var e601Response:Object = event.result;
				var ve601s:ArrayCollection =e601Response.ve601s;
				var rowCount:Number = e601Response.rowCount;
				this.certificateDataGrid.dataProvider=ve601s;
				this.pagerBar.pageSize = 20;
				this.pagerBar.dataGrid =new DataGrid();  
				this.pagerBar.rowCount = rowCount;
				this.pagerBar.resultData = ve601s;
				this.pagerBar.dataBind();
				this.pagerBar.pagerFunction = pagerFunction;
				if(rowCount > 0) {
					this.pagerBar.enabled = true;
				}	
			}
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
					
				queryVE601(currentPageIndex,pageSize);
			}
			
			public function refresh():void
			{
			
				queryVE601(this.pagerBar.currentPageIndex,20);
			}
			
			private function queryVE601(pageIndex:int, pageSize:int):void
			{
				this.initQueryParam();
				e601Request.parameterPageindex = pageIndex;
				e601Request.parameterPagesize = pageSize;
				this.e601Service.queryE601(e601Request);
				
			}
			
			private function deleteE601(event:MouseEvent):void
			{
				
				var strArr:Array=certificateDataGrid_getSelect();
				if(!strArr[0]){
					Alert.show(strArr[1],"系统提示");;
					return;
				}
				
				if(ve601.e60169!='3')
				{
					Alert.show("只有未上传至省平台的信息才能删除！","系统提示");
					return;
				}
				
				var validateArr:Array=validateE60136(ve601);
				if(!validateArr[0]){
					Alert.show(validateArr[1],"系统提示");
					return;
				}
				
				
				if(del==event.target){
					Alert.show("是否删除这条记录","系统提示",3,this,_closeHandler);
				}
			} 
			
			private function _closeHandler(event:CloseEvent):void
			{
				if(event.detail==Alert.YES){
					var  e601:E601=new E601();
					e601.e60101=this.ve601.e60101;
					this.e601Service.deleteE601(e601);
				}
			}
			
			
			public function deleteE601Handler(event:ResultEvent):void
			{
				var e601Response:Object = event.result;
				if(e601Response.errorMessage == null){
					if(e601Response.promptMessage != null){
						Alert.show(e601Response.promptMessage, "系统提示");
					}
					refresh();
				} else {
					Alert.show(e601Response.errorMessage, "系统提示");
				}
			} 
			
			
			private function updateE601(event:MouseEvent):void
			{	   
			
				var strArr:Array=certificateDataGrid_getSelect();
				if(!strArr[0]){
					Alert.show(strArr[1],"系统提示");;
					return;
				}
				
				var validateArr:Array=validateE60136(ve601);
				if(!validateArr[0]){
					Alert.show(validateArr[1],"系统提示");;
					return;
				}
				
					var window:title = new title();
					window.ve601 = this.ve601;
					CompMethod.popUpTitleWindow(window,this);
				
			}
			
			
			private function setStrDate(item:Object,column:DataGridColumn):String
			{
				var date:Date=item[column.dataField];
				return DateField.dateToString(date,'YYYY-MM-DD');
				
			}
			
			/**
			 *true 邮寄
			 * false 删除，修改
			 */
			private function certificateDataGrid_getSelect(flag:Boolean=false):Array
			{
				var strArr:Array=new Array(false,null);//0,boolean  1.message
				var itemArr:ArrayCollection=certificateDataGrid.getAllItems();
				if(itemArr.length)
				{
					if(!flag)
					{
						if(itemArr.length>1)
							strArr[1]="只能操作一条数据！";	
						else
						{
							strArr[0]=true;
							this.ve601=itemArr.getItemAt(0);
						}
						
						
					}else
						strArr[0]=true;
				}else
					strArr[1]="请选择一条数据！";					
				return strArr;	 
			}
			
			
			/**
			 * true   item vf601
			 * false item ArrayList
			 * 判断信息是否可以操作
			 */
			private function validateE60136(item:Object,flag:Boolean=true):Array
			{
				var arr:Array=new Array(2);//0,boolean  1.str 提示原因 2.count 计数器 
				arr[0]=false;
				var count:int=0;
				if(flag)
				{
					if(item.e60136!='1'&&item.e60136!='4')
						arr[1]="选中的数据不在未邮寄或退回范围内，无法进行操作！";
					else 
						arr[0]=true;
				}else if(!flag)
				{
					for(var i:int=0;i<item.length;i++)
					{
						var ve601:Object=item.getItemAt(i);
						if(ve601.e60136!='1'&&ve601.e60136!='4')
							++count;
					}
					if(!count)
						arr[0]=true;
					else 
						arr[1]="选中的数据有"+count+"条不在未邮寄范围内，无法修改！";
				}
				return arr;
			}
			
			
			private function batchSend(event:MouseEvent):void
			{
				var strArr:Array=certificateDataGrid_getSelect(true);
				if(!strArr[0]){
					Alert.show(strArr[1],"系统提示");;
					return;
				}
				var validateArr:Array=validateE60136(certificateDataGrid.getAllItems(),false);
				if(!validateArr[0]){
					Alert.show(validateArr[1],"系统提示");;
					return;
				}
				
				var window:batchSendTitle = new batchSendTitle();
				window.itemArr = this.certificateDataGrid.getAllItems();
				CompMethod.popUpTitleWindow(window,this,true);
			}
			
			
			private function getRadioButtonValue():String
			{
				var value:String;
				var radioButton:RadioButton;
				for(var i:int=1;i<E601_36.numElements;i++)
				{
					radioButton=E601_36.getElementAt(i) as RadioButton;
					if(radioButton.selected)
					{
						value=radioButton.value.toString();
						break;
					}
				}
				return value;
			}
		]]>
	</fx:Script>
	<mx:TabNavigator  width="100%" chromeColor="#ffffff" creationPolicy="all" id="tab">
		<s:NavigatorContent width="100%" label="综合查询" buttonMode="true">
			<s:VGroup>
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="登记医院"/>
					<component:InstitutionComboBox id="E601_47" width="100%" buttonMode="true"/>
				</s:HGroup>
				
				
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle" gap="10" id="E601_36">
					<s:Label text="标本状态"/>
					<s:RadioButton label="全部" value="" groupName="E601_36" selected="true"/>
					<s:RadioButton label="未邮寄" value="1" groupName="E601_36"/>
					<s:RadioButton label="已邮寄/待审核" value="2" groupName="E601_36"/>
					<s:RadioButton label="已审核" value="3" groupName="E601_36"/>
					<s:RadioButton label="退回" value="4" groupName="E601_36"/>
					<s:RadioButton label="发布" value="5" groupName="E601_36"/>
				</s:HGroup>
				
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="登记时间"/>
					<component:CustomRangeDateField id="timeStart" isSelectFirst="true" width="130" />
					<s:Label text="至"/>
					<component:CustomRangeDateField id="timeEnd" isSelectNow="true" width="130" />
					
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="母亲姓名"/><s:TextInput id="E601_03"/>
					<s:Label text="证件号码"/><s:TextInput id="E601_04" width="140"/>
					<s:Button id="duka1" width="60" label="读卡" click="readCard(event)"  enabled="{systemUser.duka=='1'}"   buttonMode="true"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="儿童姓名"/><s:TextInput id="E601_16"/>
					<s:Label text="联系电话"/><s:TextInput id="E601_09" width="140"/>
					<s:Button label="查询" click="queryE601(event)" buttonMode="true"/>
					<s:Button label="修改" click="updateE601(event)" buttonMode="true"/>
					<s:Button label="删除" click="deleteE601(event)" buttonMode="true" id="del"/>
					<s:Button label="批量邮寄" click="batchSend(event)"/>
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
		
	</mx:TabNavigator>
	<s:Scroller y="170" width="100%" height="680" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup width="100%" paddingBottom="10">
		
			<control:CheckBoxDataGrid id="certificateDataGrid" width="100%" height="340"
									  borderVisible="true" verticalGridLineColor="#FFFFFF"
									  alternatingItemColors="[#FFFFFF,#EEEEEE]"
									  dataProvider="{itemArr}"  editable="true"
									  rollOverColor="#D1E3F1" rowHeight="23"
									  horizontalScrollPolicy="auto"
									  verticalScrollPolicy="auto">
				<control:columns>  
					<mx:DataGridColumn width="41" editable="false" headerText="序号" headerStyleName="textAlign" 
									   itemRenderer="{new ClassFactory(com.xyw.sys.custom.itemrenderer.DataGridNum)}">
					</mx:DataGridColumn>
					<!--<mx:DataGridColumn  sortable="false"  headerText=""  editable="false"
					itemRenderer="com.xyw.sys.custom.itemrenderer.CheckBoxItemRenderer"
					headerRenderer="com.xyw.sys.custom.itemrenderer.CheckBoxHeaderRenderer"/> -->
					<mx:DataGridColumn width="100" dataField="e60103" headerText="产妇姓名" headerStyleName="textAlign"/>
					<mx:DataGridColumn width="140" dataField="e60104" headerText="产妇身份证号" headerStyleName="textAlign"/>
					<mx:DataGridColumn width="100" dataField="e60105Str" headerText="出生日期" headerStyleName="textAlign"  editable="false" />
					<mx:DataGridColumn width="90" dataField="e60109" headerText="联系方式" headerStyleName="textAlign" editable="false"/>
					<mx:DataGridColumn width="100" dataField="e60130" headerText="两病样本编号" headerStyleName="textAlign" editable="false"/>
					<mx:DataGridColumn width="100" dataField="e60131" headerText="多病样本编号" headerStyleName="textAlign" editable="false"/>
					<mx:DataGridColumn width="100" dataField="e60118Str" headerText="出生日期" headerStyleName="textAlign" editable="false" />
					<mx:DataGridColumn width="90" dataField="e60136Zh" headerText="标本状态" headerStyleName="textAlign" editable="false"/>
					<mx:DataGridColumn width="90" dataField="e60140Zh" headerText="标本审核" headerStyleName="textAlign" editable="false"/>
					<mx:DataGridColumn width="100" dataField="e60137Str" headerText="邮寄日期" headerStyleName="textAlign" editable="false" />
					<mx:DataGridColumn width="120" dataField="e60134Str" headerText="登记日期" headerStyleName="textAlign" editable="false" />
					<mx:DataGridColumn width="100" dataField="e60147Zh" headerText="登记单位" headerStyleName="textAlign" editable="false"/>
				</control:columns>  
			</control:CheckBoxDataGrid> 
			<component:PagerBar id="pagerBar" enabled="false" isExcel="false" isExcel2="false" isPrinter="false"/>
		</s:VGroup>	
	</s:Scroller>
</s:Module>
