<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  xmlns:one="com.xyw.module.etbj.etjc.etjcdj.componet.*"
		  xmlns:two="com.xyw.module.etbj.etjc.etjcdj2.componet.*"
		  xmlns:three="com.xyw.module.etbj.etjc.etjcdj3.componet.*"
		  creationComplete="moduleComplete()" >
	<fx:Declarations>
		<s:RemoteObject id="e304Service" destination="e304Service"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="queryPhasesE304" result="queryPhasesE304Handler(event)"/>
		</s:RemoteObject>	
	</fx:Declarations>
	<fx:Metadata>
		[Event(name="notHasObj", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.etbj.model.E304;
			import com.xyw.module.etbj.model.E304Request;
			import com.xyw.sys.custom.component.CompMethod;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.GridSelectionEvent;
	
			public var ve301:Object=null;
			[Bindable]
			public var ve304:Object;
			private var dataGrid:Object=null;
			private var isRemove:Boolean=true;
			private var isSelectItem:Boolean=false;
			private var e304Request:E304Request=null;
			private var enterStateArr:Array=[false,false,false];//是否删除报错按钮
			private var oldIdx:int=-2;
			private var newIdx:int=-1;
			private var ve301Arr:Array=new Array();//存储301对象
			private var ve304Arr:Array=new Array();//存储 304集合对象
			
			
			/**
			 *
			 */
			private function moduleComplete():void
			{
				if(ve304)
				{
					loadjc(ve304);
					isSelectItem=true;	
				}					
				query();
				ve301Arr.push(CompMethod.cloneObject(ve301));

			}
			
			
			/**
			 * 档案发生改变   判读是否查询 从新加载信息
			 */
			public function queryOrPutObj():void
			{
				for(var i:int=0; i<ve301Arr.length;i++)
				{
					var e30101:Object=ve301Arr[i].e30101;
					if(e30101!=ve301.e30101)
					{
						query();
						ve301Arr.push(CompMethod.cloneObject(ve301));
						break;
					}else if(e30101==ve301.e30101)
					{
						if(ve304Arr[i])
						{
							certificateDataGrid.dataProvider=ve304Arr[i];
							var ve304:Object=certificateDataGrid.dataProvider.getItemAt(0);
							if(this.ve304.e30401!=ve304.e30401)
							{
								this.ve304=ve304;
								loadjc(ve304);
							}
						}else
							dispatch();
						break;
					}
				}
			}
			
			/**
			 *跳转至档案页
			 */
			private function dispatch():void
			{
				this.dispatchEvent(new Event("notHasObj"));
			}
			
			private function initQueryParam():void
			{
				var e304:E304=new E304();
				e304Request =new E304Request();
				try{	
					e304.e30440=ve301.e30101;
					e304Request.e304=e304;
				}catch(error:Error) {		
					
				}
			}
			
			private function query(currentPageIndex:int=1, pageSize:int=20):void
			{
				
				this.initQueryParam();
				e304Request.parameterPageindex=currentPageIndex;
				e304Request.parameterPagesize=pageSize;
				this.e304Service.queryPhasesE304(e304Request);
				
			}
			
			
			
			
			private function querye304():void
			{
				query();
				
				
			}
			
			
			private function refresh():void
			{
				query(this.pagerBar.currentPageIndex);
				
			}
			
			private function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				query(currentPageIndex,pageSize);
				
			}		
			
			private function queryPhasesE304Handler(event:ResultEvent):void{
				var e304Response:Object = event.result;
				var e304s:ArrayCollection =e304Response.ve304s;
				var rowCount:Number = e304Response.rowCount;
				this.certificateDataGrid.dataProvider=e304s;
				this.pagerBar.pageSize = 20;
				this.pagerBar.dataGrid = this.certificateDataGrid;  
				this.pagerBar.rowCount = rowCount;
				this.pagerBar.resultData = e304s;
				this.pagerBar.dataBind();
				this.pagerBar.pagerFunction = pagerFunction;
				if(e304Response.errorMessage !=null){
					Alert.show(e304Response.errorMessage,"系统提示");
					return;
				}
				if(rowCount > 0) {
					this.pagerBar.enabled = true;
				}	
				setDefaultItem();
			}
			
			/**
			 *
			 */
			private function isRemoveDataGrid(idx:int):void
			{
				var numEle:int=vgroup.numElements;
				if(!idx&&numEle>1)
				{
					if(!dataGrid)
					{
						dataGrid=new Object();
						dataGrid=vgroup.removeElementAt(0);
					}
				}else if(idx&&numEle==1)
					vgroup.addElementAt(VGroup(dataGrid),0);
			}
			
			/**
			 *
			 */
			private function setDefaultItem():void
			{
				var dataLength:int=certificateDataGrid.dataProviderLength;
				isRemoveDataGrid(dataLength);
				ve304Arr.push(dataLength?CompMethod.cloneObject(certificateDataGrid.dataProvider):null);
				if(dataLength)
				{
					var ve304:Object=certificateDataGrid.dataProvider.getItemAt(0);
					if(isSelectItem)
					{
						ve304=this.ve304;
						isSelectItem=false;
					}else
						loadjc(ve304);
				}else
				{
					//isRemove=true;
				//	enterStateHandler(0);
					setIdx(0,0);
					dispatch();
				}
			}
			
			/**
			 *
			 */
			private function setIdx(old:int,newIdx:int):void
			{
				this.oldIdx=old;
				this.newIdx=newIdx;
			}
			
				//	['1','3','6','8','12','14','16','18','20','24','28','32'];
			private function loadjc(ve304:Object):void
			{
				
				this.ve304=ve304;
				var e30402:String=ve304.e30402;
				e30402=e30402.length==1?0+e30402:e30402;
				var i:int=Number(e30402.substring(0,1));
				setIdx(newIdx,i);
				this.currentState=this.states[i].name;
				callLater(enterStateHandler,[i]);
				certificateDataGrid.selectedItem=ve304;
			}
			
			private function button1_clickHandler(event:MouseEvent):void
			{
				var visible:Boolean=pagerBar.visible;
				if(visible)
					setQueryState(!visible,'显示查询列表',event);
				else
					setQueryState(!visible,'隐藏查询列表',event);
			}
			
			/**
			 *
			 */
			private function setQueryState(visible:Boolean,label:String,event:MouseEvent):void
			{
				event.target.label=label;
				pagerBar.visible=visible;
				certificateDataGrid.visible=visible;
				certificateDataGrid.includeInLayout=visible;
			}
			
			/**
			 * 是否加载信息，删除最后子节点
			 */
			private function enterStateHandler(num:int):void
			{
				
				var childEle:Object=vgParent.getElementAt(0);
				if(oldIdx==newIdx)
					childEle.load();
				if(!enterStateArr[num])
				{
					var ele:Object=childEle.getElementAt(childEle.numElements-1);
					if(ele is HGroup)
						childEle.removeElement(ele);
					enterStateArr[num]=true;
				}
			}
			
			
		]]>
	</fx:Script>
	<s:states>
		<s:State name="jc1"/>
		<s:State name="jc2"/>
		<s:State name="jc3"/>
		
	</s:states>
	<s:Scroller width="1200" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup width="1200" height="100%" gap="0" id="vgroup">
		<s:VGroup width="1188" height="100%" chromeColor="#F6F8FA" contentBackgroundColor="#FFFFFF"
				  paddingLeft="20"  >
				<s:DataGrid id="certificateDataGrid" width="100%" height="300"
							alternatingRowColors="[#FFFFFF,#EEEEEE]" chromeColor="#ffffff"
							rowHeight="22"
							selectionChange="loadjc(DataGrid(event.target).selectedItem)">
					<s:columns>
						<s:ArrayList>
								<s:GridColumn width="40" editable="false" headerText="序号"
											  itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer"/>
								<s:GridColumn width="100" dataField="e30403" headerText="婴儿姓名"/>
								<s:GridColumn width="80" dataField="e30405" headerText="体重"/>
								<s:GridColumn width="80" dataField="e30407" headerText="身长"/>
								<s:GridColumn width="80" dataField="e30402ZH" headerText="月龄"/>
								<s:GridColumn width="100" dataField="e30430ZH" headerText="发育评估"/>
								<s:GridColumn width="80" dataField="e30433ZH" headerText="转诊建议"/>
								<s:GridColumn width="200" dataField="e30434" headerText="转诊原因"/>
								<s:GridColumn width="100" dataField="e30438" headerText="检查医生"/>
								<s:GridColumn width="120" dataField="e30445ZH" headerText="检查机构"/>
								<s:GridColumn width="120" dataField="e30404Str" headerText="检查时间"/>
								<s:GridColumn width="120" dataField="e30437Str" headerText="下次检查时间"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
			<s:HGroup width="100%">
				<component:PagerBar id="pagerBar" width="1000" enabled="false" isExcel="false"
									isExcel2="false" isPrinter="false"/>
				<s:HGroup width="100%" height="100%" horizontalAlign="right">
					
					<s:Button label="隐藏查询列表" buttonMode="true" click="button1_clickHandler(event)"
							  color="#E41515"/>
				</s:HGroup>  
				
			</s:HGroup>
			</s:VGroup>
		<s:VGroup id="vgParent" horizontalAlign="center" paddingLeft="20">
			<one:etjcdj includeIn="jc1" width="100%" height="900"  ve304="{ve304}" />
			<two:etjcdj2 includeIn="jc2" width="100%" height="850" ve304="{ve304}" />
			<three:etjcdj3 includeIn="jc3" width="100%" height="100%" ve304="{ve304}" />
		</s:VGroup>  
	</s:VGroup>
	</s:Scroller>
</s:VGroup>
