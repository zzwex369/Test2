<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  creationComplete="moduleCreationCompleteHandler(event)"
		  width="100%" height="100%" fontFamily="微软雅黑"
		  xmlns:component="com.xyw.sys.custom.component.*">
	<fx:Declarations>
		<s:RemoteObject id="pictureService" destination="pictureService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryVPicture" result="queryVPictureHandler(event)" fault="method1_faultHandler(event)"/>
			<s:method name="queryVPictureByte" result="queryVPictureByteHandler(event)" fault="queryVPictureBytefaultHandler(event)"/>
			<s:method name="delbyId" result="delbyIdHandler(event)" fault="delbyIdfaultHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandle(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		s|DataGrid
		{
			borderAlpha:"0.3";
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDataGridSkin");
			alternatingRowColors:"[#FFFFFF,#EEEEEE]";
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.sys.custom.component.ImageWindow;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.SystemUser;
			import com.xyw.uploadPictures.model.PictureMessage;
			import com.xyw.uploadPictures.model.PictureRequest;
			import com.xyw.uploadPictures.model.PictureResponse;
			import com.xyw.uploadPictures.model.VPicture;
			import com.xyw.uploadPictures.photoGraphWindow;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.Request;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.Fault;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import org.hamcrest.object.nullValue;
			
			import spark.events.GridSelectionEvent;
			import spark.formatters.DateTimeFormatter;
			private var bitmapData:BitmapData; 
			private var comboBoxDataRequest:ComboBoxDataRequest;
			private var imageurl:String = "";
			private var loader:Loader; 
			
			public var pictureRequest:PictureRequest=null;
			public var pictureResponse:PictureResponse=null;
			public var vpicture:VPicture;
			public var systemUser:SystemUser = null;
			
			/*---------------初始化设置----------------*/
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{	
				loader = new Loader();
				this.systemUser = this.parentApplication.systemUser;
				var dateStr:String = DateField.dateToString(new Date(),"YYYY-MM-01");
				this.timeStart.selectedDate = DateFormatter.parseDateString(dateStr);
				this.timeEnd.selectedDate = new Date();
				this.certificateDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE,onSelected);
				this.initializeComboBox();
			}
			
			private function initializeComboBox():void{
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_03";
				comboBoxDataRequest.sql = "select t.s_01,t.s_02 from S301_03 t where t.s_03 = '00'";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S101_04";
				comboBoxDataRequest.sql = "select * from S101_04";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				
			}
			
			/*-----------------返回数据放到赋值到下拉菜单-----------------*/
			private function getComboBoxDataHandle(event:ResultEvent):void{
				var comboBoxDataResponse:Object =  event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				
				if(flag == "S301_03")
				{
					this.pic_09.dataProvider = comboBoxDataList;
					this.pic_09.selectedIndex = 0;
				}else if(flag == "S101_04")
				{
					this.pic_10.dataProvider = comboBoxDataList;
					this.pic_10.selectedIndex = 0;
					
				}  
				
			}
			private function onSelected(event:GridSelectionEvent):void
			{
				this.vpicture = DataGrid(event.target).selectedItem as VPicture;
			}
			/*-------------添加图片-------------*/
			private function uploadImage02():void{
				
				var detailTitleWindow:picturesTitleWindow = new picturesTitleWindow();
				detailTitleWindow.pic08 =this.D301_05.getAreaCode();
				detailTitleWindow.pic09 = this.pic_09.selectedItem.data;
				detailTitleWindow.pic10 = this.pic_10.selectedItem.data;
				
				detailTitleWindow.owner = this;
				PopUpManager.addPopUp(detailTitleWindow, this);
				var x:Number = (this.parentApplication.width - detailTitleWindow.width) / 2;
				var y:Number = (this.parentApplication.height - detailTitleWindow.height) / 2;
				detailTitleWindow.move(x,y);
			}
			private function photoGraph():void{
				var detailTitleWindow:photoGraphWindow = new photoGraphWindow();
				detailTitleWindow.owner = this;
				PopUpManager.addPopUp(detailTitleWindow, this);
				var x:Number = (this.parentApplication.width - detailTitleWindow.width) / 2;
				var y:Number = (this.parentApplication.height - detailTitleWindow.height) / 2;
				detailTitleWindow.move(x,y);
			}
			/*----------------分页条件----------------*/
			private function query(event:MouseEvent):void{
				pictureRequest = new PictureRequest();
				this.initQueryParam();
				pictureRequest.parameterPageindex = 1;
				pictureRequest.parameterPagesize = 20;
				this.pictureService.queryVPicture(pictureRequest); 
			}
			/*----------------查看显示图片------------------*/
			private function imgLoad(event:MouseEvent):void
			{
				if(this.vpicture == null){
					Alert.show("请选择要操作的行!", "系统提示");
					return;
				}
				this.pictureService.queryVPictureByte(this.vpicture);
			}
			private function queryVPictureBytefaultHandler(event:FaultEvent):void {
				Alert.show(event.fault.message);
			} 
			private function queryVPictureByteHandler(event:ResultEvent):void {
				var picmessage:PictureMessage=event.result as PictureMessage;
				if(picmessage.status==false){
					Alert.show(picmessage.message,"系统提示");
					return;
				}
				loader.contentLoaderInfo.addEventListener(Event.COMPLETE,loaderCompleteHandler); 
				loader.loadBytes(picmessage.imageByte);
				
			}
			/*------------------删除图片---------------------*/
			private function delImage(event:MouseEvent):void
			{
				if(this.vpicture == null){
					Alert.show("请选择要操作的行!", "系统提示");
					return;
				}
				Alert.yesLabel="确定";
				Alert.noLabel="取消";
				Alert.show("是否确定删除图片？","系统提示",3,this,delFunction);
			}
			private function delFunction(e:CloseEvent):void
			{
				if(e.detail==Alert.NO)return;
				this.pictureService.delbyId(this.vpicture);
				
			}
			/*------------------返回删除图片信息-------------------------*/
			private function delbyIdHandler(event:ResultEvent):void
			{
				var picmessage:PictureMessage=event.result as PictureMessage;
				if(picmessage.status==false){
					Alert.show(picmessage.message,"系统提示");
					return;
				}
				Alert.show(picmessage.message,"系统提示");
				refresh();
			}
			/*---------------返回删除图片异常信息-----------------*/
			private function delbyIdfaultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.message);
			}
			public function refresh():void
			{
				pictureRequest = new PictureRequest();
				this.initQueryParam();
				pictureRequest.parameterPageindex = this.pagerBar.currentPageIndex;
				pictureRequest.parameterPagesize = 20;
				this.pictureService.queryVPicture(pictureRequest);
			}
			/*---------------得到图片的字符数组并将其转换为图片----------------------*/
			private function loaderCompleteHandler(e:Event):void   
			{   //得到图片
				var bitmap:Bitmap = Bitmap(loader.content);   
				bitmapData = bitmap.bitmapData;
				var imgwindow:ImageWindow = new ImageWindow();
				imgwindow.owner = this;
				PopUpManager.addPopUp(imgwindow,this);
				var x:Number = (this.parentApplication.mdiCanvas.width - imgwindow.width) / 2 ;
				var y:Number = (this.parentApplication.mdiCanvas.height - imgwindow.height) / 2;
				imgwindow.move(x, y);		
				imgwindow.imageSource= new Bitmap(bitmapData,"auto",true);
				imgwindow.init();
			}   
			/*----------获取查询条件数据---------*/
			private function initQueryParam():void
			{
				pictureRequest = new PictureRequest();
				pictureRequest.pic06=this.systemUser.institutionCode;		
				pictureRequest.timeStr = this.timeStart.selectedDate;
				pictureRequest.timeEnd = this.timeEnd.selectedDate;
			}
			/*------------得到所有图片---------*/
			private function queryVPictureHandler(event:ResultEvent):void
			{
				var pictureResponse:PictureResponse = event.result as PictureResponse;	
				var rowCount:Number = pictureResponse.rowCount;
				var vp:ArrayCollection = pictureResponse.vp;	
				if(pictureResponse.status==true) {
					this.pagerBar.dataGrid = this.certificateDataGrid;
					this.pagerBar.rowCount = rowCount;
					this.pagerBar.resultData = vp;
					this.pagerBar.dataBind();
					this.pagerBar.pagerFunction = pagerFunction;
					if(rowCount > 0) {
						this.pagerBar.enabled = true;
					}
				} else {
					Alert.show(pictureResponse.message, "系统提示");
				}
			}
			/*-----------------分页-----------------*/
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				pictureRequest = new PictureRequest();
				this.initQueryParam();
				pictureRequest.parameterPageindex = currentPageIndex;
				pictureRequest.parameterPagesize = pageSize;
				this.pictureService.queryVPicture(pictureRequest); 
			}
			private function method1_faultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.message);
			}
			/*----------------去掉图片后缀类型-----------------*/
			private function subName(vp:VPicture, column:GridColumn):String{
				var columnDataField:String = column.dataField;
				if("pic04" == columnDataField){
					var pic04Str:String= vp.pic04;
					var lastName:int=pic04Str.lastIndexOf('.');
					var pic04Str_:String=pic04Str.substring(0,lastName);
					return pic04Str_;
				}
				return null;
			}
			
			//上传图片之前先验证
			public function uploadImage():void{
				if(this.pic_09.selectedItem.data ==0){
					Alert.show("请选择专业类型","系统提示");
					return;
				}
				if(this.pic_10.selectedItem.data ==0){
					Alert.show("请选择图片信息","系统提示");
					return;
				}
				
				uploadImage02();
			}
		]]>
	</fx:Script>
	<mx:TabNavigator width="100%" height="130" chromeColor="#ffffff" creationPolicy="all">
		<s:NavigatorContent label="图片上传" width="100%">
			<s:VGroup width="100%">
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="经营地址"/>
					<component:AreaComboBoxCommon id="D301_05" width="865"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="报告单位" id="my"/>
					<component:InstitutionComboBox id="D301_14"/>
					
					<s:Label text="专业类型"/>
					<s:DropDownList id="pic_09" width="120"/>
					
					<s:Label text="图片信息"/>
					<s:DropDownList id="pic_10" width="150"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="上传图片时间"/>
					<mx:DateField yearNavigationEnabled="true" id="timeStart" width="120" 
								  dayNames='["日","一","二","三","四","五","六"]'
								  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
								  formatString="YYYY-MM-DD"/>
					<s:Label text="至"/>
					<mx:DateField yearNavigationEnabled="true" id="timeEnd" width="120" 
								  dayNames='["日","一","二","三","四","五","六"]'
								  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
								  formatString="YYYY-MM-DD"/>
					<s:HGroup width="100"><s:Button id="queryButton" label="查询" click="query(event)"/></s:HGroup>
					<s:HGroup width="100"><s:Button label="上传图片" click="uploadImage()"/></s:HGroup>
					<s:HGroup width="100"><s:Button label="查看图片" id="imgButton" click="imgLoad(event)" /></s:HGroup>
					<!--	<s:HGroup width="100"><s:Button label="拍照" click="photoGraph()" /></s:HGroup>
					-->	<s:HGroup width="100"><s:Button label="删除图片" click="delImage(event)" /></s:HGroup>
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
	</mx:TabNavigator>
	<s:DataGrid id="certificateDataGrid" x="1" y="124" width="100%" height="330"
				alternatingRowColors="[#FFFFFF,#EEEEEE]" editable="false" rowHeight="30"
				skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin" textAlign="center">  
		<s:columns>
			<s:ArrayList>
				<s:GridColumn headerText="序号" width="40" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
				<s:GridColumn dataField="pic01" headerText="图片id" visible="false"/>
				<s:GridColumn dataField="pic04" headerText="图片名称" labelFunction="subName"/>
				<s:GridColumn dataField="pic05Str" headerText="上传图片时间"/>
				<s:GridColumn dataField="pic07Zh" headerText="所属单位"/>
				<s:GridColumn dataField="pic08Zh" headerText="所属地区"/>
				<s:GridColumn dataField="pic09Zh" headerText="专业类型"/>
				<s:GridColumn dataField="pic10Zh" headerText="图片信息"/>
				<s:GridColumn headerText="详情" width="100" visible="false">
				</s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	<component:PagerBar id="pagerBar" x="-1" y="476" enabled="false"/>
</s:Module>