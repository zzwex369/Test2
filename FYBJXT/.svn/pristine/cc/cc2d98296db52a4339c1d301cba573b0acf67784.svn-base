<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  width="100%" height="100%" creationComplete="moduleCreationCompleteHandler(event)">
	<fx:Declarations>
		<s:RemoteObject id="f501Service" destination="f501Service"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="queryF501" result="queryF501Handler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		.myLabel {
			fontSize:12px;
			paddingTop:4px;
		}
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		s|DataGrid
		{
			borderAlpha:"0.3";
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDataGridSkin");
			alternatingRowColors:"[#FFFFFF,#EEEEEE]";
		}
		
		 mx|ToolTip
		{
			font-size: 15;
			border-color: red;/* //控制背景色 */
			color: #000;
			font-weight: bold;
			paddingBottom:1; 
			cornerRadius:5;
		} 
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.msss.fnbj.model.F501Request;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.custom.component.SecurityControler;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.components.TitleWindow;
			import spark.events.GridSelectionEvent;
			public var systemUser:SystemUser = null;
			public var f501Request:F501Request;
			[Bindable]
			public var vF501:Object;
			
			//========================启动权限控制============//
			private function security():void{
				SecurityControler.start(null,'visible');
				SecurityControler.addAllPerms(this.parentApplication.permissionList);
			}
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				//security();
				this.systemUser = this.parentApplication.systemUser;
				//检查读卡权限
				if(this.systemUser.duka == "1"){
					this.duka1.enabled = true;
				}
				
				this.certificateDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE,onSelected);
			}
			
			private function onSelected(event:GridSelectionEvent):void
			{
				this.vF501 = DataGrid(event.target).selectedItem;
			}
			
			/*----------获取查询条件数据---------*/
			private function initQueryParam():void
			{
				try
				{
					f501Request = new F501Request();
					var type:String = this.f501_26.getLastSelectedInstitution();
					var f50126:String = this.f501_26.getLastSelectedInstitutionCode();
					f501Request.f50126 = type == "8"?f50126:f50126.substring(0,Number(type));

					
						//f501Request.flag=this.isNull();
					f501Request.f50103 = this.f501_03.text;
					f501Request.f50105 = this.f501_05.text;
					if(this.isNull()=="false")
					{
						f501Request.f50147=getRadioButtonValue(F501_47);
						f501Request.timeStr = DateField.stringToDate(this.timeStart.text,"YYYY-MM-DD");
						f501Request.timeEnd = DateField.stringToDate(this.timeEnd.text,"YYYY-MM-DD");
					}

				}catch(error:Error){
					Alert.show("出错了"+error);
				}
			}
			
			private function query():void
			{
				_query(1);
			}
			
			private function queryF501Handler(event:ResultEvent):void
			{
				this.vF501=null;
				var f501Response:Object = event.result;
				var rowCount:Number = f501Response.rowCount;
				if(f501Response.errorMessage == null)
				{
					var listVF501:ArrayCollection = f501Response.vf501s;
					this.pagerBar.dataGrid = this.certificateDataGrid;
					this.pagerBar.rowCount = rowCount;
					this.pagerBar.resultData = listVF501;
					this.pagerBar.dataBind();
					this.pagerBar.pagerFunction = pagerFunction;
					if(rowCount > 0) {
						this.pagerBar.enabled = true;
					}
					this.vF501=null;
				} else {
					Alert.show(f501Response.errorMessage, "系统提示");
				}
			}
			
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				_query(currentPageIndex,pageSize);
			}
			
			public function refresh():void
			{
				_query(pagerBar.currentPageIndex);
			}
			
			private function _query(currentPageIndex:int,pageSize:int=20):void
			{
				this.initQueryParam();
				f501Request.parameterPageindex = currentPageIndex;
				f501Request.parameterPagesize = pageSize;
				this.f501Service.queryF501(f501Request);
			}
			
			//读卡(母亲)
			protected function readCard_mother(event:MouseEvent):void
			{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(sex=="女"){
							this.f501_03.text = array[0];//姓名
							this.f501_05.text = array[5];//身份证号
						}else{
							Alert.show("请读母亲信息！","系统提示");
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			
			private function getRadioButtonValue(id:Object):String
			{
				var radioButton:RadioButton;
				var value:String;
				for(var i:int =1;i<id.numElements;i++)
				{
					radioButton=id.getElementAt(i) as RadioButton;
					if(radioButton.selected)
					{
						value=radioButton.value.toString();
						break;
					}
				}
				return value;
			}
			
			private function isNull():String
			{
				var flag:String='false';
			    if(StringUtil.trim(f501_03.text)||
					StringUtil.trim(f501_05.text))
					flag='true';
				return flag;
			}
			
			/**
			 * titleType 
			 * 			true csTittle
			 * 			false cs_xqTittle
			 * false 有档案 
			 * true 无档案
			 */
			private function register(title:TitleWindow,status:Boolean=false):void
			{	
				var window :*=title;
				window.vf501=status?null:this.vF501;
				window.fileStatus=status;
				CompMethod.popUpTitleWindow(window,this,true);
			}
			
			
			
			private function cancelSelect(event:MouseEvent):void
			{
				if(this.vF501)
					this.vF501=certificateDataGrid.selectedItem=null;
			}
			
		]]>
	</fx:Script>
	<s:VGroup width="100%">
		<mx:TabNavigator id="xuanze" width="100%" chromeColor="#ffffff" creationPolicy="all">
			<s:NavigatorContent width="100%" label="综合查询">
				<s:VGroup>
					<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10"
							  verticalAlign="middle">
						<s:Label text="申请单位"/>
						<component:InstitutionComboBox id="f501_26" width="619"/>
					</s:HGroup>
					
					<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10"
							  verticalAlign="middle"> 
						<s:HGroup id="F501_47" width="100%" gap="35" mouseChildren="false"
								  paddingTop="5" verticalAlign="middle">
							<s:Label text="报告登记"/>
							<s:RadioButton label="全部" buttonMode="true" groupName="F501_47" value=""/>
							<s:RadioButton label="已检查" buttonMode="true" groupName="F501_47"
										   selected="true" value="1"/>
							<s:RadioButton label="未检查" buttonMode="true" groupName="F501_47"
										   value="2"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingTop="5" verticalAlign="middle">
							<s:Label text="申请日期"/>
							<component:CustomRangeDateField  id="timeStart" isSelectFirst="true" />

							<s:Label text="至"/>
							<component:CustomRangeDateField  id="timeEnd"  isSelectNow="true"/>

							
							
						</s:HGroup>

					</s:HGroup>
					
					<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10"
							  verticalAlign="middle">
						<s:Label text="产妇姓名"/><s:TextInput id="f501_03"/>
						<s:Label text="证号号码"/><s:TextInput id="f501_05" width="140"/>
						<s:Button id="duka1" width="60" label="读卡" click="readCard_mother(event)"
								  enabled="false"/>
						<s:Button label="查询" click="query()"/>
						<s:Button label="取消选中" click="cancelSelect(event)"/>
					</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10"
								  verticalAlign="middle">
						<s:Button label="随访登记" click="register(new csTittle())" enabled="{vF501}"/>
						<s:Button label="随访登记(无档案)" click="register(new csTittle(),true)" enabled="{!vF501}"/>
						<s:Button label="随访登记(产后半年内)" click="register(new cs_xqTittle())" enabled="{vF501}"/>
						<s:Button label="随访登记(产后半年内无档案)" click="register(new cs_xqTittle(),true)" enabled="{!vF501}"/>
					</s:HGroup>
					
				</s:VGroup>
			</s:NavigatorContent>
			
		</mx:TabNavigator>
		<s:DataGrid id="certificateDataGrid" width="100%" height="330"
					alternatingRowColors="[#FFFFFF,#EEEEEE]" editable="true" rowHeight="22"
					skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">
			<s:columns>
				<s:ArrayList>
					<s:GridColumn width="40" editable="false" headerText="序号"
								  itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer"/>
					<s:GridColumn width="100" dataField="f50147" headerText="报告登记" labelFunction="CompMethod.setStrSF"/>
					<s:GridColumn width="100" dataField="f50152" headerText="随访登记" labelFunction="CompMethod.setStrSF"/>
					<s:GridColumn width="90" dataField="f50103" headerText="产妇姓名"/>
					<s:GridColumn width="140" dataField="f50105" headerText="产妇身份证号"/>
					<s:GridColumn width="90" dataField="f50106Str" headerText="出生日期"/>
					<s:GridColumn width="90" dataField="f50107" headerText="联系方式"/>
					
					<s:GridColumn width="100" dataField="f50114Zh" headerText="本次胎儿数"/>
					<s:GridColumn width="90" dataField="f50115" headerText="本次胎数"/>
					<s:GridColumn width="90" dataField="f50118" headerText="月经周期天"/>
					<s:GridColumn width="90" dataField="f50117Str" headerText="末次月经"/>
					<s:GridColumn width="140" dataField="f50123" headerText="临床诊断"/>
					<s:GridColumn width="90" dataField="f50124" headerText="申请医生"/>
					<s:GridColumn width="90" dataField="f50125Str" headerText="申请日期"/>
					<s:GridColumn width="100" dataField="f50126Zh" headerText="申请单位"/>
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		<component:PagerBar id="pagerBar" enabled="false" isExcel="false" isExcel2="false"
							isPrinter="false"/>
	</s:VGroup>
</s:Module>