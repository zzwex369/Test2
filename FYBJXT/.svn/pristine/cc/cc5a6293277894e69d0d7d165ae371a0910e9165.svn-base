<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  width="100%" height="100%">
	<fx:Declarations>
		<s:RemoteObject id="systemService" destination="systemService"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>	
		</s:RemoteObject>
		
		<s:RemoteObject id="l402Service" destination="l402Service"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="queryL402" result="queryL402Handler(event)"/>
		</s:RemoteObject>
		
		<s:RemoteObject id="l403Service" destination="l403Service"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="saveL403" result="saveL403Handler(event)"/>
		</s:RemoteObject>
		<s:Parallel target="{vgroupDataGrid}" id="parallel">
			<!--<s:Resize widthTo="500" duration="1000"/>-->
			<!--模糊-->
			<!--<mx:Blur duration="1000" 
			blurXFrom="10.0" blurXTo="0.0" 
			blurYFrom="10.0" blurYTo="0.0"/>-->
			<!--正常-->
			<!--<mx:Blur duration="1000"
			blurXFrom="0.0" blurXTo="10.0" 
			blurYFrom="0.0" blurYTo="10.0"/>-->
			<s:Resize widthTo="1135"/>
		</s:Parallel>
		
		<s:GlowFilter id="glow1" color="#de7800" />
		<s:AnimateFilter id="effect1" target="{lbl}" bitmapFilter="{glow1}"
						 repeatBehavior="reverse" repeatCount="0" duration="2000">
			<s:SimpleMotionPath property="blurX" valueFrom="0" valueTo="20"/>
			<s:SimpleMotionPath property="blurY" valueFrom="0" valueTo="20"/>
		</s:AnimateFilter>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace component "com.xyw.sys.custom.component.*";
		@namespace skin "com.xyw.sys.custom.skin.*";
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		
		.myLabel {
			fontSize:12px;
			paddingTop:4px;
		}
		.myGrid {
			verticalAlign:middle;
		}
		.myTextInput
		{
			fontFamily:微软雅黑;
		}
		.must {
			color:red;
			fontSize:20px;
			fontWeight:bold;
			paddingTop:5px;
		}
		.errorTip
		{
			font-size: 15;
			border-color: red;/* //控制背景色 */
			color: #fff;
			font-weight: bold;
			paddingBottom:1; 
			cornerRadius:5;
		}
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|DataGrid
		{
			borderAlpha:"0.3";
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDataGridSkin");
			alternatingRowColors:"[#FFFFFF,#EEEEEE]";
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.msss.la.model.L402;
			import com.xyw.module.msss.la.model.L402Request;
			import com.xyw.module.msss.la.model.L403;
			import com.xyw.module.msss.la.model.VL402;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.components.DataGrid;
			import spark.components.gridClasses.GridColumn;
			import spark.events.IndexChangeEvent;
			[Bindable]
			private var vl402:Object =null;
			public var l402Request:L402Request =null;
			[Bindable]
			private var systemUser:SystemUser;
			private var comboBoxDataRequest:ComboBoxDataRequest;
			private var status:Boolean=false;
			private function closeHandler():void
			{
				PopUpManager.removePopUp(this);
			}
			
			private function init():void
			{
				systemUser=this.parentApplication.systemUser;
				initializeComboBox();
			}
			
			private function initializeComboBox():void
			{
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql ="select t.d101_01, t.d101_02 from D101 t ";
				comboBoxDataRequest.flag = "D101";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from  LA304_07 t";
				comboBoxDataRequest.flag = "LA304_07";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from  LA403_02 t";
				comboBoxDataRequest.flag = "LA403_02";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from  LA403_03 t";
				comboBoxDataRequest.flag = "LA403_03";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from  LA403_05 t";
				comboBoxDataRequest.flag = "LA403_05";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = false;
				comboBoxDataRequest.sql = "select t.s_01,t.s_02 from S301_10 t where t.S_05='1' and t.S_04 ="+this.systemUser.userCode;
				comboBoxDataRequest.flag = "S301_10";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = false;
				comboBoxDataRequest.sql = "select t.s_01,t.s_02 from S301_10 t where t.S_05='3' and t.S_04 ="+this.systemUser.userCode;
				comboBoxDataRequest.flag = "S301_10_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
			}
			
			/******************得到数据******************/
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object =  event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				if(flag == "D101")
				{
					var index:int=CompMethod.getDropDownListSelectedIndex(comboBoxDataList,this.systemUser.institutionCode);
					L403_24.dataProvider =L403_25.dataProvider = comboBoxDataList;
					L403_24.selectedIndex =L403_25.selectedIndex=index;
				}else if(flag=="LA304_07")
				{
					L403_15.dataProvider=comboBoxDataList;
					L403_15.selectedIndex=0;
				}else if(flag=="LA403_02")
				{
					L403_10.dataProvider=comboBoxDataList;
					L403_10.selectedIndex=1;
				}else if(flag=="LA403_03")
				{
					L403_09.dataProvider=comboBoxDataList;
					L403_09.selectedIndex=0;
				}else if(flag=="LA403_05")
				{
					L403_17.dataProvider=comboBoxDataList;
					L403_17.selectedIndex=0;
				}else if(flag=="S301_10")
				{
					L403_27.dataProvider=comboBoxDataList;
					L403_27.selectedIndex=0;
				}else if(flag=="S301_10_01")
				{
					L403_23.dataProvider=comboBoxDataList;
					L403_23.selectedIndex=0;
				}
			}	
			
			private function _validateL403():void
			{
				if(CompMethod.validate('1',L403_35,'联系方式'))
					return;	
				if(CompMethod.validate('1',L403_06,'诊断日期'))
					return;	
				if(CompMethod.validate('2',L403_17,'组织学分级'))
					return;	
				if(CompMethod.validate('1',L403_16,'病理组织学诊断'))
					return;	
				if(CompMethod.validate('1',L403_18,'病理分期T'))
					return;	
				if(CompMethod.validate('1',L403_19,'病理分期N'))
					return;	
				if(CompMethod.validate('1',L403_20,'病理分期M'))
					return;	
				if(CompMethod.validate('1',L403_21,'期别'))
					return;	
				if(CompMethod.validate('2',L403_09,'治疗方式'))
					return;	
				
				if(L403_09.selectedIndex==1||L403_09.selectedIndex==2||L403_09.selectedIndex==8)
				{
					if(CompMethod.validate('1',L403_36,L403_36_label.text))
						return;	
				}
				
				
				if(CompMethod.validate('2',L403_10,'随访结果'))
					return;	
				if(L403_10.selectedIndex==2||L403_10.selectedIndex==3
					||L403_10.selectedIndex==4||L403_10.selectedIndex==5)
				{
					if(CompMethod.validate('1',L403_10_date,L403_10_label.text))
						return;	
					if(L403_10.selectedIndex!=2&&L403_10.selectedIndex!=5)
					{
						if(CompMethod.validate('1',L403_10_text,L403_10_01_label.text))
							return;	
					}
				}
				
				if(CompMethod.validate('2',L403_15,'随访方式'))
					return;	
				if(L403_15.selectedIndex==4)
				{
					if(CompMethod.validate('1',L403_38,'其他内容'))
						return;	
				}
				
				if(CompMethod.validate('1',L403_22,'随访日期'))
					return;	
				if(CompMethod.validate('1',L403_23,'随访人员'))
					return;	
				if(CompMethod.validate('2',L403_24,'随访单位'))
					return;	
				if(CompMethod.validate('1',L403_27,'操作员名称'))
					return;	
				if(CompMethod.validate('1',L403_28,'录入日期'))
					return;	
				
				_saveL403();
			}
			
			private function _saveL403():void
			{	
				var l403:L403=new L403();
				l403.l40332='2';
				l403.l40302=vl402.l40201;
				l403.l40303=vl402.l40202;
				l403.l40333=vl402.l40203;
				l403.l40334=vl402.l40204;
				l403.l40304=vl402.l40205;
				l403.l40317=L403_17.selectedItem.data;
				l403.l40309=L403_09.selectedItem.data;
				l403.l40310=L403_10.selectedItem.data;
				l403.l40315=L403_15.selectedItem.data;
				l403.l40324=L403_24.selectedItem.data;
				l403.l40325=L403_25.selectedItem.data;
				l403.l40339=L403_25.selectedItem.label;
				l403.l40326=L403_25.selectedItem.data+'01';
				l403.l40335=StringUtil.trim(L403_35.text);
				l403.l40316=StringUtil.trim(L403_16.text);
				l403.l40318=StringUtil.trim(L403_18.text);
				l403.l40319=StringUtil.trim(L403_19.text);
				l403.l40320=StringUtil.trim(L403_20.text);
				l403.l40321=StringUtil.trim(L403_21.text);
				l403.l40323=StringUtil.trim(L403_23.text);
				l403.l40327=StringUtil.trim(L403_27.text);
				l403.l40306=DateField.stringToDate(L403_06.text,'YYYY-MM-DD');
				l403.l40322=DateField.stringToDate(L403_22.text,'YYYY-MM-DD');
				l403.l40328=DateField.stringToDate(L403_28.text,'YYYY-MM-DD');
				l403.l40329=l403.l40328;
				
				
				if(L403_09.selectedIndex==1||L403_09.selectedIndex==2||L403_09.selectedIndex==8)
					l403.l40336=StringUtil.trim(L403_36.text);
				
				if(L403_10.selectedIndex==2)
				{
					l403.l40330=DateField.stringToDate(L403_10_date.text,'YYYY-MM-DD');
				}
				
				if(L403_10.selectedIndex==3)
				{
					l403.l40312=DateField.stringToDate(L403_10_date.text,'YYYY-MM-DD');
					l403.l40313=StringUtil.trim(L403_10_text.text);
				}
				if(L403_10.selectedIndex==4)
				{
					l403.l40314=StringUtil.trim(L403_10_text.text);
				}
				
				if(L403_10.selectedIndex==5)
				{
					l403.l40331=DateField.stringToDate(L403_10_date.text,'YYYY-MM-DD');
				}
				
				if(L403_15.selectedIndex==4)
				{
					l403.l40338=StringUtil.trim(L403_38.text);
				}
				
				l403Service.saveL403(l403);
			}
			
			private function saveL403Handler(event:ResultEvent):void
			{
				var l403Response:Object=event.result;
				if(l403Response.state)
				{
					Alert.show(l403Response.promptMessage+",点击确定即将刷新页面！","系统提示",1,this,closeHander);
				}else
					Alert.show(l403Response.errorMessage,"系统提示");
			}
			
			private function closeHander(event:CloseEvent):void
			{
				if(event.detail==1)
				{
					CompMethod._refreshIndex(this,"com/xyw/module/fnbj/fnrxaqzsf/index.swf");
				}
			}
			
			
			private function _closeHandler(event:CloseEvent):void
			{
				if(event.detail==1)
				{
					var index:Object=this.owner;
					index.refresh();
					this.closeHandler();
				}
			}
			
			
			private function _L403_09_changeHandler(event:IndexChangeEvent):void
			{
				if(L403_09.selectedIndex==1)
				{
					
					L403_36_label.text='未治疗内\n容';
					callLater(_setHeight);
				}
				else if(L403_09.selectedIndex==2)
				{
					L403_36_label.text='手术内容';
					if(status)
					{
						status=false;
						tab.height-=5;	
						grid.height-=5;	
						vgroup.height-=5;	
						navigatorContent.height-=5;	
					}
				}
				else if(L403_09.selectedIndex==8)
				{
					L403_36_label.text='其他内容';
					if(status)
					{
						status=false;
						tab.height-=5;	
						grid.height-=5;	
						vgroup.height-=5;	
						navigatorContent.height-=5;	
					}
				}
				
			}
			
			private function _setHeight():void
			{
				tab.height+=5;	
				grid.height+=5;	
				vgroup.height+=5;
				navigatorContent.height+=5;	
				status=true;
			}
			private function _L403_10_changeHandler(event:IndexChangeEvent):void
			{
				if(L403_10.selectedIndex==2)
					L403_10_label.text='复发日期';
				else if(L403_10.selectedIndex==3)
				{
					L403_10_label.text='死亡日期';
					L403_10_01_label.text='死亡原因';				
				}
				else if(L403_10.selectedIndex==4)
					L403_10_01_label.text='失访原因';
				else if(L403_10.selectedIndex==5)
					L403_10_label.text='转移日期';
				
				
			} 
			
			
			private function labelFunction(item:Object,col:GridColumn):String
			{
				var flag:String=item[col.dataField]==null?"未登记":"已登记";
				return flag;
			}
			private function onSelected(event:Event):void
			{
				this.vl402 = DataGrid(event.target).selectedItem;
				this.currentState="";
			}
			
			public function queryL402():void
			{
				_query(1,10);
			}
			
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				_query(currentPageIndex,pageSize);
			}
			
			public function refresh():void
			{
				_query(pagerBar.currentPageIndex,10);
			}
			
			
			private function _query(currentPageIndex:int,pageSize:int):void
			{
				this.initQueryParam();
				l402Request.parameterPageindex=currentPageIndex;
				l402Request.parameterPagesize=pageSize;
				this.l402Service.queryL402(l402Request);	
			}
			
			/*----------获取查询条件数据---------*/
			private function initQueryParam():Boolean
			{
				var boolean:Boolean=true;
				var l402:L402=new L402();
				var l40203:String=StringUtil.trim(L402_03.text);
				var l40204:String=StringUtil.trim(L402_04.text);
				l402Request = new L402Request();
				try{
					var type:String = L402_123.getLastSelectedInstitution();
					var l402123:String = L402_123.getLastSelectedInstitutionCode();
					if(this.systemUser.institutionType == "1")
					{
						l402.l402123 = this.systemUser.institutionCode;
					}else{
						if(type == "8")
						{
							l402.l402123  = l402123;
						}else if(type == "6")
						{
							l402.l402123  = l402123.substring(0,6);
						}else if(type == "4")
						{
							l402.l402123  = l402123.substring(0,4);
						}else if(type == "2")
						{
							l402.l402123  = l402123.substring(0,2);
						}
					}
					if(l40203||l40204)
					{
						l402.l40203=l40203;
						l402.l40204=l40204;
						
						l402Request.flag="true";
					}else
					{
						l402Request.timeStr=DateField.stringToDate(timeStart.text,'YYYY-MM-DD');
						l402Request.timeEnd=DateField.stringToDate(timeEnd.text,'YYYY-MM-DD');
						l402Request.flag="false";
					}
					vl402=null;
					l402Request.l402=l402;
					this.currentState='special';
				}catch(e:Error)
				{
					Alert.show("查询异常","系统提示");
				}
				return boolean;
			}
			
			public function queryL402Handler(event:ResultEvent):void
			{
				if(certificateDataGrid.dataProvider)
				{
					certificateDataGrid.dataProvider=null;
					pagerBar.rowCount=0;
				}
				var l402Response:Object = event.result;
				if(!l402Response.state)
				{
					Alert.show(l402Response.errorMessage,"系统提示");
					return;
				}
				var vl402s:ArrayCollection =l402Response.vl402s;
				var rowCount:Number = l402Response.rowCount;
				certificateDataGrid.dataProvider=vl402s;
				pagerBar.pageSize = 10;
				pagerBar.dataGrid = certificateDataGrid;  
				pagerBar.rowCount = rowCount;
				pagerBar.resultData = vl402s;
				pagerBar.dataBind();
				pagerBar.pagerFunction = pagerFunction;
				if(rowCount > 0) {
					pagerBar.enabled = true;
				}
			}
			
			
			private function readCard():void
			{
				var arr:Array =CompMethod.readCard();
				if(arr)
				{
					if(CompMethod.sex('女',arr[1]))
					{
						L402_03.text=arr[0];
						L402_04.text=arr[5];
						queryL402();
					}else
						Alert.show("请读女性身份证","系统提示");
				}else
					Alert.show("读卡失败","系统提示");
			}
		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal"/>			
		<s:State name="special"/>
	</s:states>
	<s:Scroller width="100%" height="100%" chromeColor="#cccccc" horizontalScrollPolicy="auto"
				verticalScrollPolicy="auto">
		<s:VGroup creationComplete="init()" horizontalAlign="center" paddingTop="10" id="vgroup">
			
				<mx:TabNavigator width="100%" height.normal="130" height.special="419">
				
					<s:NavigatorContent width="100%" label="检查查询" buttonMode="true" height.normal="130" height.special="419">
					<s:VGroup width="100%">
						
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							
							<s:Label id="lbl" color="#FD0909" creationComplete="effect1.play();"
									 fontSize="16" text="! 注意：若输入内容，查询不受日期控制，有读卡功能的直接读卡就可以查询"
									 text.normal="! 注意：若输入内容，查询不受日期和录入单位条件限制，有读卡功能的直接读卡就可以查询"/>
						</s:HGroup>
						
						
						<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="录入单位"/>
							<component:InstitutionComboBox id="L402_123" width="732" buttonMode="true"/>
						</s:HGroup>
						
						<s:HGroup width="100%" paddingTop="5" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="姓      名"/><s:TextInput id="L402_03"/>
							<s:Label text="证件号码"/><s:TextInput id="L402_04" width="140"/>
							<s:Label text="登记时间"/><mx:DateField id="timeStart" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
																monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
																text="{DateField.dateToString(new Date(),'YYYY-MM-01')}"
																formatString="YYYY-MM-DD" yearNavigationEnabled="true" buttonMode="true"/>
							<s:Label text="至"/><mx:DateField id="timeEnd" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
															 monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
															 text="{DateField.dateToString(new Date(),'YYYY-MM-DD')}"
															 formatString="YYYY-MM-DD" yearNavigationEnabled="true" buttonMode="true"/>
							<s:Button id="duka1" width="60" label="读卡"   buttonMode="true" enabled="{systemUser.duka=='1'}" click="readCard()"/>
							<s:Button label="查询" buttonMode="true" click="queryL402()" />
						</s:HGroup>
						
						
						
						<s:VGroup  paddingRight="5" width="500" height="100%" includeIn="special" creationCompleteEffect="{parallel}"  itemDestructionPolicy="auto" id="vgroupDataGrid">
							<s:DataGrid id="certificateDataGrid" alternatingRowColors="[#FFFFFF,#EEEEEE]"  
										editable="false" rowHeight="22" width="100%" height="246" 
										selectionChange="onSelected(event)">
								<s:columns>
									<s:ArrayList>
										<s:GridColumn visible="false" dataField="l40201" headerText="主键"/>
										<s:GridColumn width="40" editable="false" headerText="序号" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer"/>
										<s:GridColumn width="150" dataField="l40203" headerText="姓名"/>
										<s:GridColumn width="200" dataField="l40204" headerText="证件号码"/>
										<s:GridColumn width="200" dataField="l40205" headerText="档案编号"/>
										<s:GridColumn width="145" dataField="l40244" headerText="乳腺触诊检查" labelFunction="labelFunction"/>
										<s:GridColumn width="145" dataField="l40284" headerText="乳腺彩色超声检查" labelFunction="labelFunction"/>
										<s:GridColumn width="145" dataField="l402102" headerText="乳腺X线检查" labelFunction="labelFunction"/>
										<s:GridColumn  dataField="l402120" headerText="随访结果登记" labelFunction="labelFunction"/></s:ArrayList>
								</s:columns>
							</s:DataGrid>					
							<component:PagerBar pageSize="10" id="pagerBar" enabled="false"/>
						</s:VGroup>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
		
			<mx:TabNavigator width="100%" chromeColor="#ffffff" creationPolicy="all" id="tab">
				<s:NavigatorContent width="100%" label="基本信息" id="navigatorContent">	
					<mx:Grid paddingBottom="3" id="grid">
						<mx:GridRow paddingBottom="3">
							<mx:GridItem>
								<s:Label paddingLeft="5" styleName="myLabel" text="姓        名"/>
								<s:TextInput id="L403_33" width="130" editable="false" 
											 text="{vl402.l40203}"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="证件号码"/>
								<s:TextInput id="L403_34" width="130" editable="false" restrict="0-9-X"
											 text="{vl402.l40204}"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="电        话 "/>
								<s:TextInput id="L403_35" width="130" />
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="编        号"/>
								<s:TextInput id="L403_04" width="170" editable="false" 
											 text="{vl402.l40205}"/>
							</mx:GridItem>
						</mx:GridRow>
						
						
						<mx:GridRow>
							<mx:GridItem>
								<s:Label paddingLeft="5" styleName="myLabel" text="诊断日期"/>
								<mx:DateField id="L403_06" width="130"
											  dayNames="[&quot;周日&quot;,&quot;周一&quot;,&quot;周二&quot;,&quot;周三&quot;,&quot;周四&quot;,&quot;周五&quot;,&quot;周六&quot;]"
											  formatString="YYYY-MM-DD"
											  monthNames="[&quot;一月&quot;,&quot;二月&quot;,&quot;三月&quot;,&quot;四月&quot;,&quot;五月&quot;,&quot;六月&quot;,&quot;七月&quot;,&quot;八月&quot;,&quot;九月&quot;,&quot;十月&quot;,&quot;十一月&quot;,&quot;十二月&quot;]"
											  yearNavigationEnabled="true"/>
							</mx:GridItem>
							
							<mx:GridItem>
								<s:Label  styleName="myLabel" text="组织学分&#13;级"/>
								<s:DropDownList id="L403_17" width="130" />
							</mx:GridItem>
							
							<mx:GridItem colSpan="2">
								<s:Label styleName="myLabel" text="病理组织&#13;学诊断"/>
								<s:TextInput id="L403_16" width="363" />
							</mx:GridItem>
							
						</mx:GridRow>
						
						
						
						<mx:GridRow paddingBottom="3">
							<mx:GridItem colSpan="2">
								<s:Label  paddingLeft="5" styleName="myLabel"  text="病理分期"/>
								<s:BorderContainer height="22" width="342" >
									<s:Label x="3" y="5" text="T"/>
									<s:TextInput visible="true" x="12" width="95"
												 height="20" borderColor="#FFFFFF" id="L403_18"/>
									<s:Label x="110" y="5" width="10" text="N"/>
									<s:TextInput id="L403_19" visible="true" x="127" y="0"
												 width="95" height="20" borderColor="#FFFFFF"/>
									<s:Label x="223" y="5" text="M"/>
									<s:TextInput id="L403_20" visible="true" x="237" y="0"
												 width="95" height="20" borderColor="#FFFFFF"/>
								</s:BorderContainer>
							</mx:GridItem>
							<mx:GridItem colSpan="2">
								<s:Label styleName="myLabel" text="期        别"/>
								<s:TextInput id="L403_21" width="363"/>
							</mx:GridItem>
						</mx:GridRow>
						
						
						
						
						<mx:GridRow>
							<mx:GridItem>
								<s:Label paddingLeft="5" styleName="myLabel" text="治疗方式"/>
								<s:DropDownList id="L403_09" width="130" change="_L403_09_changeHandler(event)"/>
							</mx:GridItem>
							<mx:GridItem colSpan="3">
								<s:Label styleName="myLabel" text="手术内容" id="L403_36_label"/>
								<s:TextInput id="L403_36" width="566"/>
							</mx:GridItem>
						</mx:GridRow>
						
						
						
						<mx:GridRow >
							<mx:GridItem>
								<s:Label paddingLeft="5" styleName="myLabel" text="随访结果"/>
								<s:DropDownList id="L403_10" width="130" change="_L403_10_changeHandler(event)"/>				
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="死亡日期" id="L403_10_label"/>
								<mx:DateField id="L403_10_date" width="130"
											  dayNames="[&quot;周日&quot;,&quot;周一&quot;,&quot;周二&quot;,&quot;周三&quot;,&quot;周四&quot;,&quot;周五&quot;,&quot;周六&quot;]"
											  formatString="YYYY-MM-DD" 
											  monthNames="[&quot;一月&quot;,&quot;二月&quot;,&quot;三月&quot;,&quot;四月&quot;,&quot;五月&quot;,&quot;六月&quot;,&quot;七月&quot;,&quot;八月&quot;,&quot;九月&quot;,&quot;十月&quot;,&quot;十一月&quot;,&quot;十二月&quot;]"
											  yearNavigationEnabled="true"
											  mouseChildren="{L403_10.selectedIndex==2||L403_10.selectedIndex==3||L403_10.selectedIndex==5}"/>
							</mx:GridItem>
							<mx:GridItem colSpan="2">
								<s:Label styleName="myLabel" text="死亡原因" id="L403_10_01_label"/>
								<s:TextInput id="L403_10_text" width="363" editable="{L403_10.selectedIndex==4||L403_10.selectedIndex==3}"/>
							</mx:GridItem>
						</mx:GridRow>
						
						
						
						
						
						<mx:GridRow >
							<mx:GridItem>
								<s:Label paddingLeft="5" styleName="myLabel" text="随访方式"/>
								<s:DropDownList id="L403_15" width="130"/>				
							</mx:GridItem>
							<mx:GridItem colSpan="3">
								<s:Label styleName="myLabel" text="随访方式&#13;内容"/>
								<s:TextInput id="L403_38" width="566"/>
							</mx:GridItem>
						</mx:GridRow>
						
						
						<mx:GridRow paddingBottom="5">
							<mx:GridItem>
								<s:Label paddingLeft="5" styleName="myLabel" text="随访单位"/>
								<s:DropDownList id="L403_24" width="130"/>				
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="随访人员"/>
								<component:FindSelectedItemComboBox editable="true"  height="21" id="L403_23" width="130"/>
							</mx:GridItem>
							<mx:GridItem colSpan="2">
								<s:Label styleName="myLabel" text="随访日期"/>
								<mx:DateField id="L403_22" width="130"
											  dayNames="[&quot;周日&quot;,&quot;周一&quot;,&quot;周二&quot;,&quot;周三&quot;,&quot;周四&quot;,&quot;周五&quot;,&quot;周六&quot;]"
											  formatString="YYYY-MM-DD"
											  monthNames="[&quot;一月&quot;,&quot;二月&quot;,&quot;三月&quot;,&quot;四月&quot;,&quot;五月&quot;,&quot;六月&quot;,&quot;七月&quot;,&quot;八月&quot;,&quot;九月&quot;,&quot;十月&quot;,&quot;十一月&quot;,&quot;十二月&quot;]"
											  yearNavigationEnabled="true"/>
							</mx:GridItem>
						</mx:GridRow>
					</mx:Grid>
				</s:NavigatorContent>
			</mx:TabNavigator>
			
			
			
			<mx:TabNavigator width="100%" chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent width="100%" label="录入信息">			
					<mx:Grid paddingBottom="5">
						
						
						<mx:GridRow paddingLeft="5">
							<mx:GridItem>
								<s:Label paddingLeft="5" styleName="myLabel" text="录入单位"/>
								<s:DropDownList id="L403_25" width="130" mouseChildren="false" />				
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="录入人员"/>
								<component:FindSelectedItemComboBox editable="true" height="21" id="L403_27"  width="130"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label styleName="myLabel" text="录入时间"/>
								<mx:DateField id="L403_28" width="130"
											  dayNames="[&quot;周日&quot;,&quot;周一&quot;,&quot;周二&quot;,&quot;周三&quot;,&quot;周四&quot;,&quot;周五&quot;,&quot;周六&quot;]"
											  formatString="YYYY-MM-DD" text="{DateField.dateToString(new Date(),'YYYY-MM-DD')}"
											  monthNames="[&quot;一月&quot;,&quot;二月&quot;,&quot;三月&quot;,&quot;四月&quot;,&quot;五月&quot;,&quot;六月&quot;,&quot;七月&quot;,&quot;八月&quot;,&quot;九月&quot;,&quot;十月&quot;,&quot;十一月&quot;,&quot;十二月&quot;]"
											  yearNavigationEnabled="true"/>
							</mx:GridItem>
						</mx:GridRow>
					</mx:Grid>
				</s:NavigatorContent>
			</mx:TabNavigator>
			
			<s:HGroup width="900" height="30" contentBackgroundColor="#FF0000"
					  horizontalAlign="center" paddingBottom="20" paddingLeft="10" paddingTop="10"
					  verticalAlign="middle">
				<s:Button id="save" label="保存" buttonMode="true" chromeColor="#CCCCCC"
						  click="_validateL403()" enabled="{vl402}"/>
			</s:HGroup>
		</s:VGroup>
	</s:Scroller>
</s:Module>
