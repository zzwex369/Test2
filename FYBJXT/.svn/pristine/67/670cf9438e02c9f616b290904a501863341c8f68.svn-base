<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:component = "com.xyw.sys.custom.component.*"
			   xmlns:skin = "com.xyw.sys.custom.skin.*"
			   title="档案信息修改" horizontalCenter="0" verticalCenter="0" backgroundColor="white"
			   chromeColor="#5CACEE" close = "removeWindow()" cornerRadius="5" width="1230" 
			   creationComplete="moduleCreationComplete()"
			   skinClass="com.xyw.sys.custom.skin.CustomTitleWindow">
	<fx:Declarations>
		<s:RemoteObject id="f301Service" destination="f301Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="renewF301"  result="renewF301Handler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandle(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace component "com.xyw.sys.custom.component.*";
		@namespace skin "com.xyw.sys.custom.skin.*";
		.myLabel {
			fontSize:12px;
		}
		.myGrid {
			verticalAlign:middle;
		}
		.myTextInput
		{
			fontFamily:微软雅黑;
		}
		.must {
			color:red;
			fontSize:20px;
			fontWeight:bold;
			paddingTop:5px;
		}
		mx|ToolTip
		{
			fontSize:15;  
			color:#FF6699; 
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.fnbj.model.F301;
			import com.xyw.module.fnbj.model.VF301;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.custom.component.CustomIcon;
			import com.xyw.sys.custom.component.CustomRegex;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			private var comboBoxDataRequest:ComboBoxDataRequest;
			public var systemUser:SystemUser =null;
			private var f301:F301 =new F301();
			public var vf301:Object;
			
			private function moduleCreationComplete():void
			{
				this.systemUser =this.parentApplication.systemUser;
				//检查读卡权限
				if(this.systemUser.duka =="1"){
					this.duka1.enabled =true;
					this.duka2.enabled =true;
				}
				
				this.initializeComboBox();
				this.putRecord();
				this.F301_05.addEventListener(FlexEvent.CHANGING,setF301_07);
				this.F301_21.addEventListener(FlexEvent.CHANGING,setF301_23);
				this.F301_05.addEventListener(FlexEvent.ENTER,setF301_07);
				this.F301_21.addEventListener(FlexEvent.ENTER,setF301_23);
			}
			
			private function initializeComboBox():void{	
//				comboBoxDataRequest = new ComboBoxDataRequest();
//				comboBoxDataRequest.showPrompt = false;
//				comboBoxDataRequest.sql = "select t.d101_04, t.d101_02 from D101 t where t.d101_01 = '" + this.systemUser.institutionCode + "'"; 
//				comboBoxDataRequest.flag = "D101_04";
//				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select t.d101_01, t.d101_02 from D101 t ";
				comboBoxDataRequest.flag ="D101";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
//				
//				comboBoxDataRequest =new ComboBoxDataRequest();
//				comboBoxDataRequest.showPrompt =true;
//				comboBoxDataRequest.sql ="select * from D201";
//				comboBoxDataRequest.flag ="D201";
//				this.systemService.getComboBoxData(this.comboBoxDataRequest);
//				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from S301_01";
				comboBoxDataRequest.flag ="S301_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from S301_03";
				comboBoxDataRequest.flag ="S301_03";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =false;
				comboBoxDataRequest.sql ="select * from S301_04";
				comboBoxDataRequest.flag ="S301_04";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =false;
				comboBoxDataRequest.sql ="select * from S301_06";
				comboBoxDataRequest.flag ="S301_06";	
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from S601_01";
				comboBoxDataRequest.flag ="S601_01";	
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =false;
				comboBoxDataRequest.sql ="select * from S601_02";
				comboBoxDataRequest.flag ="S601_02";	
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
			
//				comboBoxDataRequest =new ComboBoxDataRequest();
//				comboBoxDataRequest.showPrompt =true;
//				comboBoxDataRequest.sql ="select * from S601_04";
//				comboBoxDataRequest.flag ="S601_04";	
//				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =false;
				comboBoxDataRequest.sql ="select * from S601_12";
				comboBoxDataRequest.flag ="S601_12";	
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from Z301_01";
				comboBoxDataRequest.flag ="Z301_01";	
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from Z301_02";
				comboBoxDataRequest.flag ="Z301_02";	
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
			}
			private function getDroupDownListSelectedIndex(arrayCollection:ArrayCollection,defaultValue:String):int{
				var len:int =arrayCollection.length;
				var i:uint =0;
				var index:int =0;
				while(i<len){
					var comboBoxDataP:Object =arrayCollection.getItemAt(i);
					if(comboBoxDataP.data ==defaultValue){
						index =arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			/*-----------------返回数据放到赋值到下拉菜单-----------------*/
			private function getComboBoxDataHandle(event:ResultEvent):void{
				var comboBoxDataResponse:Object =event.result;
				var flag:String =comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection =comboBoxDataResponse.comboBoxDataList;
				
				/* 				 if(flag == "D101_04"){
				var areaCode:String = comboBoxDataList.getItemAt(0).data;
				this.F301_67.setAreaCode(areaCode);
				}else */
				if(flag =="D101"){
					var index:int =this.getDroupDownListSelectedIndex(comboBoxDataList,this.systemUser.institutionCode);
					this.F301_32.dataProvider =comboBoxDataList;
					this.F301_32.selectedIndex =index;  //index;
					this.F301_56.dataProvider =comboBoxDataList;
					this.F301_56.selectedIndex =index;  //index;
					this.F301_32.enabled =false;
				}else if(flag =="S301_01"){ 
					this.F301_03.dataProvider =comboBoxDataList;
					this.F301_19.dataProvider =comboBoxDataList;
					if(vf301.f30103==""||vf301.f30103==null){
						this.F301_03.selectedIndex =2;
					}else{
						this.F301_03.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_03.dataProvider),vf301.f30103);
					}
					if(vf301.f30119==""||vf301.f30119==null){
						this.F301_19.selectedIndex =1;
					}else{
						this.F301_19.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_19.dataProvider),vf301.f30119);
					}
				}else if(flag =="S301_03"){
					var countryIndex:int =this.getCountrySelectedIndex(comboBoxDataList);
					this.F301_08.dataProvider =comboBoxDataList;
					this.F301_24.dataProvider =comboBoxDataList;
					if(vf301.f30108==""||vf301.f30108==null){
						this.F301_08.selectedIndex =countryIndex;
					}else{
						this.F301_08.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_08.dataProvider),vf301.f30108);
					}
					if(vf301.f30124==""||vf301.f30124==null){
						this.F301_24.selectedIndex =countryIndex;
					}else{
						this.F301_24.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_24.dataProvider),vf301.f30124)
					}
				}else if(flag =="S301_04"){
					this.F301_09.dataProvider =comboBoxDataList;
					this.F301_25.dataProvider =comboBoxDataList;
					this.F301_09.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_09.dataProvider),vf301.f30109);
					this.F301_25.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_25.dataProvider),vf301.f30125);
				}else if(flag =="S301_06"){
					this.F301_04.dataProvider =comboBoxDataList;
					this.F301_20.dataProvider =comboBoxDataList;
					this.F301_04.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_04.dataProvider),vf301.f30104);
					this.F301_20.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_20.dataProvider),vf301.f30120);
				}else if(flag =="S601_01"){
					this.F301_14.dataProvider =comboBoxDataList;
					this.F301_29.dataProvider =comboBoxDataList;
					if(vf301.f30114==""||vf301.f30114==null){
						this.F301_14.selectedIndex =3;
					}else{
						this.F301_14.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_14.dataProvider),vf301.f30114);
					}
					if(vf301.f30129==""||vf301.f30129==null){
						this.F301_29.selectedIndex =3;
					}else{
						this.F301_29.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_29.dataProvider),vf301.f30129);
					}
				}else if(flag =="S601_02"){
					this.F301_11.dataProvider =comboBoxDataList;
					this.F301_27.dataProvider =comboBoxDataList;
					this.F301_11.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_11.dataProvider),vf301.f30111);
					this.F301_27.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_27.dataProvider),vf301.f30127);
					/* }else if(flag =="S601_04"){
					this.F301_46.dataProvider =comboBoxDataList;
					this.F301_46.selectedIndex =0; */
				}else if(flag =="S601_12"){
					this.F301_15.dataProvider =comboBoxDataList;
					this.F301_30.dataProvider =comboBoxDataList;
					this.F301_15.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_15.dataProvider),vf301.f30115);
					this.F301_30.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_30.dataProvider),vf301.f30130);
				}else if(flag =="Z301_01"){
					this.F301_12.dataProvider =comboBoxDataList;
					if(vf301.f30112==""||vf301.f30112==null){
						this.F301_12.selectedIndex =2;
					}else{
						this.F301_12.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_12.dataProvider),vf301.f30112);
					}
				}else if(flag =="Z301_02"){
					this.F301_16.dataProvider =comboBoxDataList;
					this.F301_16.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_16.dataProvider),vf301.f30116);
				}
			}
			private function putRecord():void
			{
				if(vf301.f30118==""||vf301.f30118==null){
					po_y.selected=false;
					po_n.selected=true;
				}
				this.f301.f30101 =vf301.f30101;
				this.f301.f30148 =vf301.f30148;
				this.F301_02.text =vf301.f30102;
				this.F301_05.text =vf301.f30105;
				this.F301_06.text =vf301.f30106Str;
				if(vf301.f30107!="0"){
					this.F301_07.text =vf301.f30107;
				}
				this.F301_10.text =vf301.f30110;
				this.F301_13.text =vf301.f30113;
				this.f301.f30117 =vf301.f30117;
				//this.F301_17.text =this.vf301.f30117;
				
				this.F301_18.text =vf301.f30118;
				this.F301_21.text =vf301.f30121;
				this.F301_22.text =vf301.f30122Str;
				if(vf301.f30123!="0"){
					this.F301_23.text =vf301.f30123;
				}
				this.F301_26.text =vf301.f30126;
				this.F301_28.text =vf301.f30128;
				this.F301_31.text =vf301.f30131Str;
				this.F301_33.text =vf301.f30133;
				this.f301.f30134 =vf301.f30134;
				if(vf301.f30135!=""&&vf301.f30135!=null){
					this.F301_35.setAreaCode(vf301.f30135);
				}
				if(vf301.f30136!=""&&vf301.f30136!=null){
					this.F301_36.setAreaCode(vf301.f30136);
				}
				if(vf301.f30138!=""&&vf301.f30138!=null){
					this.F301_38.setAreaCode(vf301.f30138);
				}
				if(vf301.f30139!=""&&vf301.f30139!=null){
					this.F301_39.setAreaCode(vf301.f30139);
				}
				/* this.F301_34.setAreaCode(this.vf301.f30134);
				var F30135:String =vf301.f30135;
				if(F30135 !=null){
				if(F30135.length >=12){
				this.F301_35.setAreaCode(vf301.f30135);
				}
				}
				this.F301_36.setAreaCode(this.vf301.f30136);
				this.F301_37.text =this.vf301.f30137;
				var F30138:String =vf301.f30138;
				if(F30138 !=null){
				if(F30138.length >=12){
				this.F301_38.setAreaCode(vf301.f30138);
				}
				}
				this.F301_39.setAreaCode(this.vf301.f30139);
				this.F301_40.text =this.vf301.f30140; */
				this.F301_41.text =vf301.f30141;
				this.F301_42.text =vf301.f30142;
				this.F301_43.text =vf301.f30143;
				this.F301_44.text =vf301.f30144;
				this.f301.f30145 =vf301.f30145;
				if(vf301.f30146 == "1"){
					this.F301_46_0.selected=true;
				}else{
					this.F301_46_1.selected=true;
				}
				this.F301_49.text =vf301.f30149Str;
				this.F301_57.text =vf301.f30157;
				//this.F301_46.selectedIndex =this.getDroupDownListSelectedIndex(ArrayCollection(this.F301_46.dataProvider),vf301.f30146);
				//changeMar();
				/* if(vf301.f30112=='1'){
				this.Spouse1.enabled =false;
				}else if(vf301.f30112=='2'){
				this.Spouse1.enabled =true;
				} */
			}
			/*-----------------默认国籍 中国---------------------*/
			private function getCountrySelectedIndex(arrayCollection:ArrayCollection):int{
				var len:int =arrayCollection.length;
				var i:uint =0;
				var index:int =0;
				while(i<len){
					var comboBoxDataP:Object =arrayCollection.getItemAt(i);
					if(comboBoxDataP.data =="CHN"){
						index =arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
				
			}
			private function validateAreaCode(areaCode:String):Boolean
			{
				if(areaCode == "" || areaCode.length == 0){
					return false;
				} else if(areaCode.length < 9){
					return false;
				} else if(areaCode.length == 9){
					return true;
				} else {
					return true;
				}
			}
			private function validateAreaCode12(areaCode:String):Boolean
			{
				if(areaCode == "" || areaCode.length == 0){
					return false;
				} else if(areaCode.length < 9){
					return false;
				} else if(areaCode.length == 9){
					if(areaCode.substr(0,4) == "4190"){
						return false;
					} else {  
						return true;
					}  
				} else {
					return true;
				}
			}
			public function changeMar():void{
				var mar:String = this.F301_12.selectedItem.data;
				if(mar=='1'){
					this.Spouse1.enabled =false;
				}else if(mar=='2'){
					this.Spouse1.enabled =true;
				}
			}
			public function validate1():void{
				if(StringUtil.trim(this.F301_02.text) ==""){
					Alert.show("请输入孕产妇的姓名!","系统提示");
					return;
				}
				if(this.F301_04.selectedItem.data ==0){
					Alert.show("请选择孕产妇的证件类别!","系统提示");
					return;
				}
				if(StringUtil.trim(this.F301_05.text) ==""){
					Alert.show("请输入孕产妇的证件号码!","系统提示");
					return;
				}
				if(this.F301_04.selectedItem.data ==1&&this.F301_08.selectedItem.data=="CHN"&&!CustomRegex.testRegExp(CustomRegex.COMMON_CARD,StringUtil.trim(F301_05.text)))
				{
					Alert.show("孕产妇的证件号码有误!","系统提示");
					return;
				}
				
				if(this.F301_06.text ==""){
					Alert.show("请输入孕产妇的出生日期!","系统提示");
					return;
				}
				if(!CustomRegex.testRegExp(CustomRegex.DATE,StringUtil.trim(F301_06.text)))
				{
					Alert.show("孕产妇的出生日期格式不正确!","系统提示");
					return;
				}
				if(StringUtil.trim(this.F301_07.text) ==""){
					Alert.show("请输入孕产妇的年龄!","系统提示");
					return;
				}
				if(!valiold(StringUtil.trim(this.F301_07.text))){
					Alert.show("孕产妇的年龄不合法!","系统提示");
					return;
				}
				
				if(this.F301_08.selectedItem.data ==0){
					Alert.show("请选择孕产妇的国籍！","系统提示");
					return;
				}
				
				if(this.F301_09.selectedItem.data ==0){
					Alert.show("请选择孕产妇的民族！","系统提示");
					return;
				}
				if(this.F301_03.selectedItem.data ==0){
					Alert.show("请选择孕产妇的性别！","系统提示");
					return;
				}
				if(StringUtil.trim(this.F301_10.text) == ""){
					Alert.show("请输入孕产妇的身份证地址!","系统提示");
					return;
				}
				/* if(this.F301_16.selectedItem.data ==0){
				Alert.show("请选择血型","系统提示");
				return;
				} */ 
				if(this.F301_14.selectedItem.data ==0){
					Alert.show("请选择文化程度!","系统提示");
					return;
				}
				if(this.F301_11.selectedItem.data ==0){
					Alert.show("请选择职业!","系统提示");
					return;
				}
				if(this.F301_12.selectedItem.data ==0){
					Alert.show("请选择婚姻状况!","系统提示");
					return;
				}
				//changeMar();
				if(StringUtil.trim(this.F301_13.text)==""){
					Alert.show("请输入孕产妇的联系电话！","系统提示");
					return;
				}
				if(!CustomRegex.testRegExp(CustomRegex.CELLPHONE,StringUtil.trim(F301_13.text)))
				{
					Alert.show("孕妇联系电话不正确!","系统提示");
					return;
				}
				
				if(F301_35.getAreaCode().substr(0,4)!="4113")
				{
					Alert.show("孕产妇现地址请选择南阳市地址","系统提示");
					return;
				}
				if(!CompMethod.validateAreaCode(F301_35.getAreaCode(),'4113'))
				{
					Alert.show("孕产妇现地址选择到最下级","系统提示");
					return;
				}
				if(F301_36.getAreaCode().substr(0,4)=="4113"){
					if(!CompMethod.validateAreaCode(F301_36.getAreaCode(),"4113"))
					{
						Alert.show("孕产妇户口地址选择到最下级","系统提示");
						return;
					}
				}else{
					if(!CompMethod.validateAreaCode(F301_36.getAreaCode(),"4113",true))
					{
						Alert.show("孕产妇户口地址选择到乡镇","系统提示");
						return;
					}
				}
				//				if(!validateAreaCode12(this.F301_35.getAreaCode())){
				//					Alert.show("孕产妇现住地址要选到最下级！","系统提示");
				//					return;
				//				}
				//else{
				//if(this.F301_35.getAreaCode().substr(0,6) != "419001"){
				//Alert.show("孕产妇现住地址不能选外地！","系统提示");
				//return;
				//}
				//}
				
				if(po_y.selected){ 
					//if(this.F301_12.selectedItem.data =='2'){
					if(validate2() ==1){
						return;
					}
				}
				/* if(this.F301_17.text ==""){
				Alert.show("请输入保健卡号！","系统提示");
				return;
				} */
				if(this.F301_32.selectedItem.data ==0){
					Alert.show("请选择建卡单位!","系统提示");
					return;
				}
				if(StringUtil.trim(this.F301_33.text) ==""){
					Alert.show("请输入建卡人！","系统提示");
					return;
				}
				if(this.F301_31.text ==""){
					Alert.show("请输入建卡日期（时）！","系统提示");
					return;
				}
				if(!CustomRegex.testRegExp(CustomRegex.DATE,StringUtil.trim(F301_31.text)))
				{
					Alert.show("建卡日期格式不正确!","系统提示");
					return;
				}
				if(StringUtil.trim(this.F301_57.text) ==""){
					Alert.show("请输入录入人！","系统提示");
					return;
				}
				Alert.yesLabel = "确定";
				Alert.noLabel = "取消";
				Alert.show('确认保存？','保存信息',1|2,this,savef301_hanlder);
			}
			private function savef301_hanlder(event:CloseEvent):void{
				if(event.detail == Alert.YES){
					saveRecord();
				}
			}
			public function validate2():int{				
				if(StringUtil.trim(this.F301_18.text) ==""){			
					Alert.show("请输入配偶的姓名","系统提示");			
					return 1;		
				}		
				if(this.F301_20.selectedItem.data ==0){		
					Alert.show("请选择配偶证件类别","系统提示");		
					return 1;	
				}
				if(StringUtil.trim(this.F301_21.text) ==""){	
					Alert.show("请输入配偶证件号码","系统提示");		
					return 1;	
				}	
				if(this.F301_20.selectedItem.data ==1&&this.F301_24.selectedItem.data=="CHN"&&!CustomRegex.testRegExp(CustomRegex.COMMON_CARD,StringUtil.trim(F301_21.text)))
				{
					Alert.show("配偶的证件号码有误!","系统提示");
					return 1;
				}
				if(this.F301_22.text ==""){	
					Alert.show("请输入配偶出生日期！","系统提示");		
					return 1;		
				} 
				if(!CustomRegex.testRegExp(CustomRegex.DATE,StringUtil.trim(F301_22.text)))
				{
					Alert.show("配偶出生日期格式不正确!","系统提示");
					return 1;
				}
				if(StringUtil.trim(this.F301_23.text)==""){
					Alert.show("请输入配偶的年龄!","系统提示");
					return 1;
				}
				if(!valiold(StringUtil.trim(this.F301_23.text))){
					Alert.show("配偶的年龄不合法!","系统提示");
					return 1;
				}
				if(this.F301_24.selectedItem.data ==0){	
					Alert.show("请选择配偶国籍！","系统提示");	
					return 1;	
				}
				
				if(this.F301_25.selectedItem.data ==0){
					Alert.show("请选择配偶民族！","系统提示");
					return 1;
				}
				if(this.F301_19.selectedItem.data ==0){
					Alert.show("请选择配偶性别！","系统提示");
					return 1;
				}
				if(StringUtil.trim(this.F301_26.text) == ""){
					Alert.show("请输入配偶身份证地址!","系统提示");
					return 1;
				}
				if(StringUtil.trim(this.F301_28.text) ==""){
					Alert.show("请输入配偶联系电话！","系统提示");
					return 1;
				}
				if(!CustomRegex.testRegExp(CustomRegex.CELLPHONE,StringUtil.trim(F301_28.text)))
				{
					Alert.show("配偶联系电话不正确!","系统提示");
					return 1;
				}
				
				if(F301_38.getAreaCode().substr(0,4)!="4113")
				{
					Alert.show("配偶现地址请选择南阳市地址","系统提示");
					return 1;
				}
				if(!CompMethod.validateAreaCode(F301_38.getAreaCode(),'4113'))
				{
					Alert.show("配偶现地址选择到最下级","系统提示");
					return 1;
				}
				//				if(!validateAreaCode12(this.F301_38.getAreaCode())){
				//					Alert.show("配偶现住地址要选到最下级！","系统提示");
				//					return 1;
				//				}
				if(F301_39.getAreaCode().substr(0,4)=="4113"){
					if(!CompMethod.validateAreaCode(F301_39.getAreaCode(),"4113"))
					{
						Alert.show("配偶户口地址选择到最下级","系统提示");
						return 1;
					}
				}else{
					if(!CompMethod.validateAreaCode(F301_39.getAreaCode(),"4113",true))
					{
						Alert.show("配偶户口地址选择到乡镇","系统提示");
						return 1;
					}
				}
				
				return 0;
			}
			public function saveRecord():void{
				if(this.F301_32.selectedItem.data !=this.systemUser.institutionCode){
					Alert.show("档案信息非当前机构录入，不能修改！","系统提示");
				}else{
					if(po_y.selected){  
						//if(this.F301_12.selectedItem.data==2){
						this.f301.f30118 =StringUtil.trim(this.F301_18.text);
						this.f301.f30119 =this.F301_19.selectedItem.data;
						this.f301.f30120 =this.F301_20.selectedItem.data;
						this.f301.f30121 =StringUtil.trim(this.F301_21.text);
						this.f301.f30122 =DateField.stringToDate(StringUtil.trim(this.F301_22.text),"YYYY-MM-DD");
						this.f301.f30123 =StringUtil.trim(this.F301_23.text);
						this.f301.f30124 =this.F301_24.selectedItem.data;
						this.f301.f30125 =this.F301_25.selectedItem.data;
						this.f301.f30126 =StringUtil.trim(this.F301_26.text);
						this.f301.f30127 =this.F301_27.selectedItem.data;
						this.f301.f30128 =StringUtil.trim(this.F301_28.text);
						this.f301.f30129 =this.F301_29.selectedItem.data;
						this.f301.f30130 =this.F301_30.selectedItem.data;
						this.f301.f30138 =this.F301_38.getAreaCode();
						this.f301.f30139 =this.F301_39.getAreaCode();
						this.f301.f30140 =vf301.f30140;
						/* this.f301.f30138 =this.F301_38.getAreaCode();
						this.f301.f30139 =this.F301_39.getAreaCode();
						this.f301.f30140 =this.F301_40.text; */
						this.f301.f30143 =StringUtil.trim(this.F301_43.text);
						this.f301.f30144 =StringUtil.trim(this.F301_44.text);
					}else{
						this.f301.f30118 ="";
						this.f301.f30119 ="";
						this.f301.f30120 ="";
						this.f301.f30121 ="";
						this.f301.f30122 =null;
						this.f301.f30123 ="";
						this.f301.f30124 ="";
						this.f301.f30125 ="";
						this.f301.f30126 ="";
						this.f301.f30127 ="";
						this.f301.f30128 ="";
						this.f301.f30129 ="";
						this.f301.f30130 ="";
						this.f301.f30138 ="";
						this.f301.f30139 ="";
						this.f301.f30140 ="";
						this.f301.f30143 ="";
						this.f301.f30144 ="";
					}
					this.f301.f30102 =StringUtil.trim(this.F301_02.text);
					this.f301.f30103 =this.F301_03.selectedItem.data;
					this.f301.f30104 =this.F301_04.selectedItem.data;
					this.f301.f30105 =StringUtil.trim(this.F301_05.text);
					this.f301.f30106 =DateField.stringToDate(StringUtil.trim(this.F301_06.text),"YYYY-MM-DD");
					this.f301.f30107 =StringUtil.trim(this.F301_07.text);
					this.f301.f30108 =this.F301_08.selectedItem.data;
					this.f301.f30109 =this.F301_09.selectedItem.data;
					this.f301.f30110 =StringUtil.trim(this.F301_10.text);
					this.f301.f30111 =this.F301_11.selectedItem.data;
					this.f301.f30112 =this.F301_12.selectedItem.data;
					this.f301.f30113 =StringUtil.trim(this.F301_13.text);
					this.f301.f30114 =this.F301_14.selectedItem.data;
					this.f301.f30115 =this.F301_15.selectedItem.data;
					this.f301.f30116 =this.F301_16.selectedItem.data;
					/* this.f301.f30117 =this.F301_17.text; */
					this.f301.f30131 =DateField.stringToDate(StringUtil.trim(this.F301_31.text),"YYYY-MM-DD");
					this.f301.f30132 =this.F301_32.selectedItem.data;
					this.f301.f30133 =StringUtil.trim(this.F301_33.text);
					this.f301.f30134 =vf301.f30134;
					this.f301.f30135 =this.F301_35.getAreaCode();
					this.f301.f30136 =this.F301_36.getAreaCode();
					this.f301.f30137 =vf301.f30137;
					/* this.f301.f30134 =this.F301_34.getAreaCode();
					this.f301.f30135 =this.F301_35.getAreaCode();
					this.f301.f30136 =this.F301_36.getAreaCode();
					this.f301.f30137 =this.F301_37.text; */
					this.f301.f30141 =StringUtil.trim(this.F301_41.text);
					this.f301.f30142 =StringUtil.trim(this.F301_42.text);
					//this.f301.f30146 =this.F301_46.selectedItem.data;
					if(this.F301_46_0.selected){
						this.f301.f30146 = "1";
					}else{
						this.f301.f30146 = "2";
					}
					this.f301.f30149 =this.vf301.f30149;
					this.f301.f30156 =this.F301_56.selectedItem.data;
					this.f301.f30157 =StringUtil.trim(this.F301_57.text);
					this.f301.f30161 =systemUser.userCode;
					this.f301Service.renewF301(f301);
				}
			}
			private function renewF301Handler(event:ResultEvent):void
			{
				var f301Response:Object =event.result;
				if(!f301Response.state){
					Alert.show(f301Response.errorMessage,"系统提示");
					return;
				}
				Alert.show("修改成功！ ","系统提示");
				dispatchEvent(new Event("ok_click"));
				this.removeWindow();
			}
			public function valiold(str:String):Boolean{
				var num:Number = new Number(str);
				if(num <10 || num>70){
					return false;
				}
				return true;
			}
			private function removeWindow():void
			{
				PopUpManager.removePopUp(this);
			}
			//读卡(母亲)
			protected function readCard_mother(event:MouseEvent):void
			{
				try
				{
					var array:Array = CompMethod.read_card("女");//性别
					if(!array)
						return ;
					var sex:String = array[1];//性别
					this.F301_02.text = array[0];//姓名
					this.F301_05.text = array[5];//身份证号
					this.F301_06.text = array[3];//出生日期
					this.F301_10.text = array[4];//户口地址
					setF301_07(null);
					var nation:String = array[2] + "族";//民族
					var nationDataProvider:ArrayCollection = ArrayCollection(this.F301_09.dataProvider);
					var nationIndex:int = getNationDropDownListSelectedIndex(nationDataProvider,nation);
					this.F301_09.selectedIndex = nationIndex;
							
					var sexDataProvider:ArrayCollection = ArrayCollection(this.F301_03.dataProvider);
					var sexIndex:int = getNationDropDownListSelectedIndex(sexDataProvider,sex);
					this.F301_03.selectedItem = sexIndex;
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			//读卡(父亲)
			protected function readCard_father(event:MouseEvent):void
			{
				try
				{
					var array:Array = CompMethod.read_card("男");//性别
					if(!array)
						return ;
					var sex:String = array[1];//性别
					this.F301_18.text = array[0];//姓名
					this.F301_21.text = array[5];//身份证号
					this.F301_22.text = array[3];//出生日期
					this.F301_26.text = array[4];//现住址
					var nation:String = array[2] + "族";//民族
					var nationDataProvider:ArrayCollection = ArrayCollection(this.F301_25.dataProvider);
					var nationIndex:int = getNationDropDownListSelectedIndex(nationDataProvider,nation);
					this.F301_25.selectedIndex = nationIndex;
					setF301_23(null); 
							
					var sexDataProvider:ArrayCollection = ArrayCollection(this.F301_19.dataProvider);
					var sexIndex:int = getNationDropDownListSelectedIndex(sexDataProvider,sex);
					this.F301_19.selectedIndex = sexIndex;
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			//读卡获取民族信息
			private function getNationDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.label == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			public function setF301_07(event:Event):void{
				if(this.F301_04.selectedItem.data == 1){
					var cardId:String  = this.F301_05.text;
					if(cardId.length >= 16){
						var year:Number = Number(this.F301_05.text.substr(6,4));
						var month:Number = Number(this.F301_05.text.substr(10,2));
						var day:Number = Number(this.F301_05.text.substr(12,2));
						var date:Date = new Date();
						var nowDay:Number = date.date;
						var nowMonth:Number = date.month + 1;
						var nowYear:Number = date.fullYear;
						var age:Number;
						if(nowMonth < month){
							age = nowYear - year - 1;
						}else if(nowMonth == month){
							if(day > nowDay){
								age = nowYear - year -1;
							}else{
								age = nowYear - year;
							}
						}else if(nowMonth > month){
							age = nowYear - year;
						}
						this.F301_07.text = age + "";
						cardId=cardId.substring(6,14);
						this.F301_06.text = cardId.substring(0,4) + "-" + cardId.substring(4,6) + "-" + cardId.substring(6,8);
					}
				}
			}
			public function setF301_23(event:Event):void{
				if(this.F301_20.selectedItem.data == 1){
					var cardId:String  = this.F301_21.text;
					if(cardId.length >= 16){
						var year:Number = Number(this.F301_21.text.substr(6,4));
						var month:Number = Number(this.F301_21.text.substr(10,2));
						var day:Number = Number(this.F301_21.text.substr(12,2));
						var date:Date = new Date();
						var nowDay:Number = date.date;
						var nowMonth:Number = date.month + 1;
						var nowYear:Number = date.fullYear;
						var age:Number;
						if(nowMonth < month){
							age = nowYear - year - 1;
						}else if(nowMonth == month){
							if(day > nowDay){
								age = nowYear - year -1;
							}else{
								age = nowYear - year;
							}
						}else if(nowMonth > month){
							age = nowYear - year;
						}
						this.F301_23.text = age + "";
						cardId=cardId.substring(6,14);
						this.F301_22.text = cardId.substring(0,4) + "-" + cardId.substring(4,6) + "-" + cardId.substring(6,8);
					}
				}
			}
			/**
			 *设置户口地址 
			 */
			private function f301_36_clickHandler(event:MouseEvent):void
			{
				
				F301_36.setAreaCode(F301_35.getAreaCode());
				
			}
			/**
			 *设置户口地址 
			 */
			private function f301_39_clickHandler(event:MouseEvent):void
			{
				
				F301_39.setAreaCode(F301_38.getAreaCode());
				
			}
			/* private function copy1():void
			{
			var areaCode:String = this.F301_35.getAreaCode();
			this.F301_36.setAreaCode(areaCode);
			}
			private function copy2():void
			{
			var areaCode:String = this.F301_38.getAreaCode();
			this.F301_39.setAreaCode(areaCode);
			} */
		]]>
	</fx:Script>
	<s:Scroller width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup paddingBottom="20" paddingLeft="10" paddingRight="10" paddingTop="10" width="1200">
			<mx:TabNavigator width="100%" chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent width="1165" label="孕产妇信息">
					<mx:Grid paddingBottom="10" paddingLeft="8">
						<mx:GridRow>
							<mx:GridItem>
								<s:Label paddingBottom="0" paddingLeft="1" paddingTop="5" styleName="myLabel"
										 text="姓        名"/>
								<s:TextInput id="F301_02" width="130"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="证件类别" styleName="myLabel"/>
								<s:DropDownList id="F301_04" width="130"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="证件号码" styleName="myLabel"/>
								<s:TextInput id="F301_05" width="166"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="出生日期" styleName="myLabel"/>
								<component:CustomRangeDateField id="F301_06" width="150"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="年       龄" styleName="myLabel"/>
								<s:TextInput id="F301_07" width="150" restrict="0-9" maxChars="2"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="国        籍 " styleName="myLabel"/>
								<s:DropDownList id="F301_08" width="130"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="民        族" styleName="myLabel"/>
								<s:DropDownList id="F301_09" width="130"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="性        别" styleName="myLabel"/>
								<s:DropDownList id="F301_03" width="165"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem colSpan="2">	
								<s:Label paddingLeft="1" paddingTop="5" text="证件地址" styleName="myLabel"/>
								<s:TextInput id="F301_10" width="285"/>
								<s:Label text="*" styleName="must"/>
								<s:Button id="duka1" label="读卡" click="readCard_mother(event)" enabled="false" icon="{CustomIcon.READCARD}"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="血        型" styleName="myLabel"/>
								<s:DropDownList id="F301_16" width="130"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="户        籍" styleName="myLabel"/>
								<s:DropDownList id="F301_15" width="130"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="文化程度" styleName="myLabel"/>
								<s:DropDownList id="F301_14" width="164"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="职        业" styleName="myLabel"/>
								<s:DropDownList id="F301_11" width="148"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="婚姻状况" styleName="myLabel"/>
								<s:DropDownList id="F301_12" width="149" />   <!--change="changeMar()"-->
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
						</mx:GridRow>	
						<mx:GridRow>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="联系电话" styleName="myLabel"/>
								<s:TextInput id="F301_13" width="130" maxChars="12" paddingLeft="2"
											 restrict="0-9"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem colSpan="2">
								<s:Label paddingLeft="1" paddingTop="5" text="工作单位" styleName="myLabel"/>
								<s:TextInput id="F301_41" width="375"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="单位电话" styleName="myLabel"/>
								<s:TextInput id="F301_42" width="149" maxChars="12" restrict="0-9"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem colSpan="6">
								<s:Label paddingLeft="1" paddingTop="5" text="现住地址" styleName="myLabel"/>
								<component:AreaComboBoxVillageAuto id="F301_35" width="922" buttonMode="true" areaCode="{this.parentApplication.systemUser.areaCode}" enabled="false"/>
								<s:Label text="*" styleName="must"/>
								<!--<s:Button label="同下" click="copy1()"/>-->
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem colSpan="6">
								<s:Label paddingLeft="1" paddingTop="5" text="户口地址" styleName="myLabel"/>
								<component:AreaComboBoxVillageAuto id="F301_36" width="922" buttonMode="true" areaCode="{this.parentApplication.systemUser.areaCode}"/>
								<s:Label text="*" styleName="must"/>
								<s:Button label="同现住址" click="f301_36_clickHandler(event)" buttonMode="true"/>
							</mx:GridItem>
						</mx:GridRow>
						<!--<mx:GridRow>
						<mx:GridItem colSpan="6">
						<s:Label text="现住地址"/>
						<component:AreaComboBoxCommon2 id="F301_35" width="1050"/>
						<s:Label text="*" styleName="must"/>
						<s:Button label="同下" click="copy1()"/>
						</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
						<mx:GridItem colSpan="6">
						<s:Label text="户口地址"/>
						<component:AreaComboBoxCommon id="F301_36" width="865"/>
						<s:Label text="村"/>
						<s:TextInput id="F301_37" width="150"/>
						<s:Label text="*" styleName="must"/>
						</mx:GridItem>
						</mx:GridRow>-->
					</mx:Grid>
				</s:NavigatorContent>
			</mx:TabNavigator>
			
			<mx:TabNavigator width="100%" chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent width="1165" label="配偶信息" id="Spouse1" >
					<s:VGroup>
						<s:HGroup paddingLeft="8" verticalAlign="middle">
							<s:Label text="是否填写配偶信息"/>
							<s:RadioButton id="po_y" groupName="po" label="是" selected="true"/>
							<s:RadioButton id="po_n" groupName="po" label="否" />
						</s:HGroup>
					<mx:Grid width="1144" paddingBottom="10" paddingLeft="8" enabled="{po_y.selected}">
						<mx:GridRow>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="姓        名" styleName="myLabel"/>
								<s:TextInput id="F301_18" width="130"/>
								<!--<s:Label text="*" styleName="must"/>-->
							</mx:GridItem>
							<mx:GridItem width="198">
								<s:Label paddingLeft="1" paddingTop="5" text="证件类型" styleName="myLabel"/>
								<s:DropDownList id="F301_20" width="135"/>
								<!--<s:Label text="*" styleName="must"/>-->
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="证件号码" styleName="myLabel"/>
								<s:TextInput id="F301_21" width="169"/>
								<!--<s:Label text="*" styleName="must"/>-->
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="出生日期" styleName="myLabel"/>
								<component:CustomRangeDateField id="F301_22" width="162"/>
								<!--<s:Label text="*" styleName="must"/>-->
							</mx:GridItem>
							<mx:GridItem width="226">
								<s:Label paddingLeft="1" paddingTop="5" text="年       龄" styleName="myLabel"/>
								<s:TextInput id="F301_23" width="164" restrict="0-9"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="国        籍" styleName="myLabel"/>
								<s:DropDownList id="F301_24" width="130"/>
								<!--<s:Label text="*" styleName="must"/>-->
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="民        族" styleName="myLabel"/>
								<s:DropDownList id="F301_25" width="135"/>
								<!--<s:Label text="*" styleName="must"/>-->
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="性        别" styleName="myLabel"/>
								<s:DropDownList id="F301_19" width="168"/>
								<!--<s:Label text="*" styleName="must"/>-->
							</mx:GridItem>
							<mx:GridItem width="465" colSpan="2">	
								<s:Label paddingLeft="1" paddingTop="5" text="证件地址" styleName="myLabel"/>
								<s:TextInput id="F301_26" width="319"/>
								<!--<s:Label text="*" styleName="must"/>-->
								<s:Button id="duka2" label="读卡" click="readCard_father(event)" enabled="false" icon="{CustomIcon.READCARD}"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="文化程度" styleName="myLabel"/>
								<s:DropDownList id="F301_29" width="130"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="职        业" styleName="myLabel"/>
								<s:DropDownList id="F301_27" width="134"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="户        籍" styleName="myLabel"/>
								<s:DropDownList id="F301_30" width="168"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="5" text="联系电话" styleName="myLabel"/>
								<s:TextInput id="F301_28" width="161" maxChars="12" restrict="0-9"/>
								<!--<s:Label text="*" styleName="must"/>-->
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem width="399" colSpan="2">
								<s:Label paddingLeft="1" paddingTop="4" text="工作单位" styleName="myLabel"/>
								<s:TextInput id="F301_43" width="331"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" text="单位电话" styleName="myLabel"/>
								<s:TextInput id="F301_44" width="166" maxChars="12" restrict="0-9"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem colSpan="6">
								<s:Label paddingLeft="1" paddingTop="4" text="现住地址" styleName="myLabel"/>
								<component:AreaComboBoxVillageAuto id="F301_38" width="941" buttonMode="true" areaCode="{this.parentApplication.systemUser.areaCode}"/>
								<!--<s:Label text="*" styleName="must"/>-->
								<!--<s:Button label="同下" click="copy2()"/>-->
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem colSpan="6">
								<s:Label paddingLeft="1" paddingTop="4" text="户口地址" styleName="myLabel"/>
								<component:AreaComboBoxVillageAuto id="F301_39" width="941" buttonMode="true" areaCode="{this.parentApplication.systemUser.areaCode}"/>
								<!--<s:Label text="*" styleName="must"/>-->
								<s:Button label="同现住址" click="f301_39_clickHandler(event)" buttonMode="true"/>
							</mx:GridItem>
						</mx:GridRow>
						<!--<mx:GridRow>
						<mx:GridItem colSpan="6">
						<s:Label text="现住地址"/>
						<component:AreaComboBoxCommon2 id="F301_38" width="1050"/>
						<s:Label text="*" styleName="must"/>
						<s:Button label="同下" click="copy2()"/>
						</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
						<mx:GridItem colSpan="6">
						<s:Label text="户口地址"/>
						<component:AreaComboBoxCommon id="F301_39" width="865"/>
						<s:Label text="村"/>
						<s:TextInput id="F301_40" width="150"/>
						<s:Label text="*" styleName="must"/>
						</mx:GridItem>
						</mx:GridRow>-->
					</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			
			<mx:TabNavigator width="100%" chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent width="1165" label="建卡信息">
					<mx:Grid paddingBottom="10" paddingLeft="8">
						<mx:GridRow>
							<!--<mx:GridItem>
							<s:Label text="保健卡号"/>
							<s:TextInput id="F301_17" width="130"/>
							<s:Label text="*" styleName="must"/>
							</mx:GridItem>-->
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" text="建卡单位" styleName="myLabel"/>
								<s:DropDownList id="F301_32" width="169" enabled="false"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" text="建卡人" styleName="myLabel"/>
								<s:TextInput id="F301_33" width="130"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" text="建卡日期" styleName="myLabel"/>
								<component:CustomRangeDateField id="F301_31" width="130"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<!--<mx:GridItem>
							<s:Label text="母子健康手册发放" paddingLeft="15"/>
							<s:DropDownList id="F301_46" width="130"/>
							<s:Label text="*" styleName="must"/>
							</mx:GridItem>-->
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" text="录入单位" styleName="myLabel"/>
								<s:DropDownList id="F301_56" width="169" labelField="label" enabled="false"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" text="录入人" styleName="myLabel"/>
								<s:TextInput id="F301_57" width="130"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" text="录入日期" styleName="myLabel"/>
								<component:CustomRangeDateField id="F301_49" width="130" enabled="false"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" text="母子健康手册发放" styleName="myLabel"/>
								<s:RadioButton id="F301_46_1"  groupName="operation1"/><s:Label paddingTop="5"
																								text="无" styleName="myLabel"/>
								<s:RadioButton id="F301_46_0"  groupName="operation1"
											   selected="true"/><s:Label paddingTop="5" text="有" styleName="myLabel"/>
							</mx:GridItem>
						</mx:GridRow>
						<!--<mx:GridRow>
						<mx:GridItem colSpan="4">
						<s:Label text="所属地"/>
						<component:AreaComboBoxCommon id="F301_34" width="880"/>
						<s:Label text="*" styleName="must"/>
						</mx:GridItem>
						</mx:GridRow>-->
					</mx:Grid>
				</s:NavigatorContent>
			</mx:TabNavigator>
			
			<s:HGroup paddingBottom="10" verticalAlign="middle" width="80%" horizontalAlign="right">
				<s:Button id="saveF301" label="保存" click="validate1()"/>
			</s:HGroup>			
		</s:VGroup>
	</s:Scroller>
</s:TitleWindow>
