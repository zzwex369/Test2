<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:component="com.xyw.sys.custom.component.*" creationComplete="moduleCreationCompleteHandler(event)">
	<fx:Declarations>
		<s:RemoteObject id="e701Service" destination="e701Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryE701"  result="queryE701Handler(event)"/>
			<s:method name="deleteE701"  result="deleteE701Handler(event)"/>
		</s:RemoteObject>
		
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		mx|GridItem
		{
			horizontalAlign:left;
			verticalAlign:middle;
		}
		s|TextInput
		{
			fontFamily:微软雅黑;
		}
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		s|DataGrid
		{
			borderAlpha:"0.3";
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDataGridSkin");
			alternatingRowColors:"[#FFFFFF,#EEEEEE]";
		}
		
		s|TextInput:normalWithPrompt {
			color: #D60505;
			fontStyle:normal;
		}
		mx|ToolTip
		{
			fontSize:15;  
			color:#FF6699; 
		}
		
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import com.xyw.module.etbj.etsl.model.E701;
			import com.xyw.module.etbj.etsl.model.E701Request;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.custom.component.CustomIcon;
			import com.xyw.sys.model.SystemUser;
			
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.events.GridSelectionEvent;
			[Bindable]
			private var systemUser:SystemUser =null;
			private var ve701:Object;
			private var e701Request:E701Request;
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				
				this.systemUser = this.parentApplication.systemUser;
			}
			
			private function onSelected(event:GridSelectionEvent):void
			{
				this.ve701 = DataGrid(event.target).selectedItem;
			}
			
			private function update(event:Event):void{
				if(this.ve701 == null){
					Alert.show("请选择要操作的行！","系统提示");
					return;
				}
				
				if(ve701.e70131!=systemUser.institutionCode){
					Alert.show("不是本机构录入的信息,不能修改","系统提示");
					return;
				}
				if(!vailjc(ve701.e70134)){
					Alert.show("已诊断登记过,不能修改","系统提示");
					return;
				}
				var window:title = new title();
				window.ve701 = this.ve701;
				CompMethod.popUpTitleWindow(window,this,true);
				window.addEventListener("ok_click",refresh1);
				
			}
			private function vailjc(str:String):Boolean{
				return str=="0,0,0,0,0,0,0,0,0,0,0,0,0";
			}
			public function refresh1(event:Event):void{
				this.ve701=null;
				refresh();
			}
			public function refresh():void
			{
				e701Request = new E701Request();
				this.initQueryParam();
				e701Request.parameterPageindex = this.pagerBar.currentPageIndex;
				e701Request.parameterPagesize = 20;
				this.e701Service.queryE701(e701Request);
			}
			private function delet(event:Event):void{
				if(this.ve701 == null){  
					Alert.show("请选择要操作的行");
					return;
				}
				if(ve701.e70131!=systemUser.institutionCode){
					Alert.show("不是本机构录入的信息,不能删除","系统提示");
					return;
				}
				if(!vailjc(ve701.e70134)){
					Alert.show("已诊断登记过,不能删除","系统提示");
					return;
				}
				Alert.yesLabel = '是'; 
				Alert.noLabel = '否';
				Alert.show('确认删除信息？','删除登记信息',1|2,this,deleteValidate);
			}
			protected function deleteValidate(event:CloseEvent):void
			{
				if(event.detail == Alert.YES){
					e701Request = new E701Request();
					e701Request.zhujian=ve701.e70101;
					this.e701Service.deleteE701(e701Request);
				}
			}
			private function queryE701Handler(event:ResultEvent):void{
				var e701Response:Object = event.result;
				var rowCount:Number = e701Response.rowCount;
				if(e701Response.falg){
					this.pagerBar.dataGrid = this.certificateDataGrid;
					this.pagerBar.rowCount = rowCount;
					this.pagerBar.resultData = e701Response.ve701s;
					this.pagerBar.dataBind();
					this.pagerBar.pagerFunction = pagerFunction;
					if(rowCount > 0) {
						this.pagerBar.enabled = true;
					}
					this.certificateDataGrid.dataProvider = e701Response.ve701s;
					this.ve701 = null;
				}else{
					if(e701Response.state==3){
						return;
					}
					Alert.show("请稍后重试","系统提示");
				}
			}
			private function deleteE701Handler(event:ResultEvent):void{
				var e701Response:Object = event.result;
				if(e701Response.falg){
					Alert.show("删除成功", "系统提示");
					refresh();
					this.ve701 = null;
				}else{
					if(e701Response.state==4){
						Alert.show("已登记过检查,不能删除", "系统提示");
						return;
					}
					Alert.show("请稍后重试","系统提示");
				}
			}
			private function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				e701Request=new E701Request();
				this.initQueryParam();
				e701Request.parameterPageindex = currentPageIndex;
				e701Request.parameterPagesize = pageSize;
				this.e701Service.queryE701(e701Request);
			}
			
			private function query():void{
				e701Request = new E701Request();
				this.initQueryParam();
				e701Request.parameterPageindex = 1;
				e701Request.parameterPagesize = 20;
				this.e701Service.queryE701(e701Request);
			}
			
			private function initQueryParam():void
			{
				var type:String = this.jigou.getLastSelectedInstitution();
				var jigou_:String = this.jigou.getLastSelectedInstitutionCode();
				
				e701Request.jigou = (type == "10")?jigou_:jigou_.substring(0,Number(type));
				e701Request.parent_idcard=StringUtil.trim(this.parent_idcard.text);
				e701Request.parent_name=StringUtil.trim(this.parent_name.text);
				e701Request.parent_phone=StringUtil.trim(this.parent_phone.text);
				var e701:E701 = new E701();
				e701.e70106=StringUtil.trim(this.e701_06.text);
				e701.e70108=StringUtil.trim(this.e701_08.text);
				e701Request.e701=e701;
				if(e701Request.parent_idcard!=""||e701Request.parent_name!=""||e701Request.parent_phone!=""||e701.e70106!=""||e701.e70108!=""){
					return;
				}
				e701Request.e70133_str=DateField.stringToDate(timeStart.text,'YYYY-MM-DD');
				e701Request.e70133_end=DateField.stringToDate(timeEnd.text,'YYYY-MM-DD');
			}
			
			protected function readCard_B1(event:MouseEvent):void
			{
				try
				{
					//readCard是调用index.js下的函数，读卡涉及index.jsp和index.js两个文件
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						
						this.e701_06.text = array[0];//姓名
						this.e701_08.text = array[5];//身份证号
						
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			protected function readCard_B2(event:MouseEvent):void
			{
				try
				{
					//readCard是调用index.js下的函数，读卡涉及index.jsp和index.js两个文件
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						
						this.parent_name.text = array[0];//姓名
						this.parent_idcard.text = array[5];//身份证号
						
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			private function setStringDate(item:Object, column:GridColumn):String
			{
				var date:Date=item[column.dataField];
				return DateField.dateToString(date,"YYYY-MM-DD");
			}
			
			private function print(event:Event):void{
				if(ve701==null)
				{
					Alert.show("请选择档案信息","系统提示");
					return;
				}
				
				var urlRequest:URLRequest = new URLRequest();
				var variables:URLVariables = new URLVariables();
				urlRequest.data = variables;
				variables.e70101=encodeURIComponent(ve701.e70101);
				urlRequest.method = URLRequestMethod.POST;
				urlRequest.url = this.parentApplication.contextRoot +
					"/print_new/etbj/etsl/etdady.jsp";
				navigateToURL(urlRequest);
			}
	
		]]>
	</fx:Script>
	
	<s:Scroller x="-6" y="1" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup paddingBottom="20" paddingLeft="10" paddingRight="10" paddingTop="10">
			<mx:TabNavigator  width="1155" chromeColor="#ffffff" creationPolicy="all" height="179">
			<s:NavigatorContent width="100%" label="儿童档案查询" >			
				<s:VGroup width="1155" height="141" paddingBottom="2" paddingLeft="7"
						  paddingRight="10">	
					
					
					<s:HGroup width="100%" paddingBottom="5" paddingLeft="10"
							  paddingRight="10" verticalAlign="middle">
						
						<s:Label id="lbl" color="#FD0909"
								 fontSize="16"
								 text="!  注意：若输入内容，查询不受日期条件限制，有读卡功能的直接读卡就可以查询"/>
					</s:HGroup>
					<s:HGroup width="100%" paddingBottom="5" paddingLeft="1" paddingRight="10"
							  verticalAlign="middle">
						<s:Label text="检查机构"/>
						<component:InstitutionComboBox id="jigou"  width="942" villageVisible="true"/>
					</s:HGroup>
					
						<s:HGroup verticalAlign="middle">
							<s:Label text="儿童姓名" paddingLeft="1"/><s:TextInput id="e701_06"/>
							<s:Label text="证件号码" /><s:TextInput id="e701_08" width="150"/>
							<s:Button buttonMode="true" label="读卡" id="duka1" enabled="{systemUser.duka=='1'}" click="readCard_B1(event)" icon="{CustomIcon.READCARD}"/>
						</s:HGroup>
						
					
						<s:HGroup verticalAlign="middle">
							<s:Label text="家长姓名" paddingLeft="1"/><s:TextInput id="parent_name"/>
							<s:Label text="证件号码" /><s:TextInput id="parent_idcard" width="150"/>
							<s:Label text="手机号码" /><s:TextInput id="parent_phone" width="140" />
							<s:Button buttonMode="true" label="读卡" id="duka2" enabled="{systemUser.duka=='1'}" click="readCard_B2(event)" icon="{CustomIcon.READCARD}"/>
						</s:HGroup>
						
					
					<s:HGroup>
						
						<s:HGroup>
							<s:Label text="录入日期"
									 paddingLeft="1" paddingTop="5"/>
							<component:CustomRangeDateField  id="timeStart" isSelectFirst="true" width="120"/>
							<s:Label text="至"
									 paddingTop="5"/>
							<component:CustomRangeDateField  id="timeEnd" width="120" isSelectNow="true"/>
							<s:Button buttonMode="true" click="query()" label="查询" icon="{CustomIcon.QUERY}"/>	
							<s:Button buttonMode="true" click="update(event)" label="修改" icon="{CustomIcon.MODYFY}"/>	
							<s:Button buttonMode="true" click="delet(event)" label="删除" icon="{CustomIcon.DEL}"/>	
							<s:Button buttonMode="true" click="print(event)" label="打印档案" icon="{CustomIcon.PRINTER}"/>	
						</s:HGroup>
					</s:HGroup>
				</s:VGroup>
			</s:NavigatorContent>
			</mx:TabNavigator>		
			<s:VGroup id="vgroupDataGrid" height="368" paddingRight="5"  width="1155">
				<s:DataGrid id="certificateDataGrid" height="328"
							alternatingRowColors="[#FFFFFF,#EEEEEE]" editable="false"
							rowHeight="22" selectionChange="onSelected(event)"
							width="1155">
					<s:columns>
						<s:ArrayList>
							<s:GridColumn width="40" editable="false" headerText="序号" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer"/>
							<s:GridColumn width="100" dataField="e70106" headerText="姓名"/>
							<s:GridColumn width="150" dataField="e70108" headerText="身份证号"/>
							<s:GridColumn width="80" dataField="e70109" headerText="出生日期" labelFunction="setStringDate"/>
							<s:GridColumn width="50" dataField="e70107_zh" headerText="性别"/>
							<s:GridColumn width="80" dataField="e70111_zh" headerText="民族"/>
							<s:GridColumn width="100" dataField="e70110_zh" headerText="国籍"/>
							<s:GridColumn width="80" dataField="e70117" headerText="母亲姓名"/>
							<s:GridColumn width="150" dataField="e70119" headerText="母亲身份证号"/>
							<s:GridColumn width="80" dataField="e70121" headerText="父亲姓名"/>
							<s:GridColumn width="150" dataField="e70123" headerText="父亲身份证号"/>
							<s:GridColumn width="150" dataField="e70131_zh" headerText="录入单位"/>
							<s:GridColumn width="100" dataField="e70132" headerText="录入人员"/>
							<s:GridColumn width="80" dataField="e70133" headerText="录入时间" labelFunction="setStringDate"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>					
				<component:PagerBar id="pagerBar" enabled="false" isExcel="false" isExcel2="false" isPrinter="false"/>
			</s:VGroup>
			
		</s:VGroup>
	</s:Scroller>
</s:Module>
