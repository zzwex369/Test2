<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:component = "com.xyw.sys.custom.component.*"
			   xmlns:skin = "com.xyw.sys.custom.skin.*"
			   title="添加配偶信息" horizontalCenter="0" verticalCenter="0" backgroundColor="white"
			   chromeColor="#5CACEE" close = "removeWindow()" cornerRadius="5" width="1168" 
			   creationComplete="moduleCreationComplete()"
			   skinClass="com.xyw.sys.custom.skin.CustomTitleWindow">
	<fx:Declarations>
		<s:RemoteObject id="f301Service" destination="f301Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="updateMate"  result="updateMateHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandle(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		@namespace component "com.xyw.sys.custom.component.*";
		@namespace skin "com.xyw.sys.custom.skin.*";
		.myLabel {
			fontSize:12px;
		}
		.myGrid {
			verticalAlign:middle;
		}
		.myTextInput
		{
			fontFamily:微软雅黑;
		}
		.must {
			color:red;
			fontSize:20px;
			fontWeight:bold;
			paddingTop:5px;
		}
		mx|ToolTip
		{
			fontSize:15;  
			color:#FF6699; 
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.fnbj.model.F301;
			import com.xyw.module.fnbj.model.VF301;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.custom.component.CustomIcon;
			import com.xyw.sys.custom.component.CustomRegex;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.formatters.Formatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			private var comboBoxDataRequest:ComboBoxDataRequest;
			public var systemUser:SystemUser =null;
			private var f301:F301 =new F301();
			public var vf301:Object;
			
			private function moduleCreationComplete():void
			{
				var temp:String = this.vf301.f30118;
				if(temp != null && temp.length != 0){
					Alert.show("已填写配偶信息，无需添加","系统提示");
					this.removeWindow();
					return;
				}
				this.systemUser =this.parentApplication.systemUser;
				//检查读卡权限
				if(this.systemUser.duka =="1"){
					this.duka2.enabled =true;
				}
				this.F301_21.addEventListener(FlexEvent.CHANGING,setF301_23);
				this.F301_21.addEventListener(FlexEvent.ENTER,setF301_23);
				
				this.initializeComboBox();
				
			}
			
			private function initializeComboBox():void{	
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from S301_01";
				comboBoxDataRequest.flag ="S301_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from S301_03";
				comboBoxDataRequest.flag ="S301_03";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from S301_04";
				comboBoxDataRequest.flag ="S301_04";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from S301_06";
				comboBoxDataRequest.flag ="S301_06";	
				this.systemService..getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from S601_01";
				comboBoxDataRequest.flag ="S601_01";	
				this.systemService..getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from S601_02";
				comboBoxDataRequest.flag ="S601_02";	
				this.systemService..getComboBoxData(this.comboBoxDataRequest);
				
				
				comboBoxDataRequest =new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt =true;
				comboBoxDataRequest.sql ="select * from S601_12";
				comboBoxDataRequest.flag ="S601_12";	
				this.systemService..getComboBoxData(this.comboBoxDataRequest);
			}
			private function getDroupDownListSelectedIndex(arrayCollection:ArrayCollection,defaultValue:String):int{
				var len:int =arrayCollection.length;
				var i:uint =0;
				var index:int =0;
				while(i<len){
					var comboBoxDataP:Object =arrayCollection.getItemAt(i);
					if(comboBoxDataP.data ==defaultValue){
						index =arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			/*-----------------返回数据放到赋值到下拉菜单-----------------*/
			private function getComboBoxDataHandle(event:ResultEvent):void{
				var comboBoxDataResponse:Object =event.result;
				var flag:String =comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection =comboBoxDataResponse.comboBoxDataList;
				if(flag =="S301_01"){ 
					this.F301_19.dataProvider =comboBoxDataList;
					this.F301_19.selectedIndex =1;
				}else if(flag =="S301_03"){
					var countryIndex:int =this.getCountrySelectedIndex(comboBoxDataList);
					this.F301_24.dataProvider =comboBoxDataList;
					this.F301_24.selectedIndex =countryIndex;
				}else if(flag =="S301_04"){
					this.F301_25.dataProvider =comboBoxDataList;
					this.F301_25.selectedIndex =1;
				}else if(flag =="S301_06"){
					var TypeIndex:int =this.getDroupDownListSelectedIndex(comboBoxDataList,"1")
					this.F301_20.dataProvider =comboBoxDataList;
					this.F301_20.selectedIndex =TypeIndex;
				}else if(flag =="S601_01"){
					this.F301_29.dataProvider =comboBoxDataList;
					this.F301_29.selectedIndex =3;
				}else if(flag =="S601_02"){
					this.F301_27.dataProvider =comboBoxDataList;
					this.F301_27.selectedIndex =1;
				}else if(flag =="S601_12"){
					this.F301_30.dataProvider =comboBoxDataList;
					this.F301_30.selectedIndex =1;
				}
			}
			/*-----------------默认国籍 中国---------------------*/
			private function getCountrySelectedIndex(arrayCollection:ArrayCollection):int{
				var len:int =arrayCollection.length;
				var i:uint =0;
				var index:int =0;
				while(i<len){
					var comboBoxDataP:Object =arrayCollection.getItemAt(i);
					if(comboBoxDataP.data =="CHN"){
						index =arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
				
			}
			private function validateAreaCode(areaCode:String):Boolean
			{
				if(areaCode == "" || areaCode.length == 0){
					return false;
				} else if(areaCode.length < 9){
					return false;
				} else if(areaCode.length == 9){
					return true;
				} else {
					return true;
				}
			}
			private function validateAreaCode12(areaCode:String):Boolean
			{
				if(areaCode == "" || areaCode.length == 0){
					return false;
				} else if(areaCode.length < 9){
					return false;
				} else if(areaCode.length == 9){
					if(areaCode.substr(0,4) == "4190"){
						return false;
					} else {  
						return true;
					}  
				} else {
					return true;
				}
			}
			public function validate1():void{
				
				saveRecord();
			}
			public function validate2():void{				
				if(StringUtil.trim(this.F301_18.text) ==""){			
					Alert.show("请输入配偶的姓名","系统提示");			
					return;		
				}		
				if(this.F301_20.selectedItem.data ==0){		
					Alert.show("请选择配偶证件类别","系统提示");		
					return;	
				}
				if(StringUtil.trim(this.F301_21.text) ==""){	
					Alert.show("请输入配偶证件号码","系统提示");		
					return;	
				}	
				if(this.F301_20.selectedItem.data ==1&&this.F301_24.selectedItem.data=="CHN"&&!CustomRegex.testRegExp(CustomRegex.COMMON_CARD,StringUtil.trim(F301_21.text)))
				{
					Alert.show("配偶的证件号码有误!","系统提示");
					return;
				}
				if(this.F301_22.text ==""){	
					Alert.show("请输入配偶出生日期！","系统提示");		
					return;		
				} 
				if(!CustomRegex.testRegExp(CustomRegex.DATE,StringUtil.trim(F301_22.text)))
				{
					Alert.show("配偶出生日期格式不正确!","系统提示");
					return;
				}
				if(StringUtil.trim(this.F301_23.text)==""){
					Alert.show("请输入配偶的年龄!","系统提示");
					return;
				}
				if(!valiold(StringUtil.trim(this.F301_23.text))){
					Alert.show("配偶的年龄不合法!","系统提示");
					return;
				}
				if(this.F301_24.selectedItem.data ==0){	
					Alert.show("请选择配偶国籍！","系统提示");	
					return;	
				}
				
				if(this.F301_25.selectedItem.data ==0){
					Alert.show("请选择配偶民族！","系统提示");
					return;
				}
				if(this.F301_19.selectedItem.data ==0){
					Alert.show("请选择配偶性别！","系统提示");
					return;
				}
				if(StringUtil.trim(this.F301_26.text) == ""){
					Alert.show("请输入配偶身份证地址!","系统提示");
					return;
				}
				if(StringUtil.trim(this.F301_28.text) ==""){
					Alert.show("请输入配偶联系电话！","系统提示");
					return;
				}
				if(!CustomRegex.testRegExp(CustomRegex.CELLPHONE,StringUtil.trim(F301_28.text)))
				{
					Alert.show("配偶联系电话不正确!","系统提示");
					return;
				}
				
				if(F301_38.getAreaCode().substr(0,4)!="4113")
				{
					Alert.show("配偶现地址请选择南阳市地址","系统提示");
					return;
				}
				if(!CompMethod.validateAreaCode(F301_38.getAreaCode(),'4113'))
				{
					Alert.show("配偶现地址选择到最下级","系统提示");
					return;
				}
				//				if(!validateAreaCode12(this.F301_38.getAreaCode())){
				//					Alert.show("配偶现住地址要选到最下级！","系统提示");
				//					return 1;
				//				}
				if(F301_39.getAreaCode().substr(0,4)=="4113"){
					if(!CompMethod.validateAreaCode(F301_39.getAreaCode(),"4113"))
					{
						Alert.show("配偶户口地址选择到最下级","系统提示");
						return;
					}
				}else{
					if(!CompMethod.validateAreaCode(F301_39.getAreaCode(),"4113",true))
					{
						Alert.show("配偶户口地址选择到乡镇","系统提示");
						return;
					}
				}
				Alert.yesLabel = "确定";
				Alert.noLabel = "取消";
				Alert.show('确认保存？','保存信息',1|2,this,savef301_hanlder);
			}
			private function savef301_hanlder(event:CloseEvent):void{
				if(event.detail == Alert.YES){
					saveRecord();
				}
			}
			public function valiold(str:String):Boolean{
				var num:Number = new Number(str);
				if(num <10 || num>70){
					return false;
				}
				return true;
			}
			public function saveRecord():void{
				this.f301.f30101 =vf301.f30101;					
				this.f301.f30118 =StringUtil.trim(this.F301_18.text);
				this.f301.f30119 =this.F301_19.selectedItem.data;
				this.f301.f30120 =this.F301_20.selectedItem.data;
				this.f301.f30121 =StringUtil.trim(this.F301_21.text);
				this.f301.f30122 = DateFormatter.parseDateString(this.F301_22.text);
				this.f301.f30123 =StringUtil.trim(this.F301_23.text);
				this.f301.f30124 =this.F301_24.selectedItem.data;
				this.f301.f30125 =this.F301_25.selectedItem.data;
				this.f301.f30126 =StringUtil.trim(this.F301_26.text);
				this.f301.f30127 =this.F301_27.selectedItem.data;
				this.f301.f30128 =StringUtil.trim(this.F301_28.text);
				this.f301.f30129 =this.F301_29.selectedItem.data;
				this.f301.f30130 =this.F301_30.selectedItem.data;
				this.f301.f30143 =StringUtil.trim(this.F301_43.text);
				this.f301.f30144 =StringUtil.trim(this.F301_44.text);
				
				this.f301.f30134 =vf301.f30134;
				this.f301.f30135 =vf301.f30135;
				this.f301.f30136 =vf301.f30136;
				this.f301.f30137 =vf301.f30137;
				
				this.f301.f30138 =this.F301_38.getAreaCode();
				this.f301.f30139 =this.F301_39.getAreaCode();
				this.f301Service.updateMate(f301);
			}
			private function updateMateHandler(event:ResultEvent):void
			{
				var f301Response:Object =event.result;
				if(!f301Response.state){
					Alert.show(f301Response.errorMessage,"系统提示");
					return;
				}
				Alert.show("修改成功！ ","系统提示");
				dispatchEvent(new Event("ok_click_po"));
				this.removeWindow();
			}
			
			private function removeWindow():void
			{
				PopUpManager.removePopUp(this);
			}
			
			
			//读卡(父亲)
			protected function readCard_father(event:MouseEvent):void
			{
				try
				{
					var array:Array = CompMethod.read_card("男");//性别
					if(!array)
						return ;
					var sex:String = array[1];//性别
					this.F301_18.text = array[0];//姓名
					this.F301_21.text = array[5];//身份证号
					this.F301_22.text = array[3];//出生日期
					this.F301_26.text = array[4];//现住址
					var nation:String = array[2] + "族";//民族
					var nationDataProvider:ArrayCollection = ArrayCollection(this.F301_25.dataProvider);
					var nationIndex:int = getNationDropDownListSelectedIndex(nationDataProvider,nation);
					this.F301_25.selectedIndex = nationIndex;
					setF301_23(null); 
							
					var sexDataProvider:ArrayCollection = ArrayCollection(this.F301_19.dataProvider);
					var sexIndex:int = getNationDropDownListSelectedIndex(sexDataProvider,sex);
					this.F301_19.selectedIndex = sexIndex;
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			//读卡获取民族信息
			private function getNationDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.label == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			public function setF301_23(event:Event):void{
				if(this.F301_20.selectedItem.data == 1){
					var cardId:String  = this.F301_21.text;
					if(cardId.length >= 16){
						var year:Number = Number(this.F301_21.text.substr(6,4));
						var month:Number = Number(this.F301_21.text.substr(10,2));
						var day:Number = Number(this.F301_21.text.substr(12,2));
						var date:Date = new Date();
						var nowDay:Number = date.date;
						var nowMonth:Number = date.month + 1;
						var nowYear:Number = date.fullYear;
						var age:Number;
						if(nowMonth < month){
							age = nowYear - year - 1;
						}else if(nowMonth == month){
							if(day > nowDay){
								age = nowYear - year -1;
							}else{
								age = nowYear - year;
							}
						}else if(nowMonth > month){
							age = nowYear - year;
						}
						this.F301_23.text = age + "";
						cardId=cardId.substring(6,14);
						this.F301_22.text = cardId.substring(0,4) + "-" + cardId.substring(4,6) + "-" + cardId.substring(6,8);
					}
				}
			}
			/**
			 *设置户口地址 
			 */
			private function f301_39_clickHandler(event:MouseEvent):void
			{
				
				F301_39.setAreaCode(F301_38.getAreaCode());
				
			}
		]]>
	</fx:Script>
	<s:Scroller width="100%" height="275" horizontalScrollPolicy="auto" verticalScrollPolicy="off">
		<s:VGroup width="1200" height="271" paddingBottom="20" paddingLeft="10" paddingRight="10"
				  paddingTop="10">
			<mx:TabNavigator width="1146" chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent width="1142" label="配偶信息" id="Spouse1" >
					<mx:Grid paddingBottom="10" paddingLeft="8">
						<mx:GridRow>
							<mx:GridItem width="204">
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="姓        名"/>
								<s:TextInput id="F301_18" width="129"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="证件类型"/>
								<s:DropDownList id="F301_20" width="130"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="证件号码"/>
								<s:TextInput id="F301_21" width="173"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="出生日期"/>
								<component:CustomRangeDateField id="F301_22" width="165"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="年       龄"/>
								<s:TextInput id="F301_23" width="130" restrict="0-9" maxChars="2"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem width="206">
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="国        籍"/>
								<s:DropDownList id="F301_24" width="129"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="民        族"/>
								<s:DropDownList id="F301_25" width="130"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="性        别"/>
								<s:DropDownList id="F301_19" width="175"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
							<mx:GridItem colSpan="2">	
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="证件地址"/>
								<s:TextInput id="F301_26" width="287"/>
								<s:Label text="*" styleName="must"/>
								<s:Button id="duka2" label="读卡" click="readCard_father(event)" enabled="false" icon="{CustomIcon.READCARD}"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem width="194">
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="文化程度"/>
								<s:DropDownList id="F301_29" width="128"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="职        业"/>
								<s:DropDownList id="F301_27" width="130"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="户        籍"/>
								<s:DropDownList id="F301_30" width="175"/>
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="联系电话"/>
								<s:TextInput id="F301_28" width="167" maxChars="12" restrict="0-9"/>
								<s:Label text="*" styleName="must"/>
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem colSpan="2">
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="工作单位"/>
								<s:TextInput id="F301_43" width="341" />
							</mx:GridItem>
							<mx:GridItem>
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="单位电话"/>
								<s:TextInput id="F301_44" width="175" maxChars="12" restrict="0-9"/>
							</mx:GridItem>
						</mx:GridRow>
						
						<mx:GridRow>
							<mx:GridItem colSpan="6">
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="现住地址"/>
								<component:AreaComboBoxVillageAuto id="F301_38" width="953" buttonMode="true" areaCode="{this.parentApplication.systemUser.areaCode}"/>
								<s:Label text="*" styleName="must"/>
								<!--<s:Button label="同下" click="copy2()"/>-->
							</mx:GridItem>
						</mx:GridRow>
						<mx:GridRow>
							<mx:GridItem colSpan="6">
								<s:Label paddingLeft="1" paddingTop="4" styleName="myLabel"
										 text="户口地址"/>
								<component:AreaComboBoxVillageAuto id="F301_39" width="954" buttonMode="true" areaCode="{this.parentApplication.systemUser.areaCode}"/>
								<s:Label text="*" styleName="must"/>
								<s:Button label="同现住址" click="f301_39_clickHandler(event)" buttonMode="true"/>
							</mx:GridItem>
						</mx:GridRow>
						
						
					</mx:Grid>
					
				</s:NavigatorContent>
			</mx:TabNavigator>
			
			<s:HGroup paddingBottom="10" verticalAlign="middle" width="80%" horizontalAlign="right">
				<s:Button id="saveF301" label="保存" click="validate2()"/>
			</s:HGroup>			
		</s:VGroup>
	</s:Scroller>
</s:TitleWindow>
