<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns="spark.components.*"
			   width="686" height="630" backgroundColor="#C0C0C0" chromeColor="#BBE2FA"
			   close="closeTitleWindow()" color="#000000" contentBackgroundColor="#FFFFFF"
			   cornerRadius="5" creationComplete="init()" fontFamily="微软雅黑"
			   skinClass="com.xyw.sys.custom.skin.CustomTitleWindow" title="图片">
	<fx:Declarations>
		<s:Wipe direction="down" startDelay="100" id="image_addedEffect"/>
		<s:Parallel id="image_removedEffect"><!--播放效果-->
			<mx:Zoom />
			<mx:Fade />
		</s:Parallel>
		<s:RemoteObject id="pictureService" destination="pictureService"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="saveImage" result="saveImageResult(event)" 
					  fault="saveImageFaultHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";	
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[   		
			import com.xyw.sys.custom.itemrenderer.CustomListColumnItemRenderer2;
			import com.xyw.sys.model.SystemUser;
			import com.xyw.uploadPictures.model.PictureMessage;
			import com.xyw.uploadPictures.model.Pictures;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.controls.ProgressBar;
			import mx.controls.listClasses.ListBaseContentHolder;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.supportClasses.ItemRenderer;		
			private var file:FileReference; //要上传的文件  
			private var fileList:FileReferenceList = new FileReferenceList(); //选择图片的文件列表   
			//private var _fileList:FileReferenceList = new FileReferenceList(); //上传图片的文件列表   
			private var isClosed:Boolean=false;//判断弹出的图片是否关闭  
			private var img:Image;//弹出的大图  
			[Bindable]
			private var imgList:ArrayCollection=new ArrayCollection();//待上传图片列表  
			[Bindable]
			private var _allTip:String="";
			private var j:int=0;//load回调函数次数  
			private var selecetedNum:int=-1;//被选中的序号  
			private var isUpload:Boolean=false;//是否已经上传  
			private var _uploadSizeTotal:Number = 0;//总共大小
			private var _uploadSize:Number=0;//上传文件数量
			private var _uploadSucceedSize:Number=0;//文件上传成功数量 
			private var _uploadFNum:int = 0;//上传当前第几个
			private var item:ItemRenderer;//当前的项目呈示器
			private var progressBar:ProgressBar;//图片进度条
			private var image:Pictures=new Pictures();	
			private var imageMessage:PictureMessage=new PictureMessage();
			public var systemUser:SystemUser=null;
			public var pic08:String;
			public var pic09:String;
			public var pic10:String;
			public var pic02:Number;
			public function init():void{  
				this.systemUser =this.parentApplication.systemUser;
				fileList = new FileReferenceList();  //创建对象  
				fileList.addEventListener(Event.SELECT, onSelect);//选择 监听器   
				picList.dataProvider=imgList;//图片预览  	
			}
			private function closeTitleWindow():void
			{
				Alert.show("是否关闭上传图片窗口","系统提示",1|2,this,_closeTitleWindow);
			}
			private function _closeTitleWindow(event:CloseEvent):void
			{
				if(event.detail==Alert.YES){
				    PopUpManager.removePopUp(this);					
				}
			}
			//单位转换
			internal function countFileSize(size:Number):String{
				var _s:Number=Number((size/1024).toFixed(2));
				var str:String="";
				if(_s<1) str=size.toString()+"B";
				else if(_s>1&&_s<1024) str=(_s.toFixed(2)).toString()+"KB";
				else str=((_s/1024).toFixed(2)).toString()+"MB";
				return str;
			}
			//---------------------------文件上传部分---------------------------------------------//    
			private function select(): void{
				var imageTypes:FileFilter = new FileFilter("Images (*.jpg, *.jpeg, *.png)", "*.jpg;*.jpeg;*.png");     
				var allTypes:Array = new Array(imageTypes);    
				fileList.browse(allTypes);//打开资源管理器时显示的类型  
			}     
			/** 
			 * 选择文件事件回调函数 
			 * */  
			private function onSelect(e: Event): void{  
				isUpload=false;//重置上传状态标识  
				//_uploadSizeTotal=0;//第一次选择文件时需要把文件总大小清零
				j=0;//load回调函数的执行次数  
				for(var i:int=0;i<fileList.fileList.length;i++)  
				{     
					file=fileList.fileList[i] as FileReference; 
					/* _uploadSizeTotal+=file.size; */
					//为每个FileReference添加监听器  
				    file.addEventListener(Event.COMPLETE,completeHandle);
					file.load();  
					}  
			   }    
			/* 
			* load回调方法--要等到 fileList遍历完才一次性回调 
			*/  
			private function completeHandle(event:Event):void{  
				if(j==fileList.fileList.length-1&&!isUpload)  
					creatImgList();  
				j++;  
				
			}     
			//保存待上传图片到imgList列表  
			private function creatImgList():void{
				for(var i:int=0;i<fileList.fileList.length;i++)  
				{     
					var _file:FileReference=fileList.fileList[i] as FileReference;  
					var obj:Object=new Object;
					obj.file=_file;
					imgList.addItem(obj);//添加到待图片列表  
					_file.removeEventListener(Event.COMPLETE,completeHandle);
				} 
				 for(var t:int=0;t<imgList.length;t++)
				{
				   var obj:Object=imgList[t];
				  _uploadSizeTotal+=obj.file.size; 
				} 
				 _allTip="共"+imgList.length.toString()+"个文件，"+countFileSize(_uploadSizeTotal).toString();
			}  
			/*------------------预览图片---------------------------------*/
			protected function smallerimg_clickHandler(event:MouseEvent):void
			{
				img = new Image();
				img.source=file.data;
				//imgShow.maintainAspectRatio = true;//默认为true
				img.addEventListener(Event.COMPLETE, image_complete);
				img.addEventListener(ResizeEvent.RESIZE, image_resize);
				img.addEventListener(MouseEvent.CLICK, image_click);
				img.setStyle("addedEffect", image_addedEffect);
				img.setStyle("removedEffect", image_removedEffect);
				PopUpManager.addPopUp(img, this.parentApplication as main, true);
			}
			
			private function image_click(evt:MouseEvent):void {
				PopUpManager.removePopUp(evt.currentTarget as Image);
			}
			private function image_resize(evt:ResizeEvent):void {
				PopUpManager.centerPopUp(evt.currentTarget as Image);
			}
			private function image_complete(evt:Event):void {
				PopUpManager.centerPopUp(evt.currentTarget as Image);
			}
			/* 
			*删除选中图片  
			*/  
			protected function deletePhoto():void  
			{      
				//var array:Array=picList.selectedIndices;  
				if(picList.selectedItem==null){
					Alert.show("请选择删除的图片");
					return ;
				}
				var array:Vector.<int>=picList.selectedIndices;  
				if(array.length>0){  
					array.sort(Array.NUMERIC);//按数字升序排序   
					for(var i:int=0;i<array.length;i++)  
					{  
						imgList.removeItemAt(array[i]-i);//从待上传列表中移出  
						fileList.fileList.splice(array[i],1);//移除的选择项按索引从大到小移除，以便移除过程中索引不超界
					} 
					_uploadSizeTotal=0;
					for(var j:Number=0;j<imgList.length;j++){	
						var obj:Object=new Object();
						obj=imgList[j];
						_uploadSizeTotal+=obj.file.size;				
					}
					photoName.text="";  
					photoSize.text="";  
				} 
				if(imgList.length==0){
					_allTip="";
				}else{
					_allTip="共"+imgList.length.toString()+"个文件，"+countFileSize(_uploadSizeTotal).toString();
				}
			}  
			/* 
			* 显示选中条目的详细信息 
			*/  
			protected function photoList_itemClickHandler(event:MouseEvent):void  
			{   
				file=picList.selectedItem.file;
				if(file!=null){  
					photoName.text=file.name;//名称  
					photoSize.text=countFileSize(file.size)//大小  
					selecetedNum=picList.selectedIndex;//被选中的序号  
				}  
			}  
			/* ********************************************
			监听上传进度
			********************************************** */
		/*	internal function onProcessHandler(e:ProgressEvent):void{	
				Alert.show(item+">>>>>>>>>>>.");
			var proc:uint = e.bytesLoaded/e.bytesTotal*100;
			var num:Number = _uploadFNum;	
			var item:ItemRenderer=picList.dataGroup.getChildAt(num) as ItemRenderer;//得到当前的项呈示器
			if(item!=null)
			{
				Alert.show(item+">>>>>>>>>>>----.");
			item.document.processBar.width = proc*0.01*145;
			imgList[num].width = proc*0.01*145;									
			}
			} 
			/*public  function pbProgress(event: ProgressEvent): void  
			{  
				progressBar.setProgress(event.bytesLoaded, event.bytesTotal);  
			}  */   
			/* ******************
			单个文件上传结束
			****************** */
			internal function completeHandler():void{
				fileList.fileList[_uploadFNum].removeEventListener(Event.COMPLETE,onComplete);	
				//fileList.fileList[_uploadFNum].removeEventListener(Event.COMPLETE,completeHandle);
				++_uploadFNum;//带上传图片下标
				_uploadSize=Number(imgList.length);//文件总大小
				//picList.scrollToIndex(_uploadFNum);
				if(_uploadFNum>=imgList.length){
					imgList.removeAll();//清空文件列表			
					fileList.fileList.slice(0);//清空列表文件数组的数据
					picList.dataProvider = imgList;
					processBarTotal.width=0;//上传文件总进度条清空
					photoName.text="";  
					photoSize.text="";  
					allTip.text="全部上传完毕！";
					_uploadFNum=0;//图片计数器清零
					Alert.show("上传成功,点击确定即将关闭上传界面窗口","系统提示",4,this,closeTitle);
					
				}else{	
					uploadfile(_uploadFNum);
				}
			}
			private function completeProcessBarTotalWidth(event:FlexEvent):void
			{
				
			}
			private function closeTitle(event:CloseEvent):void
			{
				if(event.detail==Alert.OK){
					closeTitleWindow();
				}
				Alert.okLabel="确定";
			}
			internal function onComplete(e:Event):void{
				completeHandler();
			}
			/* ******************
			执行上传操作
			****************** */
			internal function uploadfile(oNum:int):void{
				try{
					//item=picList.dataGroup.getChildAt(oNum) as ItemRenderer;//得到当前的项呈示器
					//progressBar=item.document.pb;
					image.pic02=pic02;
					image.pic07=systemUser.institutionCode;
					image.pic08=pic08;
					image.pic09=pic09;
					image.pic10=pic10;
					var requestUrl:URLRequest = new URLRequest(this.parentApplication.contextRoot +
						"/FileUploadServlet?pic02="+pic02+"&pic07="+systemUser.institutionCode+"&pic08="+pic08+"&pic09="+pic09+"&pic10="+pic10);
					fileList.fileList[oNum].upload(requestUrl);
					fileList.fileList[oNum].addEventListener(Event.COMPLETE,onComplete);	
					fileList.fileList[oNum].addEventListener(IOErrorEvent,ioErrorEventHandler);
					fileList.fileList[oNum].addEventListener(HTTPStatusEvent.HTTP_STATUS,httpStatusHandler);
				//	fileList.fileList[oNum].addEventListener(HTTPStatusEvent.HTTP_RESPONSE_STATUS,httpResponseHandler);
					fileList.fileList[oNum].addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,dataEvent); 
				}
				catch(e:Event){
					Alert.show(errorString);
					completeHandler();
				}				
			}
			/* ******************
			点击上传按钮
			******************  */
			internal function uploadHandler():void{
				hGroup.enabled=false;
				if(_uploadFNum!=0) return;//说明其正在有文件上传中
				if(picList.dataProvider==null || imgList.length<=0){
					Alert.show("您还未选择文件!","提示信息");
					return;
				}
				//清空原来的图片信息  从新放入
				fileList.fileList.slice(0);
				fileList.fileList.length=imgList.length;
				for(var j:int=0;j<imgList.length;j++){
					var obj=new Object();
					obj=imgList[j];
					fileList.fileList[j]=obj.file;
				}
				uploadfile(_uploadFNum);//从第一个开始上传	
			}
			private  function delAllPic():void
			{	
				if(imgList.length){
					imgList.removeAll();
					photoName.text="";  
					photoSize.text="";  
					_allTip="";
				}else{
					Alert.show("没有图片");
				}
			}
			/*----------------上传字符数组----------------*/
			public function photoUpLoad(file:FileReference):void{
				if(file.data.length!=-1){
					image.pic02=1585;//301主键
					image.pic04=file.name; 
					imageMessage.imageByte=file.data;
					image.pic07="07";
					image.pic08="08";
					image.pic09="09";
					image.pic10="10";
					pictureService.saveImage(image,imageMessage);
				}else{
					Alert.show("图片不存在","系统提示");
				}
				
			}
			private function saveImageResult(event:ResultEvent):void
			{
				imageMessage=event.result as PictureMessage;
				if(imageMessage.status==false){
					Alert.show(imageMessage.message,"系统提示");
				}else{
					Alert.show(imageMessage.message,"系统提示");
				}
				//是否还要继续上传图片
				if(_uploadFNum<imgList.length){
					completeHandler();
				}
			}
			
			protected function saveImageFaultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.message.toString());
			}
			private function ioErrorEventHandler(event:IOErrorEvent):void
			{
				Alert.show("IOErrorEvent************"+event);
			}
			private function httpStatusHandler(event:HTTPStatusEvent):void
			{
				Alert.show("HTTPStatusEvent----"+event);
			}
			private function httpResponseHandler(event:HTTPStatusEvent):void
			{
				Alert.show("HTTPStatusEvent>>>>>>>>>>>>>>>>"+event);
			}
			/**
			 * 返回的提示
			 * */
			private function dataEvent(event:DataEvent):void
			{
				if(event.data=="true"){
					_uploadSucceedSize++;
					//根据返回的保存状态 设置进度条
					processBarTotal.width=(_uploadSucceedSize/_uploadSize)*471;
					//上传进度百分比
					processBarTotalLabel.text=(((processBarTotal.width)/471)*100).toFixed(0)+"%";
				} 
			}
		]]>  
	</fx:Script>
	<s:HGroup>
		<s:List id="picList" width="684" height="402" click="photoList_itemClickHandler(event)"
				contentBackgroundColor="#FFFFFF" dataProvider="{imgList}"
				itemRenderer="com.xyw.sys.custom.itemrenderer.CustomListColumnItemRenderer2">
			<s:layout>
				<s:TileLayout requestedColumnCount="4" requestedRowCount="3"/>
			</s:layout>
		</s:List>
	</s:HGroup>
	<s:HGroup x="0" y="401" width="684" height="49" paddingTop="10">
		<s:Label id="labelName"  width="94" height="30" fontSize="15"
				 paddingLeft="9" text="图片名称:" verticalAlign="middle"/>
		<s:Label id="photoName" width="582" height="30" maxDisplayedLines="1" verticalAlign="middle"/>
	</s:HGroup>
	<s:HGroup x="0" y="468" width="684" height="38">
		<s:Label  x="10" y="453" width="94" height="30" fontSize="15" paddingLeft="9"
				  text="大小:" verticalAlign="middle"/>
		<s:Label id="photoSize" x="125" y="447" width="262" height="37" maxDisplayedLines="1"
				 verticalAlign="middle"/>
		<s:Label id="allTip" width="315" height="36" fontWeight="bold" paddingLeft="20"
				 verticalAlign="middle" fontSize="18" text="{_allTip}"/>	
	</s:HGroup>
	<s:HGroup x="0" y="514" width="684" height="40" verticalAlign="middle">
		<s:Label width="113" height="30" fontSize="15" paddingLeft="5" verticalAlign="middle" text="文件总进度"/>
		<mx:Canvas id="totalProcess" width="471" height="22" backgroundColor="0xffffff"
				   borderColor="0X124fc0" cornerRadius="7">
			<mx:Canvas backgroundColor="#5CCA6C" backgroundAlpha="0.5"  cornerRadius="7" id="processBarTotal"  height="22"/>
		</mx:Canvas>
		<s:Label width="79" id="processBarTotalLabel" text="0%" fontSize="15" paddingLeft="5" color="#DA2332" fontWeight="bold"></s:Label>
	</s:HGroup>
	<s:HGroup x="0" y="554" width="684" height="40" horizontalAlign="right" paddingRight="10" id="hGroup">
		<s:Button height="31" label="打开图片" click="select()" color="#000000"/>
		<s:Button height="31" label="预览" click="smallerimg_clickHandler(event)" color="#000000"/>
		<!--<s:Button height="31" label="上传选中图片"/>-->
		<s:Button height="31" label="上传全部图片" click="uploadHandler()" color="#000000"/>
		<s:Button height="31" label="删除选中图片" click="deletePhoto()" color="#000000"/>
		<s:Button height="31" x="176" y="433" label="删除全部图片" click="delAllPic()" color="#000000"/>
		<s:Button height="31" label="关闭窗口" click="closeTitleWindow()" color="#000000"/>
	</s:HGroup>	
	
</s:TitleWindow>