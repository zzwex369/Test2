<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  xmlns:local="com.xyw.sys.custom.component.*"
		  creationComplete="moduleCreationComplete()">
	<fx:Declarations>
		<s:RemoteObject id="d307Service" destination="d307Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="saveD307" result="saveD307Handler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		mx|GridItem
		{
			horizontalAlign:right;
			verticalAlign:middle;
		}
		s|HGroup
		{
			horizontalAlign:right;
			verticalAlign:middle;
		}
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|TextInput
		{
			fontFamily:微软雅黑;
		}
		.must {
			color:red;
			fontSize:20px;
			fontWeight:bold;
			paddingTop:5px;
		}
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import com.xyw.module.csyxzm.model.D307;
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.ComboBoxDataResponse;
			import com.xyw.sys.model.SystemUser;
			
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.controls.Text;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.formatters.DateTimeFormatter;
			
			private var comboBoxDataRequest:ComboBoxDataRequest;
			private var d307:D307 =new D307();
			public var systemUser:SystemUser = null;
			public var array:Array = new Array();
			
			private var birth_day:String;
			private var birth_hour:String;
			private var birth_minute:String;
			private var d307_04_str:String;
			private var d307_04_date:Date;
			public var xtDate:Date =new Date();
			
			//初始化方法
			private function moduleCreationComplete():void
			{
				this.systemUser = this.parentApplication.systemUser;
				if(this.systemUser.duka =="1"){
					this.duka1.enabled =true;
					this.duka2.enabled =true;
					this.duka3.enabled =true;
					this.btnRead.enabled =true;
				}
				this.d307_23.text = DateField.dateToString(new Date, "YYYY-MM-DD");
				var date:Date = new Date();
				this.hour.text = (String)(date.hours);
				this.minute.text = (String)(date.minutes);
				this.initializeComboBox();
			}
			private function initializeComboBox():void
			{
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_01";
				comboBoxDataRequest.sql = "select * from S301_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_03";
				comboBoxDataRequest.sql = "select * from S301_03";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_04";
				comboBoxDataRequest.sql = "select * from S301_04";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select t.d101_01, t.d101_02 from D101 t";
				comboBoxDataRequest.flag = "D101";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_06";
				comboBoxDataRequest.flag = "S301_06";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_07";
				comboBoxDataRequest.flag = "S301_07";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
			}
			
			/*-----------------返回数据放到赋值到下拉菜单-----------------*/
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object =  event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				
				if(flag =="S301_01"){
					var d30703Index:int =this.getDropDownListSelectedIndex(comboBoxDataList,"1");
					this.d307_03.dataProvider = comboBoxDataList;
					this.d307_03.selectedIndex = d30703Index;
				}else if(flag == "S301_03")
				{
					this.d307_09.dataProvider = comboBoxDataList;
					var countryIndex:int = this.getCountrySelectedIndex(comboBoxDataList);
					this.d307_09.selectedIndex = countryIndex;
					this.d307_15.dataProvider = comboBoxDataList;
					this.d307_15.selectedIndex = countryIndex;
					this.d307_09_15.dataProvider = comboBoxDataList;
					this.d307_09_15.selectedIndex = countryIndex;
				}else if(flag == "S301_04")
				{
					this.d307_10.dataProvider = comboBoxDataList;
					var volkIndex:int = this.getVolkSelectedIndex(comboBoxDataList);
					this.d307_10.selectedIndex = volkIndex;
					this.d307_16.dataProvider = comboBoxDataList;
					this.d307_16.selectedIndex = volkIndex;
					this.d307_10_16.dataProvider = comboBoxDataList;
					this.d307_10_16.selectedIndex = volkIndex;
				}else if(flag == "D101")
				{
					var index:int = this.getDropDownListSelectedIndex(comboBoxDataList, this.systemUser.institutionCode);
					this.d307_24.dataProvider = comboBoxDataList;
					this.d307_24.selectedIndex = index;
					this.d307_24.enabled =false;
				}else if(flag == "S301_06")
				{
					this.d307_07.dataProvider = comboBoxDataList;
					this.d307_07.selectedIndex = 1;
					
					this.d307_13.dataProvider = comboBoxDataList;
					this.d307_13.selectedIndex = 1;
					
					this.d307_07_13.dataProvider = comboBoxDataList;
					this.d307_07_13.selectedIndex = 1;
					
					this.d307_20.dataProvider = comboBoxDataList;
					this.d307_20.selectedIndex = 1;
				}else if(flag == "S301_07")
				{
					this.d307_19.dataProvider = comboBoxDataList;
					this.d307_19.selectedIndex = 0;
				}
			}
			
			/*-----------------默认国籍 中国---------------------*/
			private function getCountrySelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "CHN") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			/*-----------------默认民族  汉族---------------------*/
			private function getVolkSelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "01") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}			
			private function getDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			public function cardExp(cardId:String):int{
				try{
					var str:Boolean=ExternalInterface.call("parent.checkIdcard",cardId);
					if(!str){	
						Alert.show("身份证号码有误!","系统提示");
						return 1;
					}else{
						var age:Number =dayExp(cardId);
						if( age <14 || age>60){
							Alert.show("身份证号码有误：当前年龄为14-60之间的数字!","系统提示");
							return 1;
						}
					} 
				}catch(error:Error){
					Alert.show("身份证验证失败！");
					return 1;
				}
				return 0;
			}
			public function dayExp(cardId:String):Number{
				var age:Number;
				var year:Number;
				var month:Number;
				var day:Number;
				var date:Date = new Date();
				var nowDay:Number = date.date;
				var nowMonth:Number = date.month + 1;
				var nowYear:Number = date.fullYear;
				if(cardId.length >= 16){
					cardId=cardId.substring(6,14);
					year = Number(cardId.substring(0,4));
					month = Number(cardId.substring(4,6));
					day = Number(cardId.substring(6,8));
					
				}else{
					cardId=cardId.substring(6,12);
					year = Number("19" + cardId.substring(0,2));
					month = Number(cardId.substring(2,4));
					day = Number(cardId.substring(4,6));
				}
				if(nowMonth < month){
					age = nowYear - year - 1;
				}else if(nowMonth == month){
					if(day > nowDay){
						age = nowYear - year -1;
					}else{
						age = nowYear - year;
					}
				}else if(nowMonth > month){
					age = nowYear - year;
				}
				
				return age;
			}
			public function cardExpL(cardId:String):int{
				try{
					var str:Boolean=ExternalInterface.call("parent.checkIdcard",cardId);
					if(!str){	
						Alert.show("领证人身份证号码有误!","系统提示");
						return 1;
					}
				}catch(error:Error){
					Alert.show("身份证验证失败！");
					return 1;
				}
				return 0;
			}
			private function validate1():void 
			{
				var patternMonther:RegExp = /^(^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{2}[0-9Xx]$)$/g;
				var patternFather:RegExp = /^(^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{2}[0-9Xx]$)$/g;
				var patternFM:RegExp = /^(^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{2}[0-9Xx]$)$/g;
				var patternLin:RegExp = /^(^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{2}[0-9Xx]$)$/g;
				if(StringUtil.trim(this.d307_02.text) == "")
				{
					Alert.show("请输入婴儿姓名!","系统提示");
					return;
				}
				if(this.d307_03.selectedItem.data == 0)
				{
					Alert.show("请选择性别!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d307_04.text) == "")
				{
					Alert.show("请选择婴儿出生日期!","系统提示");
					return;
				}
				var d30704_:Number = DateFormatter.parseDateString(this.d307_04.text).time; 
				if(d30704_ >xtDate.time){
					Alert.show("婴儿出生日期不能大于当前日期","系统提示");
					return;
				}
				if((Number)(this.hour.text) < 0 || (Number)(this.hour.text) > 23) 
				{
					Alert.show("输入时间(小时)不符合格式", "系统提示");
					return;
				}if((Number)(this.minute.text) < 0 || (Number)(this.minute.text) > 59) 
				{
					Alert.show("输入时间(分钟)不符合格式", "系统提示");
					return;
				}
				
				if(this.d307_05.getAreaCode().length < 8) {
					Alert.show("出生地选到乡镇级别!", "系统提示");
					return;
				}
				if(this.mother.selected || this.father.selected){
					if(StringUtil.trim(this.d307_06_12.text) == "")
					{
						Alert.show("请输入父亲或者母亲姓名!","系统提示");
						return;
					}
					if(this.d307_07_13.selectedItem.data == 0)
					{
						Alert.show("请选择证件类别!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d307_08_14.text) == "")
					{
						Alert.show("请输入证件号码!","系统提示");
						return;
					}
					if(!patternFather.test(this.d307_08_14.text) && this.d307_07_13.selectedItem.data == "1")
					{
						Alert.show("父亲或母亲身份证号码有误！","系统提示");
						return;
					}
					if(this.d307_09_15.selectedItem.data == 0)
					{
						Alert.show("请选择国籍!","系统提示");
						return;
					}
					if(this.d307_10_16.selectedItem.data == 0)
					{
						Alert.show("请选择民族!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d307_11_.text) == "")
					{
						Alert.show("请输入家庭地址!","系统提示");
						return;
					}
				}else{
					if(StringUtil.trim(this.d307_06.text) == "")
					{
						Alert.show("请输入母亲姓名!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d307_08.text) == "")
					{
						Alert.show("请输入母亲证件号码！","系统提示");
						return;
					}
					if(this.d307_07.selectedItem.data == 1)
					{
						if(!patternMonther.test(this.d307_08.text))
						{
							Alert.show("母亲身份证号长度不对，或号码不符合规定!","系统提示");
							return;
						}
						/* else{
							var cardIdM:String  = this.d307_08.text;
							if(cardExp(cardIdM) !=0){
								return;
							}
						} */
					}
					if(this.d307_09.selectedItem.data == 0)
					{
						Alert.show("请选择母亲国籍!","系统提示");
						return;
					}
					if(this.d307_10.selectedItem.data == 0)
					{
						Alert.show("请选择母亲民族!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d307_12.text) == "")
					{
						Alert.show("请输入父亲姓名!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d307_14.text) == "")
					{
						Alert.show("请输入父亲证件号码！","系统提示");
						return;
					}
					if(this.d307_13.selectedItem.data == "1")
					{
						if(!patternFather.test(this.d307_14.text)){
							Alert.show("父亲身份证号长度不对，或号码不符合规定!","系统提示");
							return;
						}
						/* else{
							var cardIdF:String  = this.d307_14.text;
							if(cardExp(cardIdF) !=0){
								return;
							}
						} */
					}
					if(this.d307_15.selectedItem.data == 0)
					{
						Alert.show("请选择父亲国籍!","系统提示");
						return;
					}
					if(this.d307_16.selectedItem.data == 0)
					{
						Alert.show("请选择父亲民族!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d307_11.text) == "")
					{
						Alert.show("请输入母亲家庭地址!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d307_17.text) == "")
					{
						Alert.show("请输入父亲家庭地址!","系统提示");
						return;
					}
				}
				if(StringUtil.trim(this.d307_18.text) == "")
				{
					Alert.show("请输入领证人!","系统提示");
					return;
				}
				if(this.d307_19.selectedItem.data == 0)
				{
					Alert.show("请选择与新生儿关系!","系统提示");
					return;
				}
				if(this.d307_20.selectedItem.data == 0)
				{
					Alert.show("请选择领证人有效证件类别!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d307_21.text) == "")
				{
					Alert.show("请输入领证人证件号码!","系统提示");
					return;
				}
				if(this.d307_20.selectedItem.data == "1")
				{
					if(!patternLin.test(this.d307_21.text)){
						Alert.show("领证人身份证号长度不对，或号码不符合规定！","系统提示");
						return;
					}
					/* else{
						var cardIdL:String  = this.d307_21.text;
						if(cardExpL(cardIdL) !=0){
							return;
						}
					} */
				}
				if(StringUtil.trim(this.d307_23.text) == "")
				{
					Alert.show("请选择签发时间!","系统提示");
					return;
				}
				var d30723_:Number = DateFormatter.parseDateString(this.d307_23.text).time; 
				if(d30723_ >xtDate.time){
					Alert.show("签发时间不能大于当前日期","系统提示");
					return;
				}
				saveRecord();
			}
			
			private function saveRecord():void
			{
				this.d307.d30702 = StringUtil.trim(this.d307_02.text);
				this.d307.d30703 = this.d307_03.selectedItem.data;
				
				var dateTimeFormatter:DateTimeFormatter = new DateTimeFormatter();
				dateTimeFormatter.dateTimePattern = "yyyy-MM-dd";
				var dateTime_str:String = dateTimeFormatter.format(this.d307_04.selectedDate);
				this.d307_04_str = dateTime_str + " " +  this.hour.text + ":" + this.minute.text;
				this.d307_04_date = DateFormatter.parseDateString(this.d307_04_str);
				this.d307.d30704 = this.d307_04_date;
				if(this.father.selected == true)
				{
					this.d307.d30731="1";
					this.d307.d30712 = StringUtil.trim(this.d307_06_12.text);
					this.d307.d30713 = this.d307_07_13.selectedItem.data;
					this.d307.d30714 = StringUtil.trim(this.d307_08_14.text);
					this.d307.d30715 = this.d307_09_15.selectedItem.data;
					this.d307.d30716 = this.d307_10_16.selectedItem.data;
					this.d307.d30717 = StringUtil.trim(this.d307_11_.text);
					
					this.d307.d30706 = "";
					this.d307.d30707 = "";
					this.d307.d30708 = "";
					this.d307.d30709 = "";
					this.d307.d30710 = "";
					this.d307.d30711 = "";
				}else if(this.mother.selected == true)
				{
					this.d307.d30731="2";
					this.d307.d30706 = StringUtil.trim(this.d307_06_12.text);
					this.d307.d30707 = this.d307_07_13.selectedItem.data;
					this.d307.d30708 = StringUtil.trim(this.d307_08_14.text);
					this.d307.d30709 = this.d307_09_15.selectedItem.data;
					this.d307.d30710 = this.d307_10_16.selectedItem.data;
					this.d307.d30711 = StringUtil.trim(this.d307_11_.text);
					
					this.d307.d30712 = "";
					this.d307.d30713 = "";
					this.d307.d30714 = "";
					this.d307.d30715 = "";
					this.d307.d30716 = "";
					this.d307.d30717 = "";
				}else{
					if(StringUtil.trim(this.d307_06.text) != ""){
						this.d307.d30706 = StringUtil.trim(this.d307_06.text);
						this.d307.d30707 = this.d307_07.selectedItem.data;
						this.d307.d30708 = StringUtil.trim(this.d307_08.text);
						this.d307.d30709 = this.d307_09.selectedItem.data;
						this.d307.d30710 = this.d307_10.selectedItem.data;
						this.d307.d30711 = StringUtil.trim(this.d307_11.text);
					}
					if(StringUtil.trim(this.d307_12.text) != ""){
						this.d307.d30712 = StringUtil.trim(this.d307_12.text);
						this.d307.d30713 = this.d307_13.selectedItem.data;
						this.d307.d30714 = StringUtil.trim(this.d307_14.text);
						this.d307.d30715 = this.d307_15.selectedItem.data;
						this.d307.d30716 = this.d307_16.selectedItem.data;
						this.d307.d30717 = StringUtil.trim(this.d307_17.text);//父亲家庭地址
					}
					this.d307.d30731=null;
				}
				this.d307.d30718 = StringUtil.trim(this.d307_18.text);
				this.d307.d30719 = this.d307_19.selectedItem.data;
				this.d307.d30720 = this.d307_20.selectedItem.data;
				this.d307.d30721 = StringUtil.trim(this.d307_21.text);
				this.d307.d30722 = StringUtil.trim(this.d307_22.text);
				this.d307.d30724 = this.d307_24.selectedItem.data;
				this.d307.d30723 = DateField.stringToDate(this.d307_23.text, "YYYY-MM-DD");
				guide25();
				guide26();
				guide27();
				guide28();
				guide29();
				guide30();
				this.d307.d30705 = this.d307_05.getAreaCode();
				this.d307Service.saveD307(d307);
			}
			protected function saveD307Handler(event:ResultEvent):void{
				var d307Response:Object =event.result;
				if(!d307Response.state){
					Alert.show(d307Response.errorMessage,"系统提示");
					return;
				}
				Alert.show("保存成功！ ","系统提示");
				this.saveD307.enabled =false;
				this.d307_02.addEventListener(FlexEvent.CHANGING,openSave);
			}
			private function openSave(event:Event):void{
				this.saveD307.enabled =true;
			}
			private function changeLicen():void
			{
				var id:String = this.d307_19.selectedItem.data;
				if(this.d307_06_12.text == "" && this.d307_08_14.text == "" && this.d307_11_.text == "")
				{
					if(id == "1")
					{
						this.d307_18.text = this.d307_12.text;
						this.d307_21.text = this.d307_14.text;
					}else if(id == "2")
					{
						this.d307_18.text = this.d307_06.text;
						this.d307_21.text = this.d307_08.text;
					}else
					{
						this.d307_18.text = "";
						this.d307_21.text = "";
					}
				}else
				{
					if(this.father.selected == true && id == "1")
					{
						this.d307_18.text = this.d307_06_12.text;
						this.d307_21.text = this.d307_08_14.text;
					}else if(this.mother.selected == true && id == "2")
					{
						this.d307_18.text = this.d307_06_12.text;
						this.d307_21.text = this.d307_08_14.text;
					}else
					{
						this.d307_18.text = "";
						this.d307_21.text = "";
					}
				}
			}
			
			//读卡(单亲)
			protected function readCardClickHandler(event:MouseEvent):void
			{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(this.father.selected && sex=="女"){
							Alert.show("请读父亲信息！","系统提示");
						}else if(this.mother.selected && sex=="男"){
							Alert.show("请读母亲信息！","系统提示"); 
						}else{
							this.d307_06_12.text = array[0];//姓名
							this.d307_08_14.text = array[5];//身份证号
							this.d307_11_.text = array[4];//家庭地址
							var nation:String = array[2] + "族";
							var nationDataProvider:ArrayCollection = ArrayCollection(this.d307_10_16.dataProvider);
							var nationIndex:int = getNationDropDownListSelectedIndex(nationDataProvider,nation);
							this.d307_10_16.selectedIndex = nationIndex;
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			//读卡(母亲)
			protected function readCard_mother(event:MouseEvent):void
			{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(sex=="女"){
							this.d307_06.text = array[0];//姓名
							this.d307_08.text = array[5];//身份证号
							this.d307_11.text = array[4];//家庭地址
							var nation:String = array[2] + "族";
							var nationDataProvider:ArrayCollection = ArrayCollection(this.d307_10.dataProvider);
							var nationIndex:int = getNationDropDownListSelectedIndex(nationDataProvider,nation);
							this.d307_10.selectedIndex = nationIndex;
						}else{
							Alert.show("请读母亲信息！","系统提示");
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			//读卡获取民族信息
			private function getNationDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.label == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			//读卡(父亲)
			protected function readCard_father(event:MouseEvent):void
			{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(sex=="男"){
							this.d307_12.text = array[0];//姓名
							this.d307_14.text = array[5];//身份证号
							this.d307_17.text = array[4];//家庭地址
							var nation:String = array[2] + "族";//民族
							var nationDataProvider:ArrayCollection = ArrayCollection(this.d307_16.dataProvider);
							var nationIndex:int = getNationDropDownListSelectedIndex(nationDataProvider,nation);
							this.d307_16.selectedIndex = nationIndex;
						}else{
							Alert.show("请读父亲信息！","系统提示");
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			private function guide25():void{
				if(this.D307_25_1.selected){
					array[2501] ="1";
				}else if(this.D307_25_2.selected){
					array[2501] ="0";
				}else{
					array[2501] ="";
				}
				this.d307.d30725 =array[2501];
			}
			private function guide26():void{
				if(this.D307_26_1.selected){
					array[2601] ="1";
				}else if(this.D307_26_2.selected){
					array[2601] ="0";
				}else{
					array[2601] ="";
				}
				this.d307.d30726 =array[2601];
			}
			private function guide27():void{
				if(this.D307_27_1.selected){
					array[2701] ="1";
				}else if(this.D307_27_2.selected){
					array[2701] ="0";
				}else{
					array[2701] ="";
				}
				this.d307.d30727 =array[2701];
			}
			private function guide28():void{
				if(this.D307_28_1.selected){
					array[2801] ="1";
				}else if(this.D307_28_2.selected){
					array[2801] ="0";
				}else{
					array[2801] ="";
				}
				this.d307.d30728 =array[2801];
			}
			private function guide29():void{
				if(this.D307_29_1.selected){
					array[2901] ="1";
				}else if(this.D307_29_2.selected){
					array[2901] ="0";
				}else{
					array[2901] ="";
				}
				this.d307.d30729 =array[2901];
			}
			private function guide30():void{
				if(this.D307_30_1.selected){
					array[3001] ="1";
				}else if(this.D307_30_2.selected){
					array[3001] ="0";
				}else{
					array[3001] ="";
				}
				this.d307.d30730 =array[3001];
			}
			private function checkParent(event:MouseEvent):void{
				if(this.father.selected){
					this.d307_06_12.text =this.d307_12.text;
					this.d307_07_13.selectedIndex =this.d307_13.selectedIndex; 
					this.d307_08_14.text =this.d307_14.text;
					this.d307_11_.text =this.d307_17.text;
					this.d307_09_15.selectedIndex =this.d307_15.selectedIndex;
					this.d307_10_16.selectedIndex =this.d307_16.selectedIndex;
				}else if(this.mother.selected){
					this.d307_06_12.text =this.d307_06.text;
					this.d307_07_13.selectedIndex =this.d307_07.selectedIndex; 
					this.d307_08_14.text =this.d307_08.text;
					this.d307_11_.text =this.d307_11.text;
					this.d307_09_15.selectedIndex =this.d307_09.selectedIndex;
					this.d307_10_16.selectedIndex =this.d307_10.selectedIndex;
				}else {
					this.d307_06_12.text ="";
					this.d307_07_13.selectedIndex =0;
					this.d307_08_14.text ="";
					this.d307_11_.text ="";
					this.d307_09_15.selectedIndex =0;
					this.d307_10_16.selectedIndex =0;
				}
			}
			//与新生儿关系（读卡）
			private function readCard_A():void{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						this.d307_18.text = array[0];//领证人姓名
						this.d307_21.text = array[5];//领证人身份证号
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
		]]>
	</fx:Script>
	<s:Scroller x="11" y="4" width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup paddingBottom="20" paddingLeft="10" paddingRight="10" paddingTop="10">
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1100">
				<s:NavigatorContent  label="分娩信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="姓　　名"/><s:TextInput id="d307_02"/>
									<s:Label text="*" styleName="must"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="性　　别"/><s:DropDownList id="d307_03" width="130"/>
									<s:Label text="*" styleName="must"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="出生日期"/>
									<mx:DateField yearNavigationEnabled="true" id="d307_04" width="110" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD"/>
									<s:TextInput id="hour" maxChars="2" restrict="0-9" width="20"/><s:Label text="时"/>
									<s:TextInput id="minute" maxChars="2" restrict="0-9" width="20"/><s:Label text="分"/>
									<s:Label text="*" styleName="must"/>
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow>
								<mx:GridItem colSpan="12">
									<s:Label text="出生地址"/>
									<component:AreaComboBoxCommon id="d307_05" width="100%" paddingBottom="10" paddingTop="5" horizontalAlign="left"/>
									<s:Label text="*" styleName="must"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1100" id="tab">
				<s:NavigatorContent label="双亲信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Button label="读卡"  id="duka1" width="60" click="readCard_mother(event)" enabled="false"/>
							<s:Label text="母亲姓名"/><s:TextInput id="d307_06"/>
							<s:Label text="证件类别"/><s:DropDownList id="d307_07"/>
							<s:Label text="证件号码"/><s:TextInput id="d307_08" width="140"/>
							<s:Label text="母亲国籍"/><s:DropDownList id="d307_09" width="120"/>
							<s:Label text="母亲民族"/><s:DropDownList id="d307_10" width="115"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Button label="读卡"  id="duka2" width="60" click="readCard_father(event)" enabled="false"/>
							<s:Label text="父亲姓名"/><s:TextInput id="d307_12"/>
							<s:Label text="证件类别"/><s:DropDownList id="d307_13"/>
							<s:Label text="证件号码"/><s:TextInput id="d307_14" width="140"/>
							<s:Label text="父亲国籍"/><s:DropDownList id="d307_15" width="120"/>
							<s:Label text="父亲民族"/><s:DropDownList id="d307_16" width="115"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="母亲地址"/><s:TextInput id="d307_11" width="300"/>
							<s:Label text="父亲地址"/><s:TextInput id="d307_17" width="300"/>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
				<s:NavigatorContent label="单亲信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:RadioButton label="父亲" id="father" groupName="parent" click="checkParent(event)"/>
							<s:RadioButton label="母亲" id="mother" groupName="parent" click="checkParent(event)"/>  <!--click="guidefm(event)"-->
							<s:RadioButton label="取消选中" id="parents" groupName="parent" click="checkParent(event)"/>
							<s:Button label="读卡"  id="duka3" click="readCardClickHandler(event)" enabled="false"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="姓　　名"/><s:TextInput id="d307_06_12"/>
							<s:Label text="证件类别"/><s:DropDownList id="d307_07_13"/>
							<s:Label text="证件号码"/><s:TextInput id="d307_08_14" width="140"/>
							<s:Label text="国　　籍"/><s:DropDownList id="d307_09_15" width="130"/>
							<s:Label text="民　　族"/><s:DropDownList id="d307_10_16" width="130"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="家庭地址"/><s:TextInput id="d307_11_" width="310"/>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1100">
				<s:NavigatorContent label="领证人提交材料" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="1.亲子鉴定证明（交原件）"/>
							<s:RadioButton id="D307_25_1" groupName="operation25" click="guide25()" /><s:Label text="有"/>
							<s:RadioButton id="D307_25_2" groupName="operation25" click="guide25()"/><s:Label text="无"/>
							
							<s:Label paddingLeft="60" text="2.出生情况说明（交原件）"/>
							<s:RadioButton id="D307_26_1" groupName="operation26" click="guide26()"/><s:Label text="有"/>
							<s:RadioButton id="D307_26_2" groupName="operation26" click="guide26()"/><s:Label text="无"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="3.新生儿母亲的有效身份证证件（验原证，交复印件）"/>
							<s:RadioButton id="D307_27_1" groupName="operation27" click="guide27()"/><s:Label text="有"/>
							<s:RadioButton id="D307_27_2" groupName="operation27" click="guide27()"/><s:Label text="无"/>
							
							<s:Label paddingLeft="60" text="4.新生儿父亲的有效身份证件（验原证，交复印件）"/>
							<s:RadioButton id="D307_28_1" groupName="operation28" click="guide28()"/><s:Label text="有"/>
							<s:RadioButton id="D307_28_2" groupName="operation28" click="guide28()"/><s:Label text="无"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="5.领证人有效身份证件（验原证，交复印件）"/>
							<s:RadioButton id="D307_29_1" groupName="operation29" click="guide29()"/><s:Label text="有"/>
							<s:RadioButton id="D307_29_2" groupName="operation29" click="guide29()"/><s:Label text="无"/>
							
							<s:Label text="6.证明领证人监护关系身份的相关文件（验原件，交复印件）" paddingLeft="60"/>
							<s:RadioButton id="D307_30_1" groupName="operation30" click="guide30()"/><s:Label text="有"/>
							<s:RadioButton id="D307_30_2" groupName="operation30" click="guide30()"/><s:Label text="无"/>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>  
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1100">
				<s:NavigatorContent label="领证人信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="领证人"/><s:TextInput id="d307_18"/><s:Label text="*" styleName="must"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="与新生儿关系"/><s:DropDownList id="d307_19" change="changeLicen()"/><s:Label text="*" styleName="must"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="证件类别"/><s:DropDownList id="d307_20"/><s:Label text="*" styleName="must"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="证件号码"/><s:TextInput id="d307_21" width="140"/><s:Label text="*" styleName="must"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="联系方式"/><s:TextInput id="d307_22" maxChars="12" restrict="0-9" />
								</mx:GridItem>
								<mx:GridItem>
									<s:Button id="btnRead" label="读卡" click="readCard_A()" enabled="false"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1100">
				<s:NavigatorContent label="签发信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="签证机构"/><s:DropDownList id="d307_24" width="130"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="签发时间"/>
									<mx:DateField yearNavigationEnabled="true" id="d307_23" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD"/>
									<s:Label text="*" styleName="must"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<s:HGroup contentBackgroundColor="#FF0000" verticalAlign="middle" horizontalAlign="right" paddingBottom="20" paddingTop="10" paddingLeft="10" width="85%" paddingRight="20" height="30">
				<s:Button label="确定" click="validate1()" id="saveD307"/>
			</s:HGroup>
		</s:VGroup>
	</s:Scroller>
</s:Module>

