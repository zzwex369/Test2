<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		  xmlns:local="com.xyw.sys.custom.component.*"
		  creationComplete="moduleCreationComplete()" xmlns:component="com.xyw.sys.custom.component.*">
	<fx:Declarations>
		<s:RemoteObject id="birthService" destination="birthService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="validateStockCertiticate" result="validateStockCertiticateHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="d306Service" destination="d306Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryVD306" result="queryVD306Handler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		mx|GridItem
		{
			horizontalAlign:right;
			verticalAlign:middle;
		}
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|TextInput
		{
			fontFamily:微软雅黑;
		}
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.module.csyxzm.model.D301;
			import com.xyw.module.csyxzm.model.D306Request;
			import com.xyw.module.csyxzm.model.QueryBirthRequest;
			import com.xyw.module.csyxzm.model.QueryBirthResponse;
			import com.xyw.module.csyxzm.model.VBirthInfo;
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.ComboBoxDataResponse;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			import mx.binding.utils.ChangeWatcher;
			
			import spark.formatters.DateTimeFormatter;
			
			private var comboBoxDataRequest:ComboBoxDataRequest;
			private var d301:D301;
			private var vBrithInfo:VBirthInfo;
			[Bindable]
			private var d301_50data:ArrayCollection = new ArrayCollection([
				{label:"选择",data:0},
				{label:"变更姓名",data:6},
				{label:"无效证件",data:8},
				{label:"变更父母信息",data:7}
			]);
			[Bindable]
			private var sexData:ArrayCollection = new ArrayCollection([
				{label:"选择",data:0},
				{label:"男",data:1},
				{label:"女",data:2},
				{label:"未知",data:3}
			]);
			public var systemUser:SystemUser = null;
			public var vd306:Object = null;
			
			[Bindable]
			public var gradeVal:String="0"; //单双亲  父亲1  母亲2  双亲0
			[Bindable]
			private var birthVal:int=1;  //出生日期   1显示，2不显示
			[Bindable]
			private var phoneVal:int=1;  //联系电话   1显示，2不显示
			[Bindable]
			private var areaVal:int=1; //家庭地址 户口地址    1显示，2不显示
			[Bindable]
			private var cardVal:int=2; //结婚证编号 亲子鉴定证明编号    1显示，2不显示
			[Bindable]
			private var printVal:String="1"; //打印状态  1换发   8变更父母信息换发
			public var loadDataArr:Array=[[[""],[""],[""],[""],[""],[""]],[[""],[""],[""],[""],[""],[""],],[[""]],[[""],[""]],[[""],[""]],[[""]],[[""]],[[""]],[[""]],[[""]]];
			
			
			private function moduleCreationComplete():void
			{
				this.systemUser = this.parentApplication.systemUser;
				if(this.systemUser.duka == "1"){
					this.duka3.enabled = true;  				}
				this.initializeComboBox();//初始化数据
				this.d301_28.text = DateField.dateToString(new Date, "YYYY-MM-DD");
				this.d301_50.addEventListener(FlexEvent.CHANGING,changHufa);
				
				this.parents3.opensave =opensave;
			}
			
			private function opensave():void{
				this.validateRenewBirth.enabled = true;
			}
			private function changHufa(event:Event):void{
				this.d301_02.text = "";//姓名
				this.d301_03.selectedIndex = 0;
				this.d301_04.text = "";//出生日期
				this.d301_05.text = "";//出生地
				this.d301_08.value =50;
				this.d301_07.value =40;
				this.d301_47.text =  "";//孕周天数
				this.d301_04.text = "";
				this.d301_09.selectedIndex = 0;
				this.d301_10.text ="";
				this.d301_29.value =3000;
				this.d301_25.text = "";//接生员
				this.d301_31.text = "";//所属地区
				this.d301_32.text = "";//住院病历号
				this.d301_33.text = "";//接生人填表日期
				
				this.d301_36.text = "";//领证人
				this.d301_37.selectedIndex = 0;
				this.d301_38.selectedIndex = this.getDropDownListSelectedIndex(ArrayCollection(this.d301_38.dataProvider),"9");
				this.d301_39.text = "";//领证人证件号码
				this.d301_40.text = "";//领证人填表日期
				
				this.d301_22.selectedIndex = 0;
				this.d301_23.text ="";
				this.d301_23.enabled = false;
				this.d301_24.selectedIndex = 0;
				this.d301_26.selectedIndex = this.getDropDownListSelectedIndex(ArrayCollection(this.d301_26.dataProvider),this.systemUser.institutionCode);
				this.d301_27.text = "";//签发人
	
				this.gradeVal ="0";
				var printVal_:String ="1";
				if(this.d301_50.selectedItem.data =="6"){  //变更姓名
					this.d301_02.enabled=true;
				}else if(this.d301_50.selectedItem.data =="7"){  //变更父母信息
					printVal_="8";
					this.d301_02.enabled=false;
				}else{
					this.d301_02.enabled=false;
				}
				this.printVal = printVal_;
				parents3.defaultCheckParent(gradeVal,null,printVal);
			}
			
			private function initializeComboBox():void
			{
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_01";
				comboBoxDataRequest.sql = "select * from S301_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_02";
				comboBoxDataRequest.sql = "select * from S301_02";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_05";
				comboBoxDataRequest.sql = "select * from S301_05";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select t.d101_01, t.d101_02 from D101 t";
				comboBoxDataRequest.flag = "D101";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_06";
				comboBoxDataRequest.flag = "S301_06";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_07";
				comboBoxDataRequest.flag = "S301_07";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = false;
				comboBoxDataRequest.sql = "select t.s_01,t.s_02 from S301_10 t where t.S_05='0' and t.S_03 ="+this.systemUser.institutionCode;
				comboBoxDataRequest.flag = "S301_10";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				var systemCode:String = this.systemUser.institutionCode;
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = false;
				comboBoxDataRequest.sql = "select * from S301_09 t where t.S_03='"+systemCode+"'";
				comboBoxDataRequest.flag = "S301_09";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
			}
			
			/*-----------------返回数据放到赋值到下拉菜单-----------------*/
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object =  event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				
				if(flag == "S301_02")
				{
					this.d301_09.dataProvider = comboBoxDataList;
					this.d301_09.selectedIndex = 0;
				}else if(flag == "S301_05")
				{
					this.d301_22.dataProvider = comboBoxDataList;
					this.d301_22.selectedIndex = 0;
				}else if(flag == "D101")
				{
					var index:int = this.getDropDownListSelectedIndex(comboBoxDataList, this.systemUser.institutionCode);
					this.d301_24.dataProvider = comboBoxDataList;
					this.d301_26.dataProvider = comboBoxDataList;
					this.d301_24.selectedIndex = 0;
					this.d301_26.selectedIndex = index;
				}else if(flag == "S301_06")
				{
					this.d301_38.dataProvider = comboBoxDataList;
					this.d301_38.selectedIndex = 1;
				}else if(flag == "S301_07")
				{
					this.d301_37.dataProvider = comboBoxDataList;
					this.d301_37.selectedIndex = 0;
					
				}else if(flag == "S301_10")
				{
					this.d301_27.dataProvider = comboBoxDataList;
					this.d301_27.selectedIndex = 0;
					
				}else if(flag == "S301_09"){
					this.d301_25.dataProvider = comboBoxDataList;
					this.d301_25.selectedIndex = 0;
					
				}
				this.d301_50.selectedIndex = 0;
				this.d301_03.selectedIndex = 0;
			}
			
			
			/*-----------------默认国籍 中国---------------------*/
			private function getCountrySelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "CHN") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			/*-----------------默认民族  汉族---------------------*/
			private function getVolkSelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "01") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			/*-----------验证婴儿信息-------------*/
			private function validateBirth():void
			{
				var d306Request:D306Request = new D306Request();
				if(StringUtil.trim(this.d301_02_.text) == "")
				{
					Alert.show("请输入婴儿姓名","系统提示");
					return;
				}else if(StringUtil.trim(this.d301_10_.text) == "")
				{
					Alert.show("请输入婴儿出生证号","系统提示");
					return;
				}
				d306Request.d30102 = StringUtil.trim(this.d301_02_.text);
				d306Request.d30603 = StringUtil.trim(this.d301_10_.text);
				d306Request.d30613 =this.d301_50.selectedItem.data;
				this.d306Service.queryVD306(d306Request);
			}
			
			/*--------------验证婴儿信息返回----------------*/
			private function queryVD306Handler(event:ResultEvent):void
			{
				var d306Response:Object = event.result;
				if(d306Response.state)
				{
					vd306 = d306Response.vd306;
					this.d301_02.text = vd306.d30102;//姓名
					
					//性别  s301_01
					var sexDataProvider:ArrayCollection = ArrayCollection(this.d301_03.dataProvider);
					var d30103Index:int = this.getDropDownListSelectedIndex(sexDataProvider,vd306.d30103);
					this.d301_03.selectedIndex = d30103Index;
					this.d301_04.text = vd306.d30104;//出生日期
					this.d301_05.text = vd306.d30105Zh;//出生地
					this.d301_07.value = vd306.d30107;//出生孕周
					this.d301_47.text = vd306.d30147;//孕周天数
					this.d301_08.value = vd306.d30108;//身长
					this.d301_09.selectedIndex = Number(vd306.d30109);//健康状况 s301_02
					//this.d302_10.text = vd301.d30110;//出生证号
					
					this.gradeVal =vd306.d30167;
					if(gradeVal==null){
						gradeVal="0";
					}
					var printVal_:String ="1";
					if(this.d301_50.selectedItem.data =="7"){  //变更父母信息
						printVal_="8";
					}
					this.printVal = printVal_;
					loadDataArr=putloadDataArr_(vd306);
					parents3.defaultCheckParent(gradeVal,loadDataArr,printVal);
					
					//出生地点分类  s301_05
					var birthAddressDataProvider:ArrayCollection = ArrayCollection(this.d301_22.dataProvider);
					var d30222Index:int = this.getDropDownListSelectedIndex(birthAddressDataProvider,vd306.d30122);
					this.d301_22.selectedIndex = d30222Index;
					
					if(vd306.d30123 != null)
					{
						this.d301_23.text = vd306.d30123;//出生地其他
						this.d301_23.enabled = true;
					}else
					{
						this.d301_23.enabled = false;
					}
					
					//接生机构
					var birthDeliveryDataProvider:ArrayCollection = ArrayCollection(this.d301_24.dataProvider);
					var d30224Index:int = this.getDropDownListSelectedIndex(birthDeliveryDataProvider,vd306.d30124);
					this.d301_24.selectedIndex = d30224Index;
					
					this.d301_25.text = vd306.d30125;//接生员
					
					this.d301_27.text = vd306.d30127;//签发人
					this.d301_29.value = vd306.d30129;//体重
					this.d301_31.text = vd306.d30131Zh;//所属地区
					this.d301_32.text = vd306.d30132;//住院病历号
					this.d301_33.text = vd306.d30133;//接生人填表日期
					
					this.d301_36.text = vd306.d30136;//领证人
					
					//与新生儿关系
					var relationDataProvider:ArrayCollection = ArrayCollection(this.d301_37.dataProvider);
					var d30137Index:int = this.getDropDownListSelectedIndex(relationDataProvider,vd306.d30137);
					this.d301_37.selectedIndex = d30137Index;
					
					//领证人有效证件类别
					var licensTypeDataProvider:ArrayCollection = ArrayCollection(this.d301_38.dataProvider);
					var d30138Index:int = this.getDropDownListSelectedIndex(licensTypeDataProvider,vd306.d30138);
					this.d301_38.selectedIndex = d30138Index;
					
					this.d301_39.text = vd306.d30139;//领证人证件号码
					this.d301_40.text = vd306.d30140;//领证人填表日期
					
					this.validateRenewBirth.enabled = true;
					//开始监视领证人text
					//changeLicen(); 
				}else
				{
					Alert.show(d306Response.errorMessage.toString(),"系统提示");
				}
			}
			
			private function putloadDataArr_(vd306:Object):Array{
				loadDataArr[0][0] =vd306.d30111;  //母亲姓名
				loadDataArr[0][1] =vd306.d30134;  //证件类别
				loadDataArr[0][2] =vd306.d30112;  //母亲证件号码
				
				loadDataArr[0][3] =vd306.d30115;  //母亲民族
				loadDataArr[0][4] =vd306.d30121;  //母亲身份证地址
				loadDataArr[0][5] =vd306.d30114;  //母亲国籍
				
				
				loadDataArr[1][0] =vd306.d30116;  //父亲姓名
				loadDataArr[1][1] =vd306.d30135;  //证件类别
				loadDataArr[1][2] =vd306.d30117;  //父亲证件号码
				
				loadDataArr[1][3] =vd306.d30120;  //父亲民族
				loadDataArr[1][4] =vd306.d30148;  //父亲身份证地址
				loadDataArr[1][5] =vd306.d30119;  //父亲国籍
				
				loadDataArr[2][0] =vd306.d30143;  //电话号码
				
				loadDataArr[3][0] =vd306.d30160;  //母亲户口地址
				loadDataArr[3][1] =vd306.d30163;  //母亲家庭地址
				
				loadDataArr[4][0] =vd306.d30161;  //父亲户口地址
				loadDataArr[4][1] =vd306.d30164;  //父亲家庭地址
				
				loadDataArr[5][0] =vd306.d30153;  //结婚证编号
				
				loadDataArr[6][0] =vd306.d30154;  //亲子鉴定证明编号
				
				loadDataArr[7][0] =vd306.d30113;   //母亲出生日期
				
				loadDataArr[8][0] =vd306.d30118;   //父亲出生日期
				
				loadDataArr[9][0] =""; //单双亲  父亲1    母亲2 
				
				return loadDataArr;
			}
			
			private function getDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			private function validateRenewBirthCertificate():void
			{
				
				var patternFather:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
				var patternMonther:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
				if(StringUtil.trim(this.d301_02.text) == "")
				{
					Alert.show("请输入婴儿姓名!","系统提示");
					return;
				}else if(this.d301_03.selectedItem.data == 0)
				{
					Alert.show("请选择性别!","系统提示");
					return;
				}else if(StringUtil.trim(this.d301_10.text) == "")
				{
					Alert.show("请输入出生证号!","系统提示");
					return;
				}else if(StringUtil.trim(this.d301_10.text) == StringUtil.trim(this.d301_10_.text))
				{
					Alert.show("新出生证号不能与原出生证号相同!","系统提示");
					return;
				}
				if(this.d301_50.selectedItem.data == 0)
				{
					Alert.show("请选择换发原因","系统提示");
					return;
				}
				
				if(parents3.verification()){
					return;
				}
				
				var queryBirthRequest:QueryBirthRequest = new QueryBirthRequest();
				queryBirthRequest.d301_10 = this.d301_10.text;
				queryBirthRequest.d301_26 = this.systemUser.institutionCode;
				
				this.birthService.validateStockCertiticate(queryBirthRequest);
			}
			
			private function validateStockCertiticateHandler(event:ResultEvent):void
			{
				var queryBirthResponse:Object = event.result;
				if(!queryBirthResponse.state)
				{
					Alert.show(queryBirthResponse.errorMessage,"系统提示");
					return;
				}
				this.renewBirthValidateCertificate();
			}
			private function renewBirthValidateCertificate():void
			{
				this.d301 = new D301();
				var window:Confirmation = new Confirmation();
				window.owner = this;
				this.vBrithInfo = new VBirthInfo();
				this.d301.d30102 = StringUtil.trim(this.d301_02.text);//姓名
				this.d301.d30103 = this.d301_03.selectedItem.data;
				this.d301.d30104 = DateFormatter.parseDateString(this.vd306.d30104);
				this.d301.d30105 = this.vd306.d30105;
				this.d301.d30106 =this.vd306.d30106;
				this.d301.d30107 = this.vd306.d30107;//出生孕周
				this.d301.d30106 =this.vd306.d30106;
				this.d301.d30108 = this.vd306.d30108;//身长
				this.d301.d30109 = this.vd306.d30109//健康状况 s301_02
				this.d301.d30110 = StringUtil.trim(this.d301_10.text);//出生证号
				
				var saveDataArr:Array =parents3.saveRecord();
				this.d301.d30111 =equVaule(saveDataArr[0][0]); //母亲姓名
				this.d301.d30134 =equVaule(saveDataArr[0][1]); //母亲证件类别
				this.d301.d30112 =equVaule(saveDataArr[0][2]); //母亲证件号码
				if(saveDataArr[7][0] != null &&  saveDataArr[7][0] !="" ){
					this.d301.d30113 =DateField.stringToDate(saveDataArr[7][0],"YYYY-MM-DD"); //母亲出生日期
				}else{
					this.d301.d30113 =null;
				}
				this.d301.d30115 =equVaule(saveDataArr[0][3]); //母亲民族
				this.d301.d30121 =equVaule(saveDataArr[0][4]); //母亲身份证地址
				this.d301.d30114 =equVaule(saveDataArr[0][5]); //母亲国籍
				
				
				this.d301.d30116 =equVaule(saveDataArr[1][0]); //父亲姓名
				this.d301.d30135 =equVaule(saveDataArr[1][1]); //父亲证件类别
				this.d301.d30117 =equVaule(saveDataArr[1][2]); //父亲证件号码
				if(saveDataArr[8][0] != null && saveDataArr[8][0] !="" ){
					this.d301.d30118 =DateField.stringToDate(saveDataArr[8][0],"YYYY-MM-DD"); //父亲出生日期
				}else{
					this.d301.d30118 =null;
				}
				this.d301.d30120 =equVaule(saveDataArr[1][3]); //父亲民族
				this.d301.d30148 =equVaule(saveDataArr[1][4]); //父亲身份证地址
				this.d301.d30119 =equVaule(saveDataArr[1][5]); //父亲国籍
				
				this.d301.d30143 =equVaule(saveDataArr[2][0]); //电话号码;
				
				this.d301.d30160 =equVaule(saveDataArr[3][0]);  //母亲户口地址
				this.d301.d30163 =equVaule(saveDataArr[3][1]);  //母亲家庭地址
				
				this.d301.d30161 =equVaule(saveDataArr[4][0]);  //父亲户口地址
				this.d301.d30164 =equVaule(saveDataArr[4][1]);  //父亲家庭地址
				
				var fm:String="";
				if(saveDataArr[9][0] !=null && saveDataArr[9][0]!="0"){
					fm =saveDataArr[9][0];
				}
				this.d301.d30167=fm;
				
					
				this.d301.d30122 = this.vd306.d30122;//出生地点分类  s301_05
				this.d301.d30123 = this.vd306.d30123;//出生地其他
				this.d301.d30124 = this.vd306.d30124;//接生机构
				this.d301.d30125 = this.vd306.d30125;//接生员
				this.d301.d30126 = this.d301_26.selectedItem.data;  //this.vd306.d30126;//签证机构
				this.d301.d30127 = this.d301_27.text; //this.vd306.d30127;//签发人
				this.d301.d30128 = DateFormatter.parseDateString(StringUtil.trim(this.d301_28.text));//签发时间
				this.d301.d30129 = this.vd306.d30129;//体重
				this.d301.d30130 = "1";//this.vd306.d30130;//签发机构类型
				this.d301.d30131 = this.vd306.d30131;
				this.d301.d30132 = this.vd306.d30132;//住院病历号
				this.d301.d30133 = DateFormatter.parseDateString(this.vd306.d30133);//接生人填表日期
				this.d301.d30136 = StringUtil.trim(this.d301_36.text); //this.vd306.d30136;//领证人
				this.d301.d30137 = this.d301_37.selectedItem.data; //this.vd306.d30137;//与新生儿关系
				this.d301.d30138 = this.d301_38.selectedItem.data; //this.vd306.d30138;//领证人有效证件类别
				this.d301.d30139 = StringUtil.trim(this.d301_39.text); //this.vd306.d30139;//领证人证件号码
				this.d301.d30140 = DateField.stringToDate(this.d301_40.text, "YYYY-MM-DD"); //DateFormatter.parseDateString(this.vd306.d30140);//领证人填表日期
				this.d301.d30142 = "1";//换发类型  0 首发        1换发        2补发
				this.d301.d30150 = this.d301_50.selectedItem.data;
				//this.d302.d30244 = this.d302_44.text;
				
				this.d301.d30147 = StringUtil.trim(this.d301_47.text);//孕周天
				this.d301.d30152 = this.vd306.d30110;//首签出生证号
				this.d301.d30157 = this.vd306.d30601;
				this.d301.d30153 = this.vd306.d30153;
				this.d301.d30154 = this.vd306.d30154;
				this.d301.d30155 = this.vd306.d30155;
				
				this.validateRenewBirth.enabled =false;
				
				window.d301_34_Zh =equVaule(saveDataArr[10][0]);  //母亲有效证件类别  名称
				window.d301_14_Zh =equVaule(saveDataArr[10][1]);  //母亲国籍  名称
				window.d301_15_Zh =equVaule(saveDataArr[10][2]);  //母亲民族  名称
				window.d301_21_Zh =equVaule(saveDataArr[0][4]);
				
				window.d301_35_Zh =equVaule(saveDataArr[11][0]);  //父亲有效证件类别  名称
				window.d301_19_Zh =equVaule(saveDataArr[11][1]);  //父亲国籍 名称
				window.d301_20_Zh =equVaule(saveDataArr[11][2]);  //父亲民族 名称
				window.d301_48_Zh =equVaule(saveDataArr[1][4]);
				
				window.d301 = this.d301;
				window.vd306 = this.vd306;
				window.d301_02_ = StringUtil.trim(this.d301_02.text);
				window.d301_03_Zh = this.d301_03.selectedItem.label;
				window.d301_10_ = StringUtil.trim(this.d301_10.text);
				window.d301_50_Zh = this.d301_50.selectedItem.label;
				window.d301_26_Zh = this.d301_26.selectedItem.label;
				
				window.d301_37_Zh = this.d301_37.selectedItem.label;
				window.d301_38_Zh = this.d301_38.selectedItem.label;
				window.d301_40_Zh = StringUtil.trim(this.d301_40.text);
				
				PopUpManager.addPopUp(window,this);
				var x:Number = (this.parentApplication.mdiCanvas.width - window.width) / 2;
				var y:Number = (this.parentApplication.mdiCanvas.height - window.height) / 2;
				window.move(x, y);
			}
			
			private function equVaule(value:String):String{
				if(value !=null && value !="null")
					return value;
				return "";
			}
			
			private function renewBirthCertificate():void
			{
				this.birthService.renewBirthCertificate(d301);
			}
			
			/*----------监控出生地点分类-------------*/
			private function changeBrith():void
			{
				if(this.d301_22.selectedItem.data == 4)
				{
					this.d301_23.enabled = true;
				}else
				{
					this.d301_23.text = "";
					this.d301_23.enabled = false;
				}
			}
			
			private function changeLicen():void
			{
				var d30138DataProvider:ArrayCollection = ArrayCollection(this.d301_38.dataProvider);
				var saveDataArr:Array =parents3.saveRecord();
				
				var id:String = this.d301_37.selectedItem.data;
				if(id == "1")  //领证人父亲
				{
					this.d301_36.text =equVaule(saveDataArr[1][0]);
					this.d301_39.text =equVaule(saveDataArr[1][2]);
					var d30138Index:int =this.getDropDownListSelectedIndex(d30138DataProvider,equVaule(saveDataArr[1][1]));
					if(d30138Index != 0){
						this.d301_38.selectedIndex =d30138Index;
					}
				}else if(id == "2")   //领证人母亲
				{
					this.d301_36.text =equVaule(saveDataArr[0][0]);
					this.d301_39.text =equVaule(saveDataArr[0][2]);
					var d30138Index_:int =this.getDropDownListSelectedIndex(d30138DataProvider,equVaule(saveDataArr[0][1]));
					if(d30138Index_ != 0){
						this.d301_38.selectedIndex =d30138Index_;
					}
				}else
				{
					this.d301_36.text = "";
					this.d301_39.text = "";
					this.d301_38.selectedIndex = 1;
				}
			}
			
			//与新生儿关系（读卡）
			private function readCard_A(event:MouseEvent):void{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						this.d301_36.text = array[0];//领证人姓名
						this.d301_39.text = array[5];//领证人身份证号
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
		]]>
	</fx:Script>
	<s:Scroller width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent  label="查询婴儿信息" width="1140">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem >
									<s:Label text="换发原因"/>
									<s:DropDownList id="d301_50" dataProvider="{d301_50data}" />
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="姓名"/><s:TextInput id="d301_02_"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="原出生证号"/><s:TextInput id="d301_10_" enter="validateBirth()"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Button label="查询" id="loadBirth" click="validateBirth()"/><s:Label text="请先查询婴儿信息" color="#FF3030"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent  label="婴儿信息" width="1140">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="姓　　名"/><s:TextInput id="d301_02" width="100"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="性　　　别"/><s:DropDownList id="d301_03" dataProvider="{sexData}" width="130"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="身长"/><s:NumericStepper enabled="false" minimum="8" stepSize="0.1" maximum="100" value="50" id="d301_08" width="60"/><s:Label text="cm"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="出生孕周"/><s:NumericStepper id="d301_07" enabled="false" value="40" maximum="70" minimum="20" width="60"/><s:Label text="周"/>
									<s:TextInput id="d301_47" width="20" text="0" restrict="0-7" enabled="false"/><s:Label text="天"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="病历号"/><s:TextInput id="d301_32" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="出生日期"/>
									<mx:TextInput id="d301_04" enabled="false"/>
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="健康状况"/><s:DropDownList id="d301_09" width="100" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="新出生证号"/><s:TextInput id="d301_10"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="体重"/><s:NumericStepper enabled="false" minimum="1" stepSize="0.1" maximum="10000" value="3000" id="d301_29" width="60"/><s:Label text="g"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="填表日期"/>
									<s:TextInput id="d301_33" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="接生员"/><component:FindSelectedItemComboBox id="d301_25" editable="true" width="125"/>
								</mx:GridItem>
								<mx:GridItem>
									
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow>
								<mx:GridItem colSpan="12" horizontalAlign="left">
									<s:Label text="出生地址"/>
									<s:TextInput id="d301_05" width="335" enabled="false"/>
									<s:Label text="所属地区"/>
									<s:TextInput id="d301_31" width="335" enabled="false"/>
									<!--<s:Label text="其它原因"/>
									<s:TextInput id="d302_44" enabled="false"/>-->
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" id="tab">
				<s:NavigatorContent label="单双亲信息" width="1140">
					<component:parents3 id="parents3" gradeVal="{gradeVal}" birthVal="{birthVal}" phoneVal="{phoneVal}" areaVal="{areaVal}" cardVal="{cardVal}" printVal="{printVal}" duka="{this.parentApplication.systemUser.duka}" fumuDuka="{this.parentApplication.systemUser.fumuDuka}" />
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent label="领证人信息" width="1140">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="领证人"/><s:TextInput id="d301_36" />
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="与新生儿关系"/><s:DropDownList id="d301_37" change="changeLicen()"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="证件类别"/><s:DropDownList id="d301_38" />
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="证件号码"/><s:TextInput id="d301_39" width="140" />
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="填表日期"/>
									<s:TextInput id="d301_40" />
								</mx:GridItem>
								<mx:GridItem>
									<s:Button label="读卡" id="duka3" click="readCard_A(event)" enabled="false"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent label="签发信息" width="1140">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="出生地点分类"/><s:DropDownList enabled="false" id="d301_22" width="110" change="changeBrith()"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="出生地其他"/><s:TextInput id="d301_23" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="接生机构"/><s:DropDownList id="d301_24" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="签证机构"/><s:DropDownList id="d301_26" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem  width="100%">
									<mx:FormItem label="签发人" required="false" width="100%">
										<local:FindSelectedItemComboBox id="d301_27" editable="true"  width="122">
										</local:FindSelectedItemComboBox>
									</mx:FormItem>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="签发时间"/>
									<s:TextInput id="d301_28" width="120" enabled="false"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<s:HGroup contentBackgroundColor="#FF0000" verticalAlign="middle" horizontalAlign="right" paddingBottom="20" paddingTop="10" paddingLeft="10" width="1134" paddingRight="50" height="30">
				<s:Button label="确定" click="validateRenewBirthCertificate()" id="validateRenewBirth" enabled="false"/>
			</s:HGroup>
		</s:VGroup>
	</s:Scroller>
</s:Module>
