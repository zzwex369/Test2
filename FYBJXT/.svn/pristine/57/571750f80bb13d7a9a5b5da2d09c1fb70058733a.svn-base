<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%" height="100%"
		  creationComplete="moduleCreationCompleteHandler(event)"
		  xmlns:component="com.xyw.sys.custom.component.*">
	<fx:Declarations>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)" fault="faultHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="certificateOutRegistService" destination="certificateOutRegistService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="query" result="queryHandler(event)" fault="faultHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;
			cornerRadius:3;
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
			cornerRadius:5;
		}
		s|Label
		{
			fontSize:13;
		}
		s|DataGrid
		{
			borderAlpha:"0.3";
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDataGridSkin");
			alternatingRowColors:"[#FFFFFF,#EEEEEE]";
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.csyxzm.model.D503;
			import com.xyw.module.csyxzm.model.D503Request;
			import com.xyw.module.csyxzm.model.D503Response;
			import com.xyw.module.csyxzm.model.VD503;
			import com.xyw.sys.constant.SystemConstant;
			import com.xyw.sys.event.RefreshParentWindowDataEvent;
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.ComboBoxDataResponse;
			import com.xyw.sys.model.SessionException;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.GridSelectionEvent;
			import spark.formatters.DateTimeFormatter;
			
			[Bindable]
			public var vd503:VD503 = null;
			
			public var systemUser:SystemUser = null;
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				this.systemUser = this.parentApplication.systemUser;
				this.initilizeComboBox();
				//this.certificateApplyDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE, onSelectionChange);
			}
			
			private function initilizeComboBox():void
			{
				var comboBoxDataRequest:ComboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select t.d101_01, t.d101_02 from D101 t where t.D101_11 = '" + this.systemUser.institutionCode + "' or t.D101_01 = '" + this.systemUser.institutionCode + "'";
				comboBoxDataRequest.flag = "D101";
				
				this.systemService.getComboBoxData(comboBoxDataRequest);
			}
			
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object = event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				/*if(flag == "D101") {
					this.d503_02.dataProvider = comboBoxDataList;
					if(this.systemUser.areaCode.length != 8) {
						this.d503_02.selectedIndex = 0;
					} else {
						var label:String = this.systemUser.institutionCode;
						var data:String = this.systemUser.institution;
						this.d503_02.dataProvider = new ArrayCollection([{label : data}]);
						this.d503_02.selectedIndex = 0;
						
					}
				}*/
			}
			
			private function getDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			private function query(event:MouseEvent):void
			{
				
				var d503Request:D503Request = new D503Request();
				var d503:D503 = new D503();
				//var comboBoxData:Object = this.d503_02.selectedItem;
				//d503.d50302 = comboBoxData.data;
				d503.d50302 = this.institutionComboBox.getLastSelectedInstitutionCode();
				d503.d50305 = this.d503_05.selectedDate;
				d503.d50305End = this.d503_05End.selectedDate;
				
				if(d503.d50305 != null && d503.d50305End != null) {
					var r:int = ObjectUtil.compare(d503.d50305, d503.d50305End);
					if(r == 1) {
						Alert.show("查询起始时间不能大于终止时间!", "系统提示");
						return;
					}
				}
				
				d503.d50311 = this.d503_11.text;
				
				d503Request.parameterPageindex = 1;
				d503Request.parameterPagesize = 20;
				
				d503Request.institutionCode = this.systemUser.institutionCode;
				
				d503Request.d503 = d503;
				
				this.certificateOutRegistService.query(d503Request);
			}
			
			private function queryHandler(event:ResultEvent):void
			{
				var d503Response:Object = event.result;
				var rowCount:Number = d503Response.rowCount;
				if(d503Response.errorMessage == null) {
					var vd503s:ArrayCollection = d503Response.vd503s;
					this.pagerBar.dataGrid = this.certificateApplyDataGrid;
					this.pagerBar.rowCount = rowCount;
					this.pagerBar.resultData = vd503s;
					this.pagerBar.dataBind();
					this.pagerBar.pagerFunction = pagerFunction;
					if(rowCount > 0) {
						this.pagerBar.enabled = true;
					}
				} else {
					Alert.show(d503Response.errorMessage, "系统提示");
				}
			}
			
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				var d503Request:D503Request = new D503Request();
				var d503:D503 = new D503();
				//var comboBoxData:Object = this.d503_02.selectedItem;
				//d503.d50302 = comboBoxData.data;
				d503.d50302 = this.institutionComboBox.getLastSelectedInstitutionCode();
				d503.d50305 = this.d503_05.selectedDate;
				d503.d50305End = this.d503_05End.selectedDate;
				d503Request.d503 = d503;
				d503Request.parameterPageindex = currentPageIndex;
				d503Request.parameterPagesize = pageSize;
				
				this.certificateOutRegistService.query(d503Request);
			}
			
			public function refresh():void
			{
				var d503Request:D503Request = new D503Request();
				var d503:D503 = new D503();
				//var comboBoxData:Object = this.d503_02.selectedItem;
				//d503.d50302 = comboBoxData.data;
				d503.d50302 = this.institutionComboBox.getLastSelectedInstitutionCode();
				d503.d50311 = this.d503_11.text;
				d503.d50305 = this.d503_05.selectedDate;
				d503.d50305End = this.d503_05End.selectedDate;
				d503Request.parameterPageindex = this.pagerBar.currentPageIndex;
				d503Request.parameterPagesize = 20;
				
				this.certificateOutRegistService.query(d503Request);
				
			}
			
			private function formatDateToStringD50305(vd503:Object, column:GridColumn):String
			{
				var dateTimeFormatter:DateTimeFormatter = new DateTimeFormatter();
				dateTimeFormatter.dateTimePattern = "yyyy-MM-dd";
				var columnDataField:String = column.dataField;
				if("d50305" == columnDataField) {
					var date_D50305:Date = vd503.d50305;
					var date_D50305_Text:String = dateTimeFormatter.format(date_D50305);
					return date_D50305_Text;
				}
				return null;
			}
			
			private function onOperationSuccess(event:RefreshParentWindowDataEvent):void
			{
				this.refresh();
			}
			/*
			private function onSelectionChange(event:GridSelectionEvent):void
			{
				this.vd503 = DataGrid(event.target).selectedItem as VD503;
			}
			*/
			private function faultHandler(event:FaultEvent):void
			{
				var sessionException:SessionException = event.fault.rootCause as SessionException;
				var errorCode:String = "";
				try {
					errorCode = sessionException.errorCode;
					if(errorCode == SystemConstant.LOGIN_USER_INFO_IS_NULL) {
						Alert.show(sessionException.errorMessage, "系统提示");
						return;
					}
				} catch(error:Error) {
					Alert.show("系统异常", "系统提示");
				}
			}
			
		]]>
	</fx:Script>
	<s:VGroup width="100%">
		<mx:TabNavigator  width="100%" chromeColor="#ffffff" creationPolicy="all">
			<s:NavigatorContent  label="出生证出库查询" width="100%">
				<s:VGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:HGroup width="100%" verticalAlign="middle">
						<!--s:Label text="出库单位"/><s:DropDownList id="d503_02" width="200"/-->
						<s:Label text="单位"/><component:InstitutionComboBox id="institutionComboBox"/>
					</s:HGroup>
					
					<s:HGroup width="100%" verticalAlign="middle">
						<s:Label text="时间"/><mx:DateField id="d503_05" yearNavigationEnabled="true" width="120" dayNames='["日","一","二","三","四","五","六"]'
														  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
														  formatString="YYYY-MM-DD"/>
						<s:Label text="至"/><mx:DateField id="d503_05End" yearNavigationEnabled="true" width="120" dayNames='["日","一","二","三","四","五","六"]'
														 monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
														 formatString="YYYY-MM-DD"/>
						<s:Label text="首字母"/><s:TextInput id="d503_11"/>
						<s:Button label="查询" click="query(event)"/>
					</s:HGroup>
				</s:VGroup>	
			</s:NavigatorContent>
		</mx:TabNavigator>
		<s:DataGrid id="certificateApplyDataGrid" editable="true" rowHeight="22" width="100%" height="330" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">  
			<s:columns>
				<s:ArrayList>
					<s:GridColumn headerText="序号" width="40" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
					<s:GridColumn dataField="d50301" headerText="主键" visible="false"/>
					<s:GridColumn dataField="d50302" headerText="出库单位" visible="false"/>
					<s:GridColumn dataField="d50302Zh" headerText="出库单位"/>
					<s:GridColumn dataField="d50303" headerText="出库人"/>
					<s:GridColumn dataField="d50311" headerText="首字母"/>
					<s:GridColumn dataField="d50309" headerText="起始编号"/>
					<s:GridColumn dataField="d50310" headerText="终止编号"/>
					<s:GridColumn dataField="d50304" headerText="出库数量"/>
					<s:GridColumn dataField="d50305" headerText="出库日期" editable="false" labelFunction="formatDateToStringD50305"/>
					<s:GridColumn dataField="d50306" headerText="原库存数" visible="false"/>
					<s:GridColumn dataField="d50307" headerText="申领单位" visible="false"/>
					<s:GridColumn dataField="d50307Zh" headerText="审核单位"/>
					<s:GridColumn dataField="d50308" headerText="审核人"/>
					<s:GridColumn dataField="d50312" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50313" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50314" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50315" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50316" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50317" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50318" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50319" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50320" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50321" headerText="备注" visible="false"/>
					
					<s:GridColumn dataField="d50322" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50323" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50324" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50325" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50326" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50327" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50328" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50329" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50330" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50331" headerText="备注" visible="false"/>
					
					<s:GridColumn dataField="d50332" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50333" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50334" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50335" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50336" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50337" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50338" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50339" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50340" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50341" headerText="备注" visible="false"/>
					
					<s:GridColumn dataField="d50342" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50343" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50344" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50345" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50346" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50347" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50348" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50349" headerText="备注" visible="false"/>
					<s:GridColumn dataField="d50350" headerText="备注" visible="false"/>
					<!--
					<s:GridColumn headerText="详情" width="80" editable="false">
						<s:itemRenderer>
							<fx:Component>
								<s:GridItemRenderer>
									<s:Button label="{column.headerText}" cornerRadius="0" id="lblData" width="100%" height="100%" skinClass="com.xyw.sys.custom.skin.CustomButtonSkin" click="outerDocument.detail(event);"/>
								</s:GridItemRenderer>
							</fx:Component>
						</s:itemRenderer>	
					</s:GridColumn>
					-->
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		<component:PagerBar id="pagerBar" enabled="false"/>
	</s:VGroup>
</s:Module>