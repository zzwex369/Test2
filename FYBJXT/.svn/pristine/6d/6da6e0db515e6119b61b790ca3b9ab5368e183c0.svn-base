<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:component="com.xyw.sys.custom.component.*"
		  xmlns:fngjeda="com.xyw.module.msss.la.fnrxada.*"
		  width="100%" height="100%" creationComplete="init()">
	
	<fx:Declarations>
		<s:RemoteObject id="l401Service" destination="l401Service"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="queryL401" result="queryL401Handler(event)"/>
			<s:method name="delL401" result="delL401Handler(event)"/>			
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.msss.la.model.L401;
			import com.xyw.module.msss.la.model.L401Request;
			import com.xyw.module.msss.la.model.VL401;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.events.GridSelectionEvent;
			
			[Bindable]
			private var systemUser:SystemUser =null;
			private var l401:L401=null;
			[Bindable]
			public var vl401:VL401=null;
			private var l401Request:L401Request=null;
			
			private function init():void
			{
				this.systemUser = this.parentApplication.systemUser;
				var dateStr:String = DateField.dateToString(new Date(),"YYYY-MM-01");
				timeStart.selectedDate = DateFormatter.parseDateString(dateStr);
				timeEnd.selectedDate = new Date();
				this.certificateDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE,onSelected);
			}
			private function onSelected(event:GridSelectionEvent):void
			{
				this.vl401= DataGrid(event.target).selectedItem as VL401;
			}
			/*----------获取查询条件数据---------*/
			private function initQueryParam():Boolean
			{
				var boolean:Boolean=true;
				l401=new L401();
				l401Request = new L401Request();
				try{
						var type:String = L401_17.getLastSelectedInstitution();
						var l401_17:String = L401_17.getLastSelectedInstitutionCode();
						if(this.systemUser.institutionType == "1")
						{
							l401.l40117 = this.systemUser.institutionCode;
						}else{
							if(type == "8")
							{
								l401.l40117  = l401_17;
							}else if(type == "6")
							{
								l401.l40117 = l401_17.substring(0,6);
							}else if(type == "4")
							{
								l401.l40117 = l401_17.substring(0,4);
							}else if(type == "2")
							{
								l401.l40117  = l401_17.substring(0,2);
							}
						}
						l401Request.timeStr=timeStart.selectedDate;
						l401Request.timeEnd=timeEnd.selectedDate;
					l401Request.flag="false";
					var i:int=tab.selectedIndex;
					if(Boolean(i))
					{
						if(StringUtil.trim(L401_02.text)==""&&
							StringUtil.trim(L401_04.text)=="")
						{
							Alert.show("请输入个人信息","系统提示");
							return false;
						}
						l401.l40102=StringUtil.trim(L401_02.text);
						l401.l40104=StringUtil.trim(L401_04.text);
						l401Request.flag="true";
					}
					l401Request.l401=l401;
					vl401=null;
				}catch(e:Error)
				{
					Alert.show("查询异常","系统提示");
				}
				return boolean;
			}
			
			public function queryL401():void
			{
				_query(1,20);
			}
			public function queryL401Handler(event:ResultEvent):void
			{
				certificateDataGrid.dataProvider=null;
				var l401Response:Object = event.result;
				if(!l401Response.state)
				{
					Alert.show(l401Response.errorMessage,"系统提示");
					return;
				}
				var vl401s:ArrayCollection =l401Response.vl401s;
				var rowCount:Number = l401Response.rowCount;
				this.certificateDataGrid.dataProvider=vl401s;
				this.pagerBar.pageSize = 20;
				this.pagerBar.dataGrid = this.certificateDataGrid;  
				this.pagerBar.rowCount = rowCount;
				this.pagerBar.resultData = vl401s;
				this.pagerBar.dataBind();
				this.pagerBar.pagerFunction = pagerFunction;
				if(rowCount > 0) {
					this.pagerBar.enabled = true;
				}
			}
			
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				_query(currentPageIndex,pageSize);
			}
			
			public function refresh():void
			{
				
				_query(this.pagerBar.currentPageIndex,20);
			}
			
			private function _query(currentPageIndex:int,pageSize:int):void
			{
				initQueryParam();
				l401Request.parameterPageindex=currentPageIndex;
				l401Request.parameterPagesize=pageSize;
				this.l401Service.queryL401(l401Request);	
			}
			
			
			private function updateL401():void
			{
				if(vl401!=null)
				{
					var window:title= new title();
					window.owner=this;
					window.vl401=this.vl401;
					PopUpManager.addPopUp(window,this);
					var x:Number = (this.parentApplication.mdiCanvas.width - window.width)/2;
					var y:Number = (this.parentApplication.mdiCanvas.height - window.height)/2;
					window.move(x,y);
				}else
				{
					Alert.show("请选择一条记录","系统提示");
				}
			}
			private function delL401():void
			{
				if(vl401!=null)
				{
					Alert.show("是否删除这条信息","系统提示",3,this,del);
				}else
				{
					Alert.show("请选择一条记录","系统提示");
				}
			}
			private function del(event:CloseEvent):void
			{
				l401Request=new L401Request();
				l401Request.l40101=vl401.l40101;
				if(event.detail==Alert.YES)
					l401Service.delL401(l401Request);
			}
			private function delL401Handler(event:ResultEvent):void
			{
				var l401Response:Object=event.result;
				if(l401Response.state)
				{
					Alert.show(l401Response.promptMessage,"系统提示");
					queryL401();
				}else
				{
					Alert.show(l401Response.errorMessage,"系统提示");
				}
			}
		
			private function readCard():void
			{
				var arr:Array=CompMethod.readCard();
				if(arr!=null)
				{
					var boolean:Boolean=CompMethod.sex("女",arr[1]);
					if(boolean)
					{
						L401_02.text=arr[0];
						L401_04.text=arr[5];
					}
				}else
				{					
					Alert.show("读卡失败","系统提示");
				}
			}
			private function printCertificate(event:MouseEvent):void
			{
				
				if(this.vl401 == null)
				{
					Alert.show("请选择要操作的行!","系统提示");
					return;
				}
				var urlRequest:URLRequest = null;
				var selectL40101:Number = vl401.l40101;
//				var selectL40102:String = vl401.l40102;
//				var selectL40104:String = vl401.l40104;
				
				var url:String =this.parentApplication.contextRoot +"/fnrxadaServlet?l40101=" +selectL40101;
				navigateToURL(new URLRequest(url), null);
			}
		]]>
	</fx:Script>
	
		
	<mx:TabNavigator width="100%" height="118" id="tab" chromeColor="#ffffff" creationPolicy="all">
		<s:NavigatorContent width="100%" label="综合查询" buttonMode="true">
			<s:VGroup >
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="录入单位"/>
						<component:InstitutionComboBox id="L401_17" width="100%" buttonMode="true"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
								 <s:Label text="登记时间"/><mx:DateField id="timeStart" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
																	 monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
																	 formatString="YYYY-MM-DD" yearNavigationEnabled="true" buttonMode="true"/>
								 <s:Label text="至"/><mx:DateField id="timeEnd" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
																  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
																  formatString="YYYY-MM-DD" yearNavigationEnabled="true" buttonMode="true"/>
								 <s:Button label="查询" buttonMode="true" click="queryL401()" />
								 <s:Button label="打印" click="printCertificate(event)"/>
								 <s:Button width="60" label="修改"   buttonMode="true" enabled="{vl401!=null}" click="updateL401()"/>
								 <s:Button width="60" label="删除"   buttonMode="true" enabled="{vl401!=null}" click="delL401()"/>
						
		 	</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" label="精确查询" buttonMode="true">
			<s:VGroup>
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle">
								 <s:Label text="姓名"/><s:TextInput id="L401_02"/>
								 <s:Label text="证件号码"/><s:TextInput id="L401_04" width="140"/>
								 <s:Button id="duka1" width="60" label="读卡"   buttonMode="true" enabled="{systemUser.duka=='1'}" click="readCard()"/>
								 <s:Button width="60" label="查询"   buttonMode="true" click="queryL401()"/>
								 <s:Button label="打印" click="printCertificate(event)"/>
			 					 <s:Button width="60" label="修改"   buttonMode="true" enabled="{vl401!=null}" click="updateL401()"/>
								 <s:Button width="60" label="删除"   buttonMode="true" enabled="{vl401!=null}" click="delL401()"/>								
			 </s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
	</mx:TabNavigator>
	<s:Scroller y="126" width="100%" height="560" horizontalScrollPolicy="auto"
				verticalScrollPolicy="auto">
		<s:VGroup width="100%" paddingBottom="10">
			<s:DataGrid id="certificateDataGrid" width="100%" height="340"
						borderAlpha="0.3" alternatingRowColors="[#FFFFFF,#EEEEEE]" editable="false" rowHeight="23" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">
				<s:columns>     
					<s:ArrayList>
						<s:GridColumn visible="false" dataField="l40101" headerText="主键"/>
						<s:GridColumn width="40" editable="false" headerText="序号" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer"/>
						<s:GridColumn width="200" dataField="l40116" headerText="档案编号"/>
						<s:GridColumn width="100" dataField="l40102" headerText="姓名"/>
						<s:GridColumn width="140" dataField="l40104" headerText="证件号码"/>
						<s:GridColumn width="117" dataField="l40110" headerText="联系电话"/>
						<s:GridColumn width="125" dataField="l40105str" headerText="出生日期"/>
						<s:GridColumn width="200" dataField="l40117zh" headerText="录入单位"/>
						<s:GridColumn width="100" dataField="l40118" headerText="录入人员"/>
						<s:GridColumn  dataField="l40119str" headerText="录入时间"/>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
			<component:PagerBar id="pagerBar" enabled="false"/>
		</s:VGroup>	
	</s:Scroller>
</s:Module>
