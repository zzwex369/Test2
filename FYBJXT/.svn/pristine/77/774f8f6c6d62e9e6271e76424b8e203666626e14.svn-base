<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  xmlns:local="com.xyw.sys.custom.component.*"
		  creationComplete="moduleCreationComplete()">
	<fx:Declarations>
		<s:RemoteObject id="birthService" destination="birthService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="validateSaveBirthCertiticate" result="validateSaveBirthCertiticateHandler(event)"/>
			<s:method name="validateStockCertiticate" result="validateStockCertiticateHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="reissueBirthCertificateDJBService" destination="reissueBirthCertificateDJBService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryBirthCertificateDJB" result="queryBirthCertificateDJBHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		mx|GridItem
		{
			horizontalAlign:right;
			verticalAlign:middle;
		}
		s|HGroup
		{
			horizontalAlign:right;
			verticalAlign:middle;
		}
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|TextInput
		{
			fontFamily:微软雅黑;
		}
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.module.csyxzm.model.D301;
			import com.xyw.module.csyxzm.model.D305;
			import com.xyw.module.csyxzm.model.D305Request;
			import com.xyw.module.csyxzm.model.D305Response;
			import com.xyw.module.csyxzm.model.QueryBirthRequest;
			import com.xyw.module.csyxzm.model.QueryBirthResponse;
			import com.xyw.module.csyxzm.model.VBirthInfo;
			import com.xyw.module.csyxzm.model.VD305;
			import com.xyw.sys.custom.component.InstitutionComboBox;
			import com.xyw.sys.custom.component.SecurityControler;
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.ComboBoxDataResponse;
			import com.xyw.sys.model.SystemUser;
			
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.controls.Text;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.formatters.DateTimeFormatter;
			include "../csyxzmAs/csyxzm.as";
			private var comboBoxDataRequest:ComboBoxDataRequest;
			private var d301:D301;
			private var vBrithInfo:VBirthInfo;
			public var systemUser:SystemUser = null;
			
			private var birth_day:String;
			private var birth_hour:String;
			private var birth_minute:String;
			private var d301_04_str:String;
			private var d301_04_date:Date;
			private var d301_57:Number=0;
			[Bindable]
			public var sexData:ArrayCollection = new ArrayCollection([{label:"请选择",data:0},{label:"男",data:1},{label:"女",data:2},{label:"未知",data:3}]);
			
			[Bindable]
			public var gradeVal:String="0"; //单双亲  父亲1  母亲2  双亲0
			[Bindable]
			private var birthVal:int=1;  //出生日期   1显示，2不显示
			[Bindable]
			private var phoneVal:int=1;  //联系电话   1显示，2不显示
			[Bindable]
			private var areaVal:int=1; //家庭地址 户口地址    1显示，2不显示
			[Bindable]
			private var cardVal:int=1; //结婚证编号 亲子鉴定证明编号    1显示，2不显示
			[Bindable]
			private var printVal:String="4"; //打印状态  4以往年度补发
			public var loadDataArr:Array=[[[""],[""],[""],[""],[""],[""]],[[""],[""],[""],[""],[""],[""],],[[""]],[[""],[""]],[[""],[""]],[[""]],[[""]],[[""]],[[""]],[[""]]];
			
			
			//========================启动权限控制============//
			private function security():void{
				SecurityControler.start(null,'visible');
				SecurityControler.addAllPerms(this.parentApplication.permissionList);
			}
			
			//初始化方法
			private function moduleCreationComplete():void
			{
				//security();
				this.systemUser = this.parentApplication.systemUser;
				//检查读卡权限
				if(this.systemUser.duka == "1"){
					this.btnRead.enabled = true;
					/* this.mother_btn.enabled = true;
					this.father_btn.enabled = true;
					this.duka1.enabled =true; */
				}
				this.initializeComboBox();//初始化数据
				this.d301_28.text = DateField.dateToString(new Date, "YYYY-MM-DD");
				var date:Date = new Date();
				this.hour.text = (String)(date.hours);
				this.minute.text = (String)(date.minutes);
				
				var event:Event = null;
				this.d301_05.enabled =false;
				this.d301_25.enabled =false;
				//this.d301_40.enabled =false;
				
				this.parents3.opensave =opensave;
			}
			
			/*------查询车辆类型和车辆使用性质 下拉菜单-----------*/
			private function initializeComboBox():void
			{
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_01";
				comboBoxDataRequest.sql = "select * from S301_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_02";
				comboBoxDataRequest.sql = "select * from S301_02";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_05";
				comboBoxDataRequest.sql = "select * from S301_05";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				/*var instiutionCode:String = this.systemUser.institutionCode;
				if(this.systemUser.institutionType == "2")
				{
					instiutionCode = instiutionCode.substring(0, 4);
					if(this.systemUser.areaCode.length == 2)
					{
						instiutionCode = instiutionCode.substring(0, 2);
					}
				}else
				{
					instiutionCode = instiutionCode.substr(0, 6);
				}
				comboBoxDataRequest.sql = "select t.d101_01, t.d101_02 from D101 t where t.D101_01 like '" + instiutionCode + "%' order by t.D101_01";*/
				comboBoxDataRequest.sql = "select t.d101_01, t.d101_02 from D101 t";
				comboBoxDataRequest.flag = "D101";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_06";
				comboBoxDataRequest.flag = "S301_06";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_07";
				comboBoxDataRequest.flag = "S301_07";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_08";
				comboBoxDataRequest.flag = "S301_08";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select t.S_01, t.S_02 from S401_01 t where t.S_01 in ('3','4','10','9')";
				comboBoxDataRequest.flag = "S401_01_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);

				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = false;
				comboBoxDataRequest.sql = "select t.s_01,t.s_02 from S301_10 t where t.S_05='0' and t.S_03 ="+this.systemUser.institutionCode;
				comboBoxDataRequest.flag = "S301_10";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);

				var systemCode:String = this.systemUser.institutionCode;
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = false;
				comboBoxDataRequest.sql = "select * from S301_09 t where t.S_03='"+systemCode+"'";
				comboBoxDataRequest.flag = "S301_09";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				

			}
			
			/*-----------------返回数据放到赋值到下拉菜单-----------------*/
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object =  event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				
				this.d301_03.selectedIndex = 0;
//				if(flag == "S301_01")
//				{
//					this.d301_03.dataProvider = comboBoxDataList;
//					this.d301_03.selectedIndex = 0;
//				}else
				if(flag == "S301_02")
				{
					this.d301_09.dataProvider = comboBoxDataList;
					this.d301_09.selectedIndex = 0;
				}else if(flag == "S301_05")
				{
					this.d301_22.dataProvider = comboBoxDataList;
					var birthIndex:int = this.getBirthSelectedIndex(comboBoxDataList);
					this.d301_22.selectedIndex = birthIndex;
				}else if(flag == "D101")
				{
					var index:int = this.getDropDownListSelectedIndex(comboBoxDataList, this.systemUser.institutionCode);
					this.d301_24.dataProvider = comboBoxDataList;
					this.d301_26.dataProvider = comboBoxDataList;
					this.d301_24.selectedIndex = 0;
					this.d301_26.selectedIndex = index;
					this.d301_24.enabled = false;
					this.d301_26.enabled = false;
				}else if(flag == "S301_06")
				{
					this.d301_38.dataProvider = comboBoxDataList;
					this.d301_38.selectedIndex = 1;
					
				}else if(flag == "S301_07")
				{
					this.d301_37.dataProvider = comboBoxDataList;
					this.d301_37.selectedIndex = 0;
				}else if(flag == "S401_01_01")
				{
					this.d301_50.dataProvider = comboBoxDataList;
					this.d301_50.selectedIndex = 0;
				}else if(flag == "S301_08")
				{
					this.d301_55.dataProvider = comboBoxDataList;
					this.d301_55.selectedIndex = 0;

				}else if(flag == "S301_10")
				{
					this.d301_27.dataProvider = comboBoxDataList;
					this.d301_27.selectedIndex = 0;

				}else if(flag == "S301_09"){
					this.d301_25.dataProvider = comboBoxDataList;
					this.d301_25.selectedIndex = 0;

				}
			}
			
			/*-----------------默认国籍 中国---------------------*/
			private function getCountrySelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "CHN") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			/*-----------------默认民族  汉族---------------------*/
			private function getVolkSelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "01") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			/*-----------------默认出生地点分类        医院---------------------*/
			private function getBirthSelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "1") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			private function getDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			/*--------------保存出生证明信息-----------------*/
			private function validateSaveBirthCertiticate():void 
			{
				var patternFather:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
				var patternMonther:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
				var birthdayFormat:RegExp  = /^((19|20)\d\d-((0[1-9])|(1[0-2]))-[0-3]\d)$/;
				if(this.d301_31.getAreaCode().length < 9)
				{
					Alert.show("所属地区选到乡镇级别!", "系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_02.text) == "")
				{
					Alert.show("请输入婴儿姓名!","系统提示");
					return;
				}
				if(this.d301_03.selectedItem.data == 0)
				{
					Alert.show("请选择性别!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_04.text) == "")
				{
					Alert.show("请选择婴儿出生日期!","系统提示");
					return;
				}
				if((Number)(this.hour.text) < 0 || (Number)(this.hour.text) > 23) 
				{
					Alert.show("输入时间(小时)不符合格式", "系统提示");
					return;
				}if((Number)(this.minute.text) < 0 || (Number)(this.minute.text) > 59) 
				{
					Alert.show("输入时间(分钟)不符合格式", "系统提示");
					return;
				}if((Number)(this.d301_47.text) < 0 || (Number)(this.d301_47.text) > 7) 
				{
					Alert.show("输入天数不符合格式", "系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_47.text) == "")
				{
					Alert.show("请输入孕周天数！","系统提示");
					return;
				}
				/* if(StringUtil.trim(this.d301_32.text) == "")
				{
					Alert.show("请输入住院病历号!","系统提示!");
					return;
				} */
				if(this.d301_09.selectedItem.data == 0)
				{
					Alert.show("请选择健康状况!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_33.text) == "")
				{
					Alert.show("请选择填表日期!","系统提示!");
					return;
				}
/*				if(StringUtil.trim(this.d301_25.text) == "")
				{
					Alert.show("请输入接生员!","系统提示");
					return;
				}  */
				if(StringUtil.trim(this.d301_52.text) == "")
				{
					Alert.show("请输入原出生证号!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_10.text) == "")
				{
					Alert.show("请输入新出生证号!","系统提示");
					return;
				}
				if(this.d301_05.getAreaCode().length < 8) {
					Alert.show("出生地选到乡镇级别!", "系统提示");
					return;
				}
				if(this.d301_50.selectedItem.data == 0)
				{
					Alert.show("请选择补发原因","系统提示");
					return;
				}
				if(this.d301_55.selectedItem.data == 0)
				{
					Alert.show("请选择胎数","系统提示");
					return;
				}
				if(this.d301_08.value <= 25)
				{
					Alert.show("婴儿身长应大于25小于75","系统提示");
					return;
				}
				if(this.d301_08.value >= 75)
				{
					Alert.show("婴儿身长应大于25小于75","系统提示");
					return;
				}
				if(this.d301_29.value <= 300)
				{
					Alert.show("婴儿身长应大于300小于10000","系统提示");
					return;
				}
				if(this.d301_29.value >= 10000)
				{
					Alert.show("婴儿身长应大于300小于10000","系统提示");
					return;
				}
				
				if(parents3.verification()){
					return;
				}
				
				if(StringUtil.trim(this.d301_36.text) == "")
				{
					Alert.show("请输入领证人!","系统提示");
					return;
				}
				if(this.d301_37.selectedItem.data == 0)
				{
					Alert.show("请选择与新生儿关系!","系统提示");
					return;
				}
				if(this.d301_38.selectedItem.data == 0)
				{
					Alert.show("请选择领证人有效证件类别!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_39.text) == "")
				{
					Alert.show("请输入领证人证件号码!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_40.text) == "")
				{
					Alert.show("请选择填表日期!","系统提示");
					return;
				}
				if(this.d301_22.selectedItem.data == 0)
				{
					Alert.show("请选择出生地点分类!","系统提示");
					return;
				}
				if(this.d301_23.enabled == true && StringUtil.trim(this.d301_23.text) == "")
				{
					Alert.show("请输入出生地其它!","系统提示");
					return;
				}
				if(this.d301_24.selectedItem.data == 0)
				{
					Alert.show("请输入出接生机构!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_27.text) == "")
				{
					Alert.show("请输入签发人!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d301_28.text) == "")
				{
					Alert.show("请选择签发时间!","系统提示");
					return;
				}
				 if(this.d301_57 == 0){
					Alert.show("请登记信息化之前补发登记表!","系统提示");
					return;
				} 
				var queryBirthRequest:QueryBirthRequest = new QueryBirthRequest();
				queryBirthRequest.d301_10 = StringUtil.trim(this.d301_10.text);
				
				this.birthService.validateSaveBirthCertiticate(queryBirthRequest);
			}
			
			private function validateSaveBirthCertiticateHandler(event:ResultEvent):void
			{
				var queryBirthResponse:Object = event.result;
				if(!queryBirthResponse.state)
				{
					Alert.show(queryBirthResponse.errorMessage,"系统提示");
					return;
				}
				this.saveButton.enabled =false;
				var queryBirthRequest:QueryBirthRequest = new QueryBirthRequest();
				queryBirthRequest.d301_10 = StringUtil.trim(this.d301_10.text);
				queryBirthRequest.d301_26 = this.systemUser.institutionCode;
				this.birthService.validateStockCertiticate(queryBirthRequest);
			}
			
			private function validateStockCertiticateHandler(event:ResultEvent):void
			{
				var queryBirthResponse:Object = event.result;
				if(!queryBirthResponse.state)
				{
					Alert.show(queryBirthResponse.errorMessage,"系统提示");
					return;
				}
				this.savevalidateBirthCertificate();
			}
			
			private function savevalidateBirthCertificate():void
			{
				this.vBrithInfo = new VBirthInfo();
				this.d301 = new D301();
				this.d301.d30102 = StringUtil.trim(this.d301_02.text);
				this.d301.d30103 = this.d301_03.selectedItem.data;
				
				var dateTimeFormatter:DateTimeFormatter = new DateTimeFormatter();
				dateTimeFormatter.dateTimePattern = "yyyy-MM-dd";
				var dateTime_str:String = dateTimeFormatter.format(this.d301_04.selectedDate);
				this.d301_04_str = dateTime_str + " " +  this.hour.text + ":" + this.minute.text;
				this.d301_04_date = DateFormatter.parseDateString(this.d301_04_str);;
				this.d301.d30104 = this.d301_04_date;
				
				this.d301.d30105 = this.d301_05.getAreaCode();
				this.d301.d30107 = this.d301_07.value;
				this.d301.d30147 = StringUtil.trim(this.d301_47.text);
				this.d301.d30108 = this.d301_08.value;
				this.d301.d30109 = this.d301_09.selectedItem.data;
				this.d301.d30110 = StringUtil.trim(this.d301_10.text);
				
				var saveDataArr:Array =parents3.saveRecord();
				this.d301.d30111 =equVaule(saveDataArr[0][0]); //母亲姓名
				this.d301.d30134 =equVaule(saveDataArr[0][1]); //母亲证件类别
				this.d301.d30112 =equVaule(saveDataArr[0][2]); //母亲证件号码
				if(saveDataArr[7][0] != null &&  saveDataArr[7][0] !="" ){
					this.d301.d30113 =DateField.stringToDate(saveDataArr[7][0],"YYYY-MM-DD"); //母亲出生日期
				}else{
					this.d301.d30113 =null;
				}
				this.d301.d30115 =equVaule(saveDataArr[0][3]); //母亲民族
				this.d301.d30121 =equVaule(saveDataArr[0][4]); //母亲身份证地址
				this.d301.d30114 =equVaule(saveDataArr[0][5]); //母亲国籍
				
				
				this.d301.d30116 =equVaule(saveDataArr[1][0]); //父亲姓名
				this.d301.d30135 =equVaule(saveDataArr[1][1]); //父亲证件类别
				this.d301.d30117 =equVaule(saveDataArr[1][2]); //父亲证件号码
				if(saveDataArr[8][0] != null && saveDataArr[8][0] !="" ){
					this.d301.d30118 =DateField.stringToDate(saveDataArr[8][0],"YYYY-MM-DD"); //父亲出生日期
				}else{
					this.d301.d30118 =null;
				}
				this.d301.d30120 =equVaule(saveDataArr[1][3]); //父亲民族
				this.d301.d30148 =equVaule(saveDataArr[1][4]); //父亲身份证地址
				this.d301.d30119 =equVaule(saveDataArr[1][5]); //父亲国籍
				
				this.d301.d30143 =equVaule(saveDataArr[2][0]); //电话号码;
				
				this.d301.d30160 =equVaule(saveDataArr[3][0]);  //母亲户口地址
				this.d301.d30163 =equVaule(saveDataArr[3][1]);  //母亲家庭地址
				
				this.d301.d30161 =equVaule(saveDataArr[4][0]);  //父亲户口地址
				this.d301.d30164 =equVaule(saveDataArr[4][1]);  //父亲家庭地址
				
				var fm:String="";
				if(saveDataArr[9][0] !=null && saveDataArr[9][0]!="0"){
					fm =saveDataArr[9][0];
				}
				this.d301.d30167=fm;

				this.vBrithInfo.montherType =equVaule(saveDataArr[10][0]);  //母亲有效证件类别  名称
				this.vBrithInfo.motherNationality =equVaule(saveDataArr[10][1]);  //母亲国籍  名称
				this.vBrithInfo.motherVolk =equVaule(saveDataArr[10][2]);  //母亲民族  名称
				this.vBrithInfo.familyAddress =equVaule(saveDataArr[0][4]);
				
				this.vBrithInfo.fatherType =equVaule(saveDataArr[11][0]);  //父亲有效证件类别  名称
				this.vBrithInfo.fatherNationality =equVaule(saveDataArr[11][1]);  //父亲国籍 名称
				this.vBrithInfo.fatherVolk =equVaule(saveDataArr[11][2]);  //父亲民族 名称
				this.vBrithInfo.familyFaAddress =equVaule(saveDataArr[1][4]);
				
				
				this.d301.d30122 = this.d301_22.selectedItem.data;
				this.d301.d30123 = StringUtil.trim(this.d301_23.text);
				this.d301.d30124 = this.d301_24.selectedItem.data;
				this.d301.d30125 = StringUtil.trim(this.d301_25.text);
				this.d301.d30126 = this.d301_26.selectedItem.data;
				this.d301.d30127 = StringUtil.trim(this.d301_27.text);
				this.d301.d30128 = DateField.stringToDate(this.d301_28.text, "YYYY-MM-DD");
				this.d301.d30129 = this.d301_29.value;
				this.d301.d30130 = "1";//签发机构类型
				this.d301.d30131 = this.d301_31.getAreaCode();
				this.d301.d30132 = StringUtil.trim(this.d301_32.text);
				this.d301.d30133 = this.d301_33.selectedDate;
				this.d301.d30136 = StringUtil.trim(this.d301_36.text);
				this.d301.d30137 = this.d301_37.selectedItem.data;
				this.d301.d30138 = this.d301_38.selectedItem.data;
				this.d301.d30139 = StringUtil.trim(this.d301_39.text);
				this.d301.d30140 =  DateField.stringToDate(this.d301_40.text, "YYYY-MM-DD");
				this.d301.d30142 = "4";//换发类型  0 首发        1换发        2补发
				this.d301.d30150 = this.d301_50.selectedItem.data;
				this.d301.d30155 = this.d301_55.selectedItem.data;
				this.d301.d30152 = StringUtil.trim(this.d301_52.text);
				this.d301.d30157 =this.d301_57;
				
				this.vBrithInfo.areaName = this.d301_31.getAreaName();
				this.vBrithInfo.sex = this.d301_03.selectedItem.label;
				this.vBrithInfo.birth = this.d301_04_str;
				this.vBrithInfo.health = this.d301_09.selectedItem.label;
				this.vBrithInfo.deliverDate = StringUtil.trim(this.d301_33.text);
				this.vBrithInfo.birthAreaName = this.d301_05.getAreaName();
				this.vBrithInfo.relation = this.d301_37.selectedItem.label;
				this.vBrithInfo.licensType = this.d301_38.selectedItem.label;
				this.vBrithInfo.licensDate = StringUtil.trim(this.d301_40.text);
				this.vBrithInfo.birthAreaType = this.d301_22.selectedItem.label;
				this.vBrithInfo.birthIns = this.d301_24.selectedItem.label;
				this.vBrithInfo.viseIns = this.d301_26.selectedItem.label;
				this.vBrithInfo.signDate = StringUtil.trim(this.d301_28.text);
				this.vBrithInfo.reissReason = this.d301_50.selectedItem.label;
				this.vBrithInfo.taishu = this.d301_55.selectedItem.label;
				this.saveButton.enabled = false;
				
				var window:Confirmation = new Confirmation();
				window.owner = this;
				window.d301 = this.d301;
				window.vBirthInfo = this.vBrithInfo;
				PopUpManager.addPopUp(window,this);
				var x:Number = (this.parentApplication.mdiCanvas.width - window.width) / 2;
				var y:Number = (this.parentApplication.mdiCanvas.height - window.height) / 2;
				window.move(x, y);
			}
			
			private function equVaule(value:String):String{
				if(value !=null && value !="null")
					return value;
				return "";
			}
			
			private function saveBirthCertificate():void
			{
				this.birthService.saveBirthCertificate(d301);
			}
			
			private function queryByIdHandler(event:ResultEvent):void
			{
				var flag:String = event.result as String;
				var urlRequest:URLRequest = null;
				if(flag == "1") {
					urlRequest = new URLRequest(this.parentApplication.contextRoot + "/print/printBirthInfo_new.jsp?d30110=" + this.d301.d30110 + "&userCode=" + this.systemUser.userCode);
				} else if(flag == "0") {
					urlRequest = new URLRequest(this.parentApplication.contextRoot + "/print/printBirthInfo.jsp?d30110=" + this.d301.d30110);
				}
				navigateToURL(urlRequest,"_blank");
			}
			
			/*----------监控出生地点分类-------------*/
			private function changeBrith():void
			{
				if(this.d301_22.selectedItem.data == 4)
				{
					this.d301_23.enabled = true;
				}else
				{
					this.d301_23.text = "";
					this.d301_23.enabled = false;
				}
			}
			private function changeLicen():void
			{
				var d30138DataProvider:ArrayCollection = ArrayCollection(this.d301_38.dataProvider);
				var saveDataArr:Array =parents3.saveRecord();
				
				var id:String = this.d301_37.selectedItem.data;
				if(id == "1")   //领证人父亲
				{
					this.d301_36.text =equVaule(saveDataArr[1][0]);
					this.d301_39.text =equVaule(saveDataArr[1][2]);
					var d30138Index:int =this.getDropDownListSelectedIndex(d30138DataProvider,equVaule(saveDataArr[1][1]));
					if(d30138Index != 0){
						this.d301_38.selectedIndex =d30138Index;
					}
				}else if(id == "2")   //领证人母亲
				{
					this.d301_36.text =equVaule(saveDataArr[0][0]);
					this.d301_39.text =equVaule(saveDataArr[0][2]);
					var d30138Index_:int =this.getDropDownListSelectedIndex(d30138DataProvider,equVaule(saveDataArr[0][1]));
					if(d30138Index_ != 0){
						this.d301_38.selectedIndex =d30138Index_;
					}
				}else
				{
					this.d301_36.text = "";
					this.d301_39.text = "";
					this.d301_38.selectedIndex = 1;
				}
			}
			private function queryBirthCertificateDJB():void
			{
				if(StringUtil.trim(this.d305_02_.text) == "" ){
					Alert.show("请输入婴儿姓名","系统提示");
					return;
				}
				if(StringUtil.trim(this.d305_33_.text) == ""){
					Alert.show("请输入原出生证号","系统提示");
					return;
				}
				var d305:D305 = new D305();
				var d305Request:D305Request = new D305Request();
				d305.d30502 = this.d305_02_.text;
				d305.d30533 = this.d305_33_.text;
				d305Request.d305 = d305;
				d305Request.parameterPageindex = 1;
				d305Request.parameterPagesize = 20;
				d305Request.flag ="信息化前补发";
				this.reissueBirthCertificateDJBService.queryBirthCertificateDJB(d305Request);
			}
			
			private function queryBirthCertificateDJBHandler(event:ResultEvent):void
			{
				var d305Response:D305Response = event.result as D305Response;
				var rowCount:Number = d305Response.rowCount;
				var listVD305:ArrayCollection = d305Response.vd305s;
				if(listVD305.length != 0)
				{
					opensave();
					var vd305:VD305 = listVD305.getItemAt(0) as VD305;
					this.d301_57 =vd305.d30501;  
					this.d301_02.text = vd305.d30502;//姓名
					var sexDataProvider:ArrayCollection = ArrayCollection(this.d301_03.dataProvider);
					var d30103Index:int = this.getDropDownListSelectedIndex(sexDataProvider,vd305.d30503);
					this.d301_03.selectedIndex = d30103Index;  //性别  s301_01
					
					//胎数 s301_08
					var d30542Provider:ArrayCollection = ArrayCollection(this.d301_55.dataProvider);
					var d30542Index:int = this.getDropDownListSelectedIndex(d30542Provider,vd305.d30542);
					this.d301_55.selectedIndex = d30542Index;
					
					var d30504str:String = vd305.d30504;
					this.d301_04.selectedDate = DateFormatter.parseDateString(d30504str.substr(0,10));//出生日期
					this.hour.text = d30504str.substr(11,2);
					this.minute.text = d30504str.substr(14,2);
					this.d301_05.setAreaCode(vd305.d30505);//出生地
					this.d301_07.value = vd305.d30506;//出生孕周
					this.d301_47.text = (String)(vd305.d30507);//孕周天数
					this.d301_08.value = vd305.d30508;//身长
					this.d301_29.value = vd305.d30509;//体重
					this.d301_52.text = vd305.d30533;//原证号
					this.d301_10.text = vd305.d30534;//新证号
					this.d301_32.text = vd305.d30510;//住院病历号
					this.d301_25.text = vd305.d30512;//接生员
					//补发原因
					var birthDeliveryDataProvider:ArrayCollection = ArrayCollection(this.d301_50.dataProvider);
					var d30224Index:int = this.getDropDownListSelectedIndex(birthDeliveryDataProvider,vd305.d30532);
					this.d301_50.selectedIndex = d30224Index;
					
					this.gradeVal =vd305.d30545;
					if(gradeVal==null){
						gradeVal="0";
					}
					loadDataArr=putloadDataArr_(vd305);
					parents3.defaultCheckParent(gradeVal,loadDataArr,null);
					
					this.d301_36.text = vd305.d30528;//领证人
					
					//与新生儿关系
					var relationDataProvider:ArrayCollection = ArrayCollection(this.d301_37.dataProvider);
					var d30137Index:int = this.getDropDownListSelectedIndex(relationDataProvider,vd305.d30529);
					this.d301_37.selectedIndex = d30137Index;
					
					//领证人有效证件类别
					var licensTypeDataProvider:ArrayCollection = ArrayCollection(this.d301_38.dataProvider);
					var d30138Index:int = this.getDropDownListSelectedIndex(licensTypeDataProvider,vd305.d30530);
					this.d301_38.selectedIndex = d30138Index;
					
					this.d301_39.text = vd305.d30531;//领证人证件号码
					this.d301_40.text = vd305.d30513;//领证人填表日期
					
					//助产机构
					var d30124_DataProvider:ArrayCollection = ArrayCollection(this.d301_24.dataProvider);
					var d30124Index:int = this.getDropDownListSelectedIndex(d30124_DataProvider,vd305.d30511);
					this.d301_24.selectedIndex = d30124Index;
					this.saveButton.enabled = true;
				}else{
					Alert.show(d305Response.errorMessage.toString(),"系统提示");
				}
			}
			
			private function putloadDataArr_(vd305:Object):Array{
				loadDataArr[0][0] =vd305.d30516;;  //母亲姓名
				loadDataArr[0][1] =vd305.d30517;  //证件类别
				loadDataArr[0][2] =vd305.d30518;  //母亲证件号码
				
				loadDataArr[0][3] =vd305.d30520;  //母亲民族
				loadDataArr[0][4] =vd305.d30521;  //母亲身份证地址
				loadDataArr[0][5] =vd305.d30519;  //母亲国籍
				
				
				loadDataArr[1][0] =vd305.d30522;  //父亲姓名
				loadDataArr[1][1] =vd305.d30523;  //证件类别
				loadDataArr[1][2] =vd305.d30524;  //父亲证件号码
				
				loadDataArr[1][3] =vd305.d30526;  //父亲民族
				loadDataArr[1][4] =vd305.d30527;  //父亲身份证地址
				loadDataArr[1][5] =vd305.d30525;  //父亲国籍
				
				loadDataArr[2][0] ="";  //电话号码
				
				loadDataArr[3][0] ="";  //母亲户口地址
				loadDataArr[3][1] ="";  //母亲家庭地址
				
				loadDataArr[4][0] ="";  //父亲户口地址
				loadDataArr[4][1] ="";  //父亲家庭地址
				
				loadDataArr[5][0] ="";  //结婚证编号
				
				loadDataArr[6][0] ="";  //亲子鉴定证明编号
				
				loadDataArr[7][0] ="";   //母亲出生日期
				
				loadDataArr[8][0] ="";   //父亲出生日期
				
				loadDataArr[9][0] =""; //单双亲  父亲1    母亲2 
				
				return loadDataArr;
			}
			
			//与新生儿关系（读卡）
			private function readCard_A():void{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						this.d301_36.text = array[0];//领证人姓名
						this.d301_39.text = array[5];//领证人身份证号
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			//读卡获取民族信息
			private function getNationDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.label == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			private function opensave():void{
				this.saveButton.enabled = true;
			}
		]]>
	</fx:Script>
	<s:Scroller x="11" y="4" width="100%" height="100%" horizontalScrollPolicy="auto"
				verticalScrollPolicy="auto">
		<s:VGroup width="100%">
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1140">
				<s:NavigatorContent  label="补发确认" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<s:HGroup width="100%" height="100%" verticalAlign="middle">
							<s:Label id="a1" text="姓名"/><s:TextInput id="d305_02_"/>
							<s:Label id="a2" text="原出生证号"/><s:TextInput id="d305_33_" enter="queryBirthCertificateDJB()"/>
							<s:Button label="查询" id="loadBirth" click="queryBirthCertificateDJB()"/><s:Label id="a3" text="请先查询婴儿信息" color="#FF3030"/>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent  label="所属地区" width="1140">
					<s:VGroup paddingBottom="2" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem colSpan="12">
									<component:AreaComboBox id="d301_31" width="100%" paddingBottom="5" paddingTop="5" horizontalAlign="left"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" paddingRight="10" width="1200">
				<s:NavigatorContent  label="婴儿信息" width="1140">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid >
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="姓　    　名"/><s:TextInput id="d301_02" width="100" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="性　　　别"/><s:DropDownList id="d301_03" dataProvider="{sexData}" width="130" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="身长"/><s:NumericStepper minimum="25" stepSize="0.1" maximum="75" value="50" id="d301_08" width="60" enabled="false"/><s:Label text="cm"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="right">
									<s:Label text="出生孕周"/><s:NumericStepper id="d301_07" value="40" maximum="70" minimum="20" width="60" enabled="false"/><s:Label text="周"/>
									<s:TextInput id="d301_47" width="20" text="0" restrict="0-7" enabled="false"/><s:Label text="天"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="病历号"/><s:TextInput id="d301_32" width="100" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="出生日期"/>
									<mx:DateField yearNavigationEnabled="true" id="d301_04" width="130" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD" enabled="false"/>
									<s:TextInput id="hour" maxChars="2" restrict="0-9" width="20" enabled="false"/><s:Label text="时"/>
									<s:TextInput id="minute" maxChars="2" restrict="0-9" width="20" enabled="false"/><s:Label text="分"/>
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="原出生证号"/><s:TextInput id="d301_52" width="100" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="新出生证号"/><s:TextInput id="d301_10" />
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="体重"/><s:NumericStepper minimum="300" stepSize="0.1" maximum="10000" value="3000" id="d301_29" width="60"/><s:Label text="g" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="健康状况"/><s:DropDownList id="d301_09" width="130"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="接生员"/><component:FindSelectedItemComboBox id="d301_25" editable="true" width="125"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="填表日期"/>
									<mx:DateField yearNavigationEnabled="true" id="d301_33" width="130" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD"/>
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow>
								<mx:GridItem colSpan="6" horizontalAlign="left">
									<s:Label text="出生地址"/>
									<component:AreaComboBoxCommon id="d301_05" paddingBottom="10" paddingTop="5" horizontalAlign="left"/>
									<s:Label text="补发原因"/>
									<s:DropDownList id="d301_50" enabled="false"/>
									<s:Label text="胎数" paddingLeft="15"/>
									<s:DropDownList id="d301_55"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" id="tab">
				<s:NavigatorContent label="单双亲信息" width="1140">
					<component:parents3 id="parents3" gradeVal="{gradeVal}" birthVal="{birthVal}" phoneVal="{phoneVal}" areaVal="{areaVal}" cardVal="{cardVal}" printVal="{printVal}" duka="{this.parentApplication.systemUser.duka}" fumuDuka="{this.parentApplication.systemUser.fumuDuka}" />
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent label="领证人信息" width="1140">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="与新生儿关系"/><s:DropDownList id="d301_37" change="changeLicen()" />
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="领证人"/><s:TextInput id="d301_36" />
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="证件类别"/><s:DropDownList id="d301_38" change="cardType_changeHandler(event)"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="证件号码"/><s:TextInput id="d301_39" width="140" />
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="填表日期"/>
									<mx:DateField yearNavigationEnabled="true" id="d301_40" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Button id="btnRead" label="读卡" click="readCard_A()" enabled="false"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent label="签发信息" width="1140">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="出生地点分类"/><s:DropDownList id="d301_22" width="110" change="changeBrith()"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="出生地其他"/><s:TextInput id="d301_23" enabled="false"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="接生机构"/><s:DropDownList id="d301_24"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="签证机构"/><s:DropDownList id="d301_26"/>
								</mx:GridItem>
								<mx:GridItem  width="100%">
									<mx:FormItem label="签发人" required="false" width="100%">
										<local:FindSelectedItemComboBox id="d301_27" editable="true"  width="122">
										</local:FindSelectedItemComboBox>
									</mx:FormItem>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="签发时间"/><!--<s:TextInput id="d301_28"/>-->
									<mx:DateField yearNavigationEnabled="true" id="d301_28" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD" enabled="false"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<s:HGroup contentBackgroundColor="#FF0000" verticalAlign="middle" horizontalAlign="right" paddingBottom="20" paddingTop="10" paddingLeft="10" width="1134" paddingRight="50" height="30">
				<s:Button label="确定" id="saveButton" click="validateSaveBirthCertiticate()" enabled="false"/>
			</s:HGroup>
		</s:VGroup>
	</s:Scroller>
</s:Module>