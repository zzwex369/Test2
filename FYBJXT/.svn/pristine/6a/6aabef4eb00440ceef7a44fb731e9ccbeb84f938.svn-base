<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  creationComplete="moduleCreationCompleteHandler(event)"
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  width="100%" height="100%" xmlns:component="com.xyw.sys.custom.component.*">
	<fx:Declarations>
		<s:RemoteObject id="certificateConditionService" destination="certificateConditionService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryB" result="queryBHandler(event)"/>
			<s:method name="queryC" result="queryCHandler(event)"/>
			<s:method name="queryD" result="queryDHandler(event)"/>
			<s:method name="queryE" result="queryEHandler(event)"/>
			<s:method name="queryF" result="queryFHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		mx|GridItem
		{
			verticalAlign:middle;
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import com.xyw.module.csyxzm.model.CertificateConditionRequest;
			import com.xyw.sys.constant.SystemConstant;
			import com.xyw.sys.custom.component.ExportExcel;
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.ComboBoxDataResponse;
			import com.xyw.sys.model.SessionException;
			import com.xyw.sys.model.SystemUser;
			
			import flash.net.navigateToURL;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.GridSelectionEvent;
			
			public var systemUser:SystemUser = null;
			public var areacode:String = "";
			public var areaType:String = "";
			[Bindable]
			public var conditionTemp:Object;
			
			protected function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				this.pagerBarCounty.exportEXCEL = exportEXCELCountry;
				this.pagerBarHospital.exportEXCEL = exportEXCELHospital;
				this.pagerBarFirst.exportEXCEL = exportEXCELFirst;
				this.pagerBarLocal.exportEXCEL = exportEXCELLocal;
				this.pagerBarNonlocal.exportEXCEL = exportEXCELNonlocal;
				
				this.pagerBarCounty.exportEXCELAll = exportEXCELCountryAll;
				this.pagerBarHospital.exportEXCELAll = exportEXCELHospitalAll;
				this.pagerBarFirst.exportEXCELAll = exportEXCELFirstAll;
				this.pagerBarLocal.exportEXCELAll = exportEXCELLocalAll;
				this.pagerBarNonlocal.exportEXCELAll = exportEXCELNonlocalAll;
				
				this.systemUser = this.parentApplication.systemUser;
				this.date_start.text = DateField.dateToString(new Date(),"YYYY-MM-01");
				this.date_end.text = DateField.dateToString(new Date(),"YYYY-MM-DD");
				
				this.countyVG.visible = true;
				this.countyVG.percentWidth = 100;
				this.countyVG.height = 250;
				
				this.hospitalVG.visible = false;
				this.hospitalVG.width = 0;
				this.hospitalVG.height = 0;
				
				this.firstVG.visible = false;
				this.firstVG.width = 0;
				this.firstVG.height = 0;
				
				this.localVG.visible = false;
				this.localVG.width = 0;
				this.localVG.height = 0;
				
				this.nonlocalVG.visible = false;
				this.nonlocalVG.width = 0;
				this.nonlocalVG.height = 0;
				
				this.CountyDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE, onCountyDataGridSelectionChange);
				this.HospitalDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE, onHospitalDataGridSelectionChange);
			}
			
			public function exportEXCELCountryAll():void{
				ExportExcel.loadDGInExcel(this.CountyDataGridAll,"县级辖区出生情况统计(全部)",this.parentApplication.contextRoot + '/print/ExcelExport.jsp');
			}
			public function exportEXCELCountry():void{
				ExportExcel.loadDGInExcel(this.CountyDataGrid,"县级辖区出生情况统计",this.parentApplication.contextRoot + '/print/ExcelExport.jsp');
			}
			public function exportEXCELHospital():void{
				ExportExcel.loadDGInExcel(this.HospitalDataGrid,"各县医院辖区出生情况统计",this.parentApplication.contextRoot + '/print/ExcelExport.jsp');
			}
			public function exportEXCELHospitalAll():void{
				ExportExcel.loadDGInExcel(this.HospitalDataGridAll,"各县医院辖区出生情况统计(全部)",this.parentApplication.contextRoot + '/print/ExcelExport.jsp');
			}
			public function exportEXCELFirst():void{
				ExportExcel.loadDGInExcel(this.FirstDataGrid,"出生证使用详情",this.parentApplication.contextRoot + '/print/ExcelExport.jsp');
			}
			public function exportEXCELFirstAll():void{
				ExportExcel.loadDGInExcel(this.FirstDataGridAll,"出生证使用详情（全部）",this.parentApplication.contextRoot + '/print/ExcelExport.jsp');
			}
			public function exportEXCELLocal():void{
				ExportExcel.loadDGInExcel(this.LocalDataGrid,"本地出生证使用详情",this.parentApplication.contextRoot + '/print/ExcelExport.jsp');
			}
			public function exportEXCELLocalAll():void{
				ExportExcel.loadDGInExcel(this.LocalDataGridAll,"本地出生证使用详情（全部）",this.parentApplication.contextRoot + '/print/ExcelExport.jsp');
			}
			public function exportEXCELNonlocal():void{
				ExportExcel.loadDGInExcel(this.NonlocalDataGrid,"外地出生证使用详情",this.parentApplication.contextRoot + '/print/ExcelExport.jsp');
			}
			public function exportEXCELNonlocalAll():void{
				ExportExcel.loadDGInExcel(this.NonlocalDataGridAll,"外地出生证使用详情（全部）",this.parentApplication.contextRoot + '/print/ExcelExport.jsp');
			}
			
			private function onCountyDataGridSelectionChange(event:GridSelectionEvent):void
			{
				this.conditionTemp = DataGrid(event.target).selectedItem;
				var certificateConditionRequest:CertificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				this.areacode = this.conditionTemp.areacode;
				if(this.areaType == "2"){
					this.areaType = "4";
				}else if(this.areaType == "4"){
					this.areaType = "6";
				}else if(this.areaType == "6"){
					this.areaType = "8";
				}
				if(areaType == "2"){
					this.areacode = this.areacode+"__";
				}else if(areaType == "4"){
					this.areacode = this.areacode+"__";
				}else if(areaType == "6"){
					this.areacode = this.areacode+"___";
				}
				certificateConditionRequest.areacode = this.areacode;
				certificateConditionRequest.areacodeType = this.areaType;
				certificateConditionRequest.parameterPageindex = 1;
				certificateConditionRequest.parameterPagesize = 8;
				certificateConditionRequest.flag = "now";
				this.certificateConditionService.queryD(certificateConditionRequest);
				
				
				certificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.areacode;
				certificateConditionRequest.areacodeType = this.areaType;
				certificateConditionRequest.parameterPageindex = 1;
				certificateConditionRequest.parameterPagesize = 100;
				certificateConditionRequest.flag = "all";
				this.certificateConditionService.queryD(certificateConditionRequest);
				
			}
			
			private function onHospitalDataGridSelectionChange(event:GridSelectionEvent):void
			{
				this.conditionTemp = DataGrid(event.target).selectedItem;
				
				var certificateConditionRequest:CertificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.conditionTemp.areacode;
				certificateConditionRequest.areacodeZh = null;
				certificateConditionRequest.parameterPageindex = 1;
				certificateConditionRequest.parameterPagesize = 8;
				certificateConditionRequest.flag = "now";
				this.certificateConditionService.queryB(certificateConditionRequest);
				
				certificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.conditionTemp.areacode;
				certificateConditionRequest.areacodeZh = null;
				certificateConditionRequest.parameterPageindex = 1;
				certificateConditionRequest.parameterPagesize = 100000;
				certificateConditionRequest.flag = "all";
				this.certificateConditionService.queryB(certificateConditionRequest);
				
				certificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.conditionTemp.areacode;
				certificateConditionRequest.areacodeZh = this.conditionTemp.aredcode_Zh;
				certificateConditionRequest.parameterPageindex = 1;
				certificateConditionRequest.parameterPagesize = 8;
				certificateConditionRequest.flag = "now";
				this.certificateConditionService.queryE(certificateConditionRequest);
				
				certificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.conditionTemp.areacode;
				certificateConditionRequest.areacodeZh = this.conditionTemp.aredcode_Zh;
				certificateConditionRequest.parameterPageindex = 1;
				certificateConditionRequest.parameterPagesize = 100000;
				certificateConditionRequest.flag = "all";
				this.certificateConditionService.queryE(certificateConditionRequest);
				
				certificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.conditionTemp.areacode;
				certificateConditionRequest.areacodeZh = this.conditionTemp.aredcode_Zh;
				certificateConditionRequest.parameterPageindex = 1;
				certificateConditionRequest.parameterPagesize = 8;
				certificateConditionRequest.flag = "now";
				this.certificateConditionService.queryF(certificateConditionRequest);
				
				certificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.conditionTemp.areacode;
				certificateConditionRequest.areacodeZh = this.conditionTemp.aredcode_Zh;
				certificateConditionRequest.parameterPageindex = 1;
				certificateConditionRequest.parameterPagesize = 100000;
				certificateConditionRequest.flag = "all";
				this.certificateConditionService.queryF(certificateConditionRequest);
			}
			
			private function queryBHandler(event:ResultEvent):void
			{
				var response:Object = event.result;
				var flag:String = response.flag;
				var vd301s:ArrayCollection = response.vd301s;
				if(response.errorMessage == null) {
					if(flag == "now"){
						var rowCount:Number = response.rowCount;
						this.pagerBarFirst.pageSize = 8;
						this.pagerBarFirst.dataGrid = this.FirstDataGrid;
						this.pagerBarFirst.resultData = vd301s;
						this.pagerBarFirst.rowCount = rowCount;
						this.pagerBarFirst.pagerFunction = pagerFunctionFirst;
						this.pagerBarFirst.dataBind();
						if(vd301s.length <= 0) {
							this.firstVG.visible = false;
							this.firstVG.width = 0;
							this.firstVG.height = 0;
							this.pagerBarFirst.enabled = false;
						} else {
							this.firstVG.visible = true;
							this.firstVG.percentWidth = 100;
							this.firstVG.height = 250;
							this.pagerBarFirst.enabled = true;
						}
					}
					if(flag == "all"){
						this.FirstDataGridAll.dataProvider = vd301s;
					}
					
				} else {
					Alert.show(response.errorMessage, "系统异常");
					return;
				}
			}
			
			private function queryEHandler(event:ResultEvent):void
			{
				var response:Object = event.result;
				var flag:String = response.flag;
				var vd301s:ArrayCollection = response.vd301s;
				if(response.errorMessage == null) {
					if(flag == "now"){
						var rowCount:Number = response.rowCount;
						this.pagerBarLocal.pageSize = 8;
						this.pagerBarLocal.dataGrid = this.LocalDataGrid;
						this.pagerBarLocal.resultData = vd301s;
						this.pagerBarLocal.rowCount = rowCount;
						this.pagerBarLocal.pagerFunction = pagerFunctionLocal;
						this.pagerBarLocal.dataBind();
						
						if(vd301s.length <= 0) {
							this.localVG.visible = false;
							this.localVG.width = 0;
							this.localVG.height = 0;
							this.pagerBarLocal.enabled = false;
						} else {
							this.localVG.visible = true;
							this.localVG.percentWidth = 100;
							this.localVG.height = 250;
							this.pagerBarLocal.enabled = true;
						}
					}
					if(flag == "all"){
						this.LocalDataGridAll.dataProvider = vd301s;
					}
				} else {
					Alert.show(response.errorMessage, "系统异常");
					return;
				}
			}
			
			private function queryFHandler(event:ResultEvent):void
			{
				var response:Object = event.result;
				var flag:String = response.flag;
				var vd301s:ArrayCollection = response.vd301s;
				if(response.errorMessage == null) {
					
					if(flag == "now"){
						var rowCount:Number = response.rowCount;
						this.pagerBarNonlocal.pageSize = 8;
						this.pagerBarNonlocal.dataGrid = this.NonlocalDataGrid;
						this.pagerBarNonlocal.resultData = vd301s;
						this.pagerBarNonlocal.rowCount = rowCount;
						this.pagerBarNonlocal.pagerFunction = pagerFunctionNonlocal;
						this.pagerBarNonlocal.dataBind();
						
						if(vd301s.length <= 0) {
							this.nonlocalVG.visible = false;
							this.nonlocalVG.width = 0;
							this.nonlocalVG.height = 0;
							this.pagerBarNonlocal.enabled = false;
						} else {
							this.nonlocalVG.visible = true;
							this.nonlocalVG.percentWidth = 100;
							this.nonlocalVG.height = 250;
							this.pagerBarNonlocal.enabled = true;
						}
					}
					if(flag == "all"){
						this.NonlocalDataGridAll.dataProvider = vd301s;
					}
					
				} else {
					Alert.show(response.errorMessage, "系统异常");
					return;
				}
			}
			
			
			private function queryDHandler(event:ResultEvent):void
			{
				var response:Object = event.result;
				var flag:String = response.flag;
				var conditionTemps:ArrayCollection = response.conditionTemps;
				if(response.errorMessage == null) {
					if(flag == "now"){
						var rowCount:Number = response.rowCount;
						this.pagerBarHospital.pageSize = 8;
						this.pagerBarHospital.dataGrid = this.HospitalDataGrid;
						this.pagerBarHospital.resultData = conditionTemps;
						this.pagerBarHospital.rowCount = rowCount;
						this.pagerBarHospital.pagerFunction = pagerFunctionHospital;
						this.pagerBarHospital.dataBind();
						
						if(conditionTemps.length <= 0) {
							Alert.show("暂无数据!", "系统提示");
							this.hospitalVG.visible = false;
							this.hospitalVG.width = 0;
							this.hospitalVG.height = 0;
							this.pagerBarHospital.enabled = false;
						} else {
							this.hospitalVG.visible = true;
							this.hospitalVG.percentWidth = 100;
							this.hospitalVG.height = 250;
							this.pagerBarHospital.enabled = true;
						}
						this.firstVG.visible = false;
						this.firstVG.width = 0;
						this.firstVG.height = 0;
						
						this.localVG.visible = false;
						this.localVG.width = 0;
						this.localVG.height = 0;
						
						this.nonlocalVG.visible = false;
						this.nonlocalVG.width = 0;
						this.nonlocalVG.height = 0;
					}
					if(flag == "all"){
						this.HospitalDataGridAll.dataProvider = conditionTemps;
					}
					
				} else {
					Alert.show(response.errorMessage, "系统异常");
					return;
				}
			}
			
			private function query():void
			{
				var certificateConditionRequest:CertificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				if(certificateConditionRequest.date_start != null && certificateConditionRequest.date_end != null) {
					var r:int = ObjectUtil.compare(certificateConditionRequest.date_start, certificateConditionRequest.date_end);
					if(r == 1) {
						Alert.show("查询起始时间不能大于终止时间!", "系统提示");
						return;
					}
				}
				this.areacode = this.area.getAreaCode();
				this.areaType = this.area.getAreaType();
				if(areaType == "2"){
					this.areacode = this.areacode+"__";
				}else if(areaType == "4"){
					this.areacode = this.areacode+"__";
				}else if(areaType == "6"){
					this.areacode = this.areacode+"___";
				}
				certificateConditionRequest.areacode = this.areacode;
				certificateConditionRequest.areacodeType = this.areaType;
				certificateConditionRequest.flag = "now";
				certificateConditionRequest.parameterPageindex = 1;
				certificateConditionRequest.parameterPagesize = 8;
				this.certificateConditionService.queryC(certificateConditionRequest);
				
				
				certificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.areacode;
				certificateConditionRequest.areacodeType = this.areaType;
				certificateConditionRequest.flag = "all";
				certificateConditionRequest.parameterPageindex = 1;
				certificateConditionRequest.parameterPagesize = 100;
				this.certificateConditionService.queryC(certificateConditionRequest);
			}
			
			private function queryCHandler(event:ResultEvent):void
			{
				var response:Object = event.result;
				var flag:String = response.flag;
				var conditionTemps:ArrayCollection = response.conditionTemps;
				
				if(response.errorMessage == null) {
					if(flag == "now"){
						switch(this.areaType) {
							
							case "4" :
								
								this.countyVG.visible = true;
								this.countyVG.percentWidth = 100;
								this.countyVG.height = 250;
								
								this.hospitalVG.visible = false;
								this.hospitalVG.width = 0;
								this.hospitalVG.height = 0;
								
								this.firstVG.visible = false;
								this.firstVG.width = 0;
								this.firstVG.height = 0;
								
								this.localVG.visible = false;
								this.localVG.width = 0;
								this.localVG.height = 0;
								
								this.nonlocalVG.visible = false;
								this.nonlocalVG.width = 0;
								this.nonlocalVG.height = 0;							
								
								var rowCount:Number = response.rowCount;
								
								this.CountyDataGridAll.dataProvider = conditionTemps;
								
								this.pagerBarCounty.pageSize = 8;
								this.pagerBarCounty.dataGrid = this.CountyDataGrid;
								this.pagerBarCounty.resultData = conditionTemps;
								this.pagerBarCounty.rowCount = rowCount;
								this.pagerBarCounty.pagerFunction = pagerFunctionCounty;
								this.pagerBarCounty.dataBind();
								
								if(conditionTemps.length <= 0) {
									this.pagerBarCounty.enabled = false;
								} else {
									this.pagerBarCounty.enabled = true;
								}
								break;
							
							case "6" :
								
								this.countyVG.visible = false;
								this.countyVG.width = 0;
								this.countyVG.height = 0;
								
								this.hospitalVG.visible = true;
								this.hospitalVG.percentWidth = 100;
								this.hospitalVG.height = 250;
								
								this.firstVG.visible = false;
								this.firstVG.width = 0;
								this.firstVG.height = 0;
								
								this.localVG.visible = false;
								this.localVG.width = 0;
								this.localVG.height = 0;
								
								this.nonlocalVG.visible = false;
								this.nonlocalVG.width = 0;
								this.nonlocalVG.height = 0;							
								
								rowCount = response.rowCount;
								
								this.pagerBarHospital.pageSize = 8;
								this.pagerBarHospital.dataGrid = this.HospitalDataGrid;
								this.pagerBarHospital.resultData = conditionTemps;
								this.pagerBarHospital.rowCount = rowCount;
								this.pagerBarHospital.pagerFunction = pagerFunctionHospital;
								this.pagerBarHospital.dataBind();
								if(conditionTemps.length <= 0) {
									this.pagerBarHospital.enabled = false;
								} else {
									this.pagerBarHospital.enabled = true;
								}
								break;
							case "8" :
								
								this.countyVG.visible = false;
								this.countyVG.width = 0;
								this.countyVG.height = 0;
								
								this.hospitalVG.visible = true;
								this.hospitalVG.percentWidth = 100;
								this.hospitalVG.height = 250;
								
								this.firstVG.visible = false;
								this.firstVG.width = 0;
								this.firstVG.height = 0;
								
								this.localVG.visible = false;
								this.localVG.width = 0;
								this.localVG.height = 0;
								
								this.nonlocalVG.visible = false;
								this.nonlocalVG.width = 0;
								this.nonlocalVG.height = 0;	
								
								rowCount = response.rowCount;
								
								this.pagerBarHospital.pageSize = 8;
								this.pagerBarHospital.dataGrid = this.HospitalDataGrid;
								this.pagerBarHospital.resultData = conditionTemps;
								this.pagerBarHospital.rowCount = rowCount;
								this.pagerBarHospital.pagerFunction = pagerFunctionHospital;
								this.pagerBarHospital.dataBind();
								if(conditionTemps.length <= 0) {
									this.pagerBarHospital.enabled = false;
								} else {
									this.pagerBarHospital.enabled = true;
								}
								
								break;
						}
					}
					
					if(flag == "all"){
						switch(this.areaType) {
							case "4" :
								this.CountyDataGridAll.dataProvider = conditionTemps;
								break;
							case "6" :
								this.HospitalDataGridAll.dataProvider = conditionTemps;
								break;
							case "8" :
								this.HospitalDataGridAll.dataProvider = conditionTemps;
								break;
						}
					}
					
					
				} else {
					Alert.show(response.errorMessage, "系统异常");
					return;
				}
			}
			public function pagerFunctionFirst(currentPageIndex:int, pageSize:int):void
			{
				var certificateConditionRequest:CertificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.conditionTemp.areacode;
				certificateConditionRequest.parameterPageindex = currentPageIndex;
				certificateConditionRequest.parameterPagesize = pageSize;
				certificateConditionRequest.flag = "now";
				this.certificateConditionService.queryB(certificateConditionRequest);
			}
			
			public function pagerFunctionNonlocal(currentPageIndex:int, pageSize:int):void
			{
				var certificateConditionRequest:CertificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.conditionTemp.areacode;
				certificateConditionRequest.areacodeZh = this.conditionTemp.aredcode_Zh;
				certificateConditionRequest.parameterPageindex = currentPageIndex;
				certificateConditionRequest.parameterPagesize = pageSize;
				certificateConditionRequest.flag = "now";
				this.certificateConditionService.queryF(certificateConditionRequest);
			}
			
			public function pagerFunctionLocal(currentPageIndex:int, pageSize:int):void
			{
				var certificateConditionRequest:CertificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.conditionTemp.areacode;
				certificateConditionRequest.areacodeZh = this.conditionTemp.aredcode_Zh;
				certificateConditionRequest.parameterPageindex = currentPageIndex;
				certificateConditionRequest.parameterPagesize = pageSize;
				certificateConditionRequest.flag = "now";
				this.certificateConditionService.queryE(certificateConditionRequest);
			}
			
			public function pagerFunctionCounty(currentPageIndex:int, pageSize:int):void
			{
				var certificateConditionRequest:CertificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.areacode;
				certificateConditionRequest.areacodeType = this.areaType;
				certificateConditionRequest.parameterPageindex = currentPageIndex;
				certificateConditionRequest.parameterPagesize = pageSize;
				certificateConditionRequest.flag = "now";
				this.certificateConditionService.queryC(certificateConditionRequest);
			}
			
			public function pagerFunctionHospital(currentPageIndex:int, pageSize:int):void
			{
				var certificateConditionRequest:CertificateConditionRequest = new CertificateConditionRequest();
				certificateConditionRequest.date_start = DateField.stringToDate(this.date_start.text,"YYYY-MM-DD");
				certificateConditionRequest.date_end = DateField.stringToDate(this.date_end.text,"YYYY-MM-DD");
				certificateConditionRequest.areacode = this.areacode;
				certificateConditionRequest.areacodeType = this.areaType;
				certificateConditionRequest.parameterPageindex = currentPageIndex;
				certificateConditionRequest.parameterPagesize = pageSize;
				certificateConditionRequest.flag = "now";
				this.certificateConditionService.queryD(certificateConditionRequest);
			}
	
		]]>
	</fx:Script>
	
	<mx:TabNavigator  width="100%" chromeColor="#ffffff" creationPolicy="all">
		<s:NavigatorContent  label="市级监控" width="100%">
			<s:VGroup width="100%">
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="申领单位"/>
					<component:AreaComboBox id="area"/>
				</s:HGroup>
				
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="发放时间"/><mx:DateField yearNavigationEnabled="true" id="date_start" width="120" dayNames='["日","一","二","三","四","五","六"]'
														monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
														formatString="YYYY-MM-DD"/>
					<s:Label text="至"/>
					<mx:DateField yearNavigationEnabled="true" id="date_end" width="120" dayNames='["日","一","二","三","四","五","六"]'
								  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
								  formatString="YYYY-MM-DD"/>
					<s:Button label="查询" click="query()"/>
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
	</mx:TabNavigator>
	<s:Scroller width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup width="100%" paddingBottom="10">
			<s:VGroup width="100%" id="countyVG">
				<s:VGroup horizontalAlign="center" width="100%">
					<s:Label text="县级辖区出生情况统计" fontSize="15" fontWeight="bold"/>
				</s:VGroup>
				<s:DataGrid id="CountyDataGrid" editable="true" rowHeight="22" width="100%" height="203" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">  
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="序号" width="70" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
							<s:GridColumn dataField="aredcode_Zh" headerText="地区名称"/>
							<s:GridColumn dataField="boy" headerText="男"/>
							<s:GridColumn dataField="girl" headerText="女"/>
							<s:GridColumn dataField="total" headerText="总数"/>
							<s:GridColumn dataField="localNum" headerText="本地"/>
							<s:GridColumn dataField="nonlocalNum" headerText="外地"/>
						<!--
							<s:GridColumn dataField="precentBoy" headerText="男孩比例" visible="false"/>
							<s:GridColumn dataField="areacode" headerText="地区编码" visible="false"/>
							<s:GridColumn dataField="se" headerText="顺序" visible="false"/>
							<s:GridColumn dataField="precentGirl" headerText="女孩比例" visible="false"/>
						-->
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
				<component:PagerBar id="pagerBarCounty" enabled="false"/>
				
				
				<s:DataGrid id="CountyDataGridAll" visible="false" editable="false" rowHeight="0" width="100%" height="0">  
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="序号" width="70" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
							<s:GridColumn dataField="aredcode_Zh" headerText="地区名称"/>
							<s:GridColumn dataField="boy" headerText="男"/>
							<s:GridColumn dataField="girl" headerText="女"/>
							<s:GridColumn dataField="total" headerText="总数"/>
							<s:GridColumn dataField="localNum" headerText="本地"/>
							<s:GridColumn dataField="nonlocalNum" headerText="外地"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
			</s:VGroup>
			<s:VGroup width="100%" id="hospitalVG">
				<s:VGroup horizontalAlign="center" width="100%">
					<s:Label text="各县医院辖区出生情况统计" fontSize="15" fontWeight="bold" id="one"/>
				</s:VGroup>
				<s:DataGrid id="HospitalDataGrid" editable="true" rowHeight="22" width="100%" height="203" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">  
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="序号" width="70" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
							<s:GridColumn dataField="aredcode_Zh" headerText="地区名称"/>
							<s:GridColumn dataField="boy" headerText="男"/>
							<s:GridColumn dataField="girl" headerText="女"/>
							<s:GridColumn dataField="total" headerText="总数"/>
							<s:GridColumn dataField="localNum" headerText="本地"/>
							<s:GridColumn dataField="nonlocalNum" headerText="外地"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
				<component:PagerBar id="pagerBarHospital" enabled="false"/>
				<s:DataGrid id="HospitalDataGridAll" visible="false" rowHeight="22" width="100%" height="203" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">  
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="序号" width="70" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
							<s:GridColumn dataField="aredcode_Zh" headerText="地区名称"/>
							<s:GridColumn dataField="boy" headerText="男"/>
							<s:GridColumn dataField="girl" headerText="女"/>
							<s:GridColumn dataField="total" headerText="总数"/>
							<s:GridColumn dataField="localNum" headerText="本地"/>
							<s:GridColumn dataField="nonlocalNum" headerText="外地"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
			</s:VGroup>
			<s:VGroup width="100%" id="firstVG">
				<s:VGroup horizontalAlign="center" width="100%">
					<s:Label text="出生证使用详情" fontSize="15" fontWeight="bold" id="two"/>
				</s:VGroup>
				<s:DataGrid id="FirstDataGrid" editable="true" rowHeight="22" width="100%" height="203" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">  
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="序号" width="70" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
							<s:GridColumn dataField="d30102" width="60" headerText="姓名"/>
							<s:GridColumn dataField="d30103Zh" width="60" headerText="性别"/>
							<s:GridColumn dataField="d30104" headerText="出生日期"/>
							<s:GridColumn dataField="d30110" headerText="出生证号"/>
							<s:GridColumn dataField="d30111" width="80" headerText="母亲姓名"/>
							<s:GridColumn dataField="d30121" headerText="母亲家庭地址"/>
							<s:GridColumn dataField="d30116" width="80" headerText="父亲姓名"/>
							<s:GridColumn dataField="d30148" headerText="父亲家庭地址"/>
							<s:GridColumn dataField="d30126Zh" headerText="签证机构"/>
							<s:GridColumn dataField="d30128" headerText="签发时间"/>
							<s:GridColumn dataField="d30136" headerText="领证人"/>
							<s:GridColumn dataField="d30139" headerText="领证人证件号码"/>
					<!--
							<s:GridColumn dataField="d30127" headerText="签发人" visible="false"/>
							<s:GridColumn dataField="d30129" headerText="体重" visible="false"/>
							<s:GridColumn dataField="d30130" headerText="签发机构类型" visible="false"/>
							<s:GridColumn dataField="d30130Zh" headerText="签发机构类型" visible="false"/>
							<s:GridColumn dataField="d30131" headerText="所属地区" visible="false"/>
							<s:GridColumn dataField="d30131Zh" headerText="所属地区" visible="false"/>
							<s:GridColumn dataField="d30132" headerText="住院病例号" visible="false"/>
							<s:GridColumn dataField="d30133" headerText="接生人填表日期" visible="false"/>
							<s:GridColumn dataField="d30134" headerText="母亲有效证件类别" visible="false"/>
							<s:GridColumn dataField="d30134Zh" headerText="母亲有效证件类别" visible="false"/>
							<s:GridColumn dataField="d30135" headerText="父亲有效证件类别" visible="false"/>
							<s:GridColumn dataField="d30135Zh" headerText="父亲有效证件类别" visible="false"/>
							<s:GridColumn dataField="d30137" headerText="与新生儿关系" visible="false"/>
							<s:GridColumn dataField="d30137Zh" headerText="与新生儿关系" visible="false"/>
							<s:GridColumn dataField="d30138" headerText="领证人有效证件类别" visible="false"/>
							<s:GridColumn dataField="d30138Zh" headerText="领证人有效证件类别" visible="false"/>
							<s:GridColumn dataField="d30140" headerText="领证人填表日期" visible="false"/>
							<s:GridColumn dataField="d30101" headerText="主键" visible="false"/>
							<s:GridColumn dataField="d30105Zh" headerText="出生地" visible="false"/>
							<s:GridColumn dataField="d30106" headerText="其他出生地" visible="false"/>
							<s:GridColumn dataField="d30107" headerText="出生孕周" visible="false"/>
							<s:GridColumn dataField="d30108" headerText="身长" visible="false"/>
							<s:GridColumn dataField="d30109" headerText="健康状况" visible="false"/>		
							<s:GridColumn dataField="d30112" headerText="母亲身份证号" visible="false"/>
							<s:GridColumn dataField="d30113" headerText="母亲出生日期" visible="false"/>
							<s:GridColumn dataField="d30114" headerText="母亲国籍" visible="false"/>
							<s:GridColumn dataField="d30115" headerText="母亲民族" visible="false"/>
							<s:GridColumn dataField="d30117" headerText="父亲身份证号" visible="false"/>
							<s:GridColumn dataField="d30118" headerText="父亲出生日期" visible="false"/>
							<s:GridColumn dataField="d30119" headerText="父亲国籍" visible="false"/>
							<s:GridColumn dataField="d30120" headerText="父亲民族" visible="false"/>
							<s:GridColumn dataField="d30122" headerText="出生地点分类" visible="false"/>
							<s:GridColumn dataField="d30123" headerText="出生地其他" visible="false"/>
							<s:GridColumn dataField="d30124" headerText="接生机构" visible="false"/>
							<s:GridColumn dataField="d30125" headerText="接生员" visible="false"/>
					-->
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
				<component:PagerBar id="pagerBarFirst" enabled="false"/>
				<s:DataGrid id="FirstDataGridAll" visible="false" editable="true" rowHeight="22" width="100%" height="203" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">  
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="序号" width="70" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
							<s:GridColumn dataField="d30102" width="60" headerText="姓名"/>
							<s:GridColumn dataField="d30103Zh" width="60" headerText="性别"/>
							<s:GridColumn dataField="d30104" headerText="出生日期"/>
							<s:GridColumn dataField="d30110" headerText="出生证号"/>
							<s:GridColumn dataField="d30111" width="80" headerText="母亲姓名"/>
							<s:GridColumn dataField="d30121" headerText="母亲家庭地址"/>
							<s:GridColumn dataField="d30116" width="80" headerText="父亲姓名"/>
							<s:GridColumn dataField="d30148" headerText="父亲家庭地址"/>
							<s:GridColumn dataField="d30126Zh" headerText="签证机构"/>
							<s:GridColumn dataField="d30128" headerText="签发时间"/>
							<s:GridColumn dataField="d30136" headerText="领证人"/>
							<s:GridColumn dataField="d30139" headerText="领证人证件号码"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
			</s:VGroup>
			<s:VGroup width="100%" id="localVG">
				<s:VGroup horizontalAlign="center" width="100%">
					<s:Label text="本地出生证使用详情" fontSize="15" fontWeight="bold"/>
				</s:VGroup>
				<s:DataGrid id="LocalDataGrid" editable="true" rowHeight="22" width="100%" height="203" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">  
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="序号" width="70" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
							<s:GridColumn dataField="d30102" width="60" headerText="姓名"/>
							<s:GridColumn dataField="d30103Zh" width="60" headerText="性别"/>
							<s:GridColumn dataField="d30104" headerText="出生日期"/>
							<s:GridColumn dataField="d30110" headerText="出生证号"/>
							<s:GridColumn dataField="d30111" width="80" headerText="母亲姓名"/>
							<s:GridColumn dataField="d30121" headerText="母亲家庭地址"/>
							<s:GridColumn dataField="d30116" width="80" headerText="父亲姓名"/>
							<s:GridColumn dataField="d30148" headerText="父亲家庭地址"/>
							<s:GridColumn dataField="d30126Zh" headerText="签证机构"/>
							<s:GridColumn dataField="d30128" headerText="签发时间"/>
							<s:GridColumn dataField="d30136" headerText="领证人"/>
							<s:GridColumn dataField="d30139" headerText="领证人证件号码"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
				<component:PagerBar id="pagerBarLocal" enabled="false"/>
				<s:DataGrid id="LocalDataGridAll" visible="false" editable="true" rowHeight="22" width="100%" height="203" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">  
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="序号" width="70" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
							<s:GridColumn dataField="d30102" width="60" headerText="姓名"/>
							<s:GridColumn dataField="d30103Zh" width="60" headerText="性别"/>
							<s:GridColumn dataField="d30104" headerText="出生日期"/>
							<s:GridColumn dataField="d30110" headerText="出生证号"/>
							<s:GridColumn dataField="d30111" width="80" headerText="母亲姓名"/>
							<s:GridColumn dataField="d30121" headerText="母亲家庭地址"/>
							<s:GridColumn dataField="d30116" width="80" headerText="父亲姓名"/>
							<s:GridColumn dataField="d30148" headerText="父亲家庭地址"/>
							<s:GridColumn dataField="d30126Zh" headerText="签证机构"/>
							<s:GridColumn dataField="d30128" headerText="签发时间"/>
							<s:GridColumn dataField="d30136" headerText="领证人"/>
							<s:GridColumn dataField="d30139" headerText="领证人证件号码"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
			</s:VGroup>			
			<s:VGroup width="100%" id="nonlocalVG">
				<s:VGroup horizontalAlign="center" width="100%">
					<s:Label text="外地出生证使用详情" fontSize="15" fontWeight="bold"/>
				</s:VGroup>
				<s:DataGrid id="NonlocalDataGrid" editable="true" rowHeight="22" width="100%" height="203" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">  
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="序号" width="70" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
							<s:GridColumn dataField="d30102" width="60" headerText="姓名"/>
							<s:GridColumn dataField="d30103Zh" width="60" headerText="性别"/>
							<s:GridColumn dataField="d30104" headerText="出生日期"/>
							<s:GridColumn dataField="d30110" headerText="出生证号"/>
							<s:GridColumn dataField="d30111" width="80" headerText="母亲姓名"/>
							<s:GridColumn dataField="d30121" headerText="母亲家庭地址"/>
							<s:GridColumn dataField="d30116" width="80" headerText="父亲姓名"/>
							<s:GridColumn dataField="d30148" headerText="父亲家庭地址"/>
							<s:GridColumn dataField="d30126Zh" headerText="签证机构"/>
							<s:GridColumn dataField="d30128" headerText="签发时间"/>
							<s:GridColumn dataField="d30136" headerText="领证人"/>
							<s:GridColumn dataField="d30139" headerText="领证人证件号码"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
				<component:PagerBar id="pagerBarNonlocal" enabled="false"/>
				<s:DataGrid id="NonlocalDataGridAll" visible="false" editable="true" rowHeight="22" width="100%" height="203" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">  
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="序号" width="70" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
							<s:GridColumn dataField="d30102" width="60" headerText="姓名"/>
							<s:GridColumn dataField="d30103Zh" width="60" headerText="性别"/>
							<s:GridColumn dataField="d30104" headerText="出生日期"/>
							<s:GridColumn dataField="d30110" headerText="出生证号"/>
							<s:GridColumn dataField="d30111" width="80" headerText="母亲姓名"/>
							<s:GridColumn dataField="d30121" headerText="母亲家庭地址"/>
							<s:GridColumn dataField="d30116" width="80" headerText="父亲姓名"/>
							<s:GridColumn dataField="d30148" headerText="父亲家庭地址"/>
							<s:GridColumn dataField="d30126Zh" headerText="签证机构"/>
							<s:GridColumn dataField="d30128" headerText="签发时间"/>
							<s:GridColumn dataField="d30136" headerText="领证人"/>
							<s:GridColumn dataField="d30139" headerText="领证人证件号码"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
			</s:VGroup>				
			
		</s:VGroup>
	</s:Scroller>
</s:Module>
