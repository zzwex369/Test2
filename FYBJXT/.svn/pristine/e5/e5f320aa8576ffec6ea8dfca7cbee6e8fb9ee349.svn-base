<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		  creationComplete="moduleCreationComplete()" xmlns:component="com.xyw.sys.custom.component.*">
	<fx:Declarations>
		<s:RemoteObject id="birthService" destination="birthService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="validateSaveBirthCertiticate" result="validateSaveBirthCertiticateHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="reissueBirthCertificateDJBService" destination="reissueBirthCertificateDJBService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="saveReissueBirthCertificateDJB" result="saveReissueBirthCertificateDJBHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		mx|GridItem
		{
			horizontalAlign:right;
			verticalAlign:middle;
		}
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|TextInput
		{
			fontFamily:微软雅黑;
		}
	</fx:Style>
	
	<fx:Script>
		<![CDATA[
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.module.csyxzm.model.D305;
			import com.xyw.module.csyxzm.model.D305Request;
			import com.xyw.module.csyxzm.model.D305Response;
			import com.xyw.module.csyxzm.model.QueryBirthRequest;
			import com.xyw.module.csyxzm.model.QueryBirthResponse;
			import com.xyw.module.csyxzm.model.VBirthInfo;
			import com.xyw.module.csyxzm.model.VD301;
			import com.xyw.sys.custom.component.SecurityControler;
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.ComboBoxDataResponse;
			import com.xyw.sys.model.SystemUser;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.events.IndexChangeEvent;
			import spark.formatters.DateTimeFormatter;
			
			private var comboBoxDataRequest:ComboBoxDataRequest;
			private var vBrithInfo:VBirthInfo;
			public var d305:D305 = null;
			public var vd301:VD301 = null;
			private var d305_04_str:String;
			private var d305_04_date:Date;
			public var d30105:String;
			public var d30101:int;
			public var d305PromptMessage:String = "";
			public var i:int =1;
			
			public var systemUser:SystemUser = null;
			[Bindable]
			public var sexData:ArrayCollection = new ArrayCollection([{label:"请选择",data:0},{label:"男",data:1},{label:"女",data:2},{label:"未知",data:3}]);
			[Bindable]
			public var familyData:ArrayCollection = new ArrayCollection([{label:"请选择",data:0},{label:"已办理入户",data:1},{label:"未办理入户",data:2}]);
			[Bindable]
			public var bufaData:ArrayCollection = new ArrayCollection([{label:"请选择",data:0},{label:"遗失",data:1},{label:"被盗",data:2}]);
			
			[Bindable]
			public var gradeVal:String="0"; //单双亲  父亲1  母亲2  双亲0
			[Bindable]
			private var birthVal:int=2;  //出生日期   1显示，2不显示
			[Bindable]
			private var phoneVal:int=2;  //联系电话   1显示，2不显示
			[Bindable]
			private var areaVal:int=2; //家庭地址 户口地址    1显示，2不显示
			[Bindable]
			private var cardVal:int=1; //结婚证编号 亲子鉴定证明编号    1显示，2不显示
			[Bindable]
			private var printVal:String="14"; //打印状态  14以往年度补发-机构外首发-登记表
			public var loadDataArr:Array=[[[""],[""],[""],[""],[""],[""]],[[""],[""],[""],[""],[""],[""],],[[""]],[[""],[""]],[[""],[""]],[[""]],[[""]],[[""]],[[""]],[[""]]];
			
			//****************启动按钮权限控制****************//
			private function security():void{
				SecurityControler.start(null,'visible');
				SecurityControler.addAllPerms(this.parentApplication.permissionList);
			}
			
			private function moduleCreationComplete():void
			{
				//security();
				this.systemUser = this.parentApplication.systemUser;
				//检查读卡权限
				if(this.systemUser.duka == "1"){
					this.btnRead.enabled = true;
				}
				initializeComboBox();
				
				var date:Date = new Date();
				this.hour.text = (String)(date.hours);
				this.minute.text = (String)(date.minutes);
				this.parents3.opensave =opensave;
			}
			private function opensave():void{
				this.validateRenewBirth.enabled = true;
			}
			private function initializeComboBox():void
			{
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_01";
				comboBoxDataRequest.sql = "select * from S301_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_02";
				comboBoxDataRequest.sql = "select * from S301_02";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_05";
				comboBoxDataRequest.sql = "select * from S301_05";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				var institutionCode:String =this.systemUser.institutionCode;
				if(institutionCode=='41130200000013' || institutionCode=='41132100000002' || institutionCode=='41133000000006' ||
					institutionCode=='41132400000005' || institutionCode=='41130300000002' || institutionCode=='41132200000003' ||
					institutionCode=='41132700000003' || institutionCode=='41138100000002' || institutionCode=='41132300000004' ||
					institutionCode=='41132800000002' || institutionCode=='41132900000002' || institutionCode=='41132600000002' || institutionCode=='41132500000004' ){
					comboBoxDataRequest.sql = "select t.d101_01, t.d101_02 from D101 t where t.d101_01 like '"+institutionCode.substring(0,6)+"%' ";
				}else{
					comboBoxDataRequest.sql = "select t.d101_01, t.d101_02 from D101 t where t.d101_01 ="+this.systemUser.institutionCode+"or t.d101_11 ="+this.systemUser.institutionCode;
				}
				comboBoxDataRequest.flag = "D101";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_06";
				comboBoxDataRequest.flag = "S301_06";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_07";
				comboBoxDataRequest.flag = "S301_07";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select t.S_01, t.S_02 from S401_01 t where t.S_01 in ('3','4','10','9')";
				comboBoxDataRequest.flag = "S401_01_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S305_01";
				comboBoxDataRequest.sql = "select * from S305_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_08";
				comboBoxDataRequest.sql = "select * from S301_08";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
			}
			
			/*-----------------返回数据放到赋值到下拉菜单-----------------*/
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object =  event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				
				//				this.d305_03.selectedIndex = 0;
				if(flag == "S301_01")
				{
					this.d305_03.dataProvider = comboBoxDataList;
					this.d305_03.selectedIndex = 0;
				}else if(flag == "D101")
				{
					var index:int = this.getDropDownListSelectedIndex(comboBoxDataList, this.systemUser.institutionCode);
					this.d305_36.dataProvider = comboBoxDataList;
					this.d305_36.selectedIndex = index;
					this.d305_36.enabled = false;
					this.d305_11.dataProvider = comboBoxDataList;
					this.d305_11.selectedIndex = 0;
					this.d305_11.enabled = true;
				}else if(flag == "S301_06")
				{
					this.d305_30.dataProvider = comboBoxDataList;
					this.d305_30.selectedIndex = 1;
				}else if(flag == "S301_07")
				{
					this.d305_29.dataProvider = comboBoxDataList;
					this.d305_29.selectedIndex = 0;
				}else if(flag == "S305_01")
				{
					this.d305_38.dataProvider = comboBoxDataList;
					this.d305_38.selectedIndex = 0;
				}else if(flag == "S401_01_01")
				{
					this.d305_32.dataProvider = comboBoxDataList;
					this.d305_32.selectedIndex = 0;
				}else if(flag == "S301_08")
				{
					this.d305_42.dataProvider = comboBoxDataList;
					this.d305_42.selectedIndex = 0;
				}
				
				this.d305_03.selectedIndex = 0;
				this.d305_29.selectedIndex = 0;
			}
			
			/*-----------------默认国籍 中国---------------------*/
			private function getCountrySelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "CHN") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			/*-----------------默认民族  汉族---------------------*/
			private function getVolkSelectedIndex(arrayCollection:ArrayCollection):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == "01") {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			private function getDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.data == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
			
			private function validateRenewBirthCertificate():void
			{
				var patternFather:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
				var patternMonther:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
				if(StringUtil.trim(this.d305_02.text) == "")
				{
					Alert.show("请输入婴儿姓名!","系统提示");
					return;
				}else if(this.d305_03.selectedItem.data == 0)
				{
					Alert.show("请选择性别!","系统提示");
					return;
				}else if(this.d305_04.text == "")
				{
					Alert.show("请选择婴儿出生日期!","系统提示");
					return;
				}else if((Number)(this.hour.text) < 0 || (Number)(this.hour.text) > 23) 
				{
					Alert.show("输入时间(小时)不符合格式", "系统提示");
					return;
				}else if((Number)(this.minute.text) < 0 || (Number)(this.minute.text) > 59) 
				{
					Alert.show("输入时间(分钟)不符合格式", "系统提示");
					return;
				}else if(this.d305_13.text == "")
				{
					Alert.show("请选择填表日期!","系统提示!");
					return;
				}else if(this.d305_07.text=="")
				{
					Alert.show("请输入孕周天数！","系统提示");
					return;
				}else if(this.d305_42.selectedItem.data == 0)
				{
					Alert.show("请选择胎数！","系统提示");
					return;
				}else if(this.d305_12.text == "")
				{
					Alert.show("请输入接生员!","系统提示");
					return;
				}else if(StringUtil.trim(this.d305_33.text) == "")
				{
					Alert.show("请输入原出生证号!","系统提示");
					return;
				}else if(StringUtil.trim(this.d305_34.text) == "")
				{
					Alert.show("请输入新出生证号!","系统提示");
					return;
				}else if(this.d305_33.text == this.d305_34.text)
				{
					Alert.show("新出生证号不能与原出生证号相同!","系统提示");
					return;
				}else if(this.d305_38.selectedItem.data == 0){
					Alert.show("请选择户口登记请况！","系统提示");
					return;
				}
				if(this.d305_08.value == 0){
					Alert.show("请输入婴儿的身长！","系统提示");
					return;
				}
				if(this.d305_08.value >= 75){
					Alert.show("婴儿的身长应小于75cm！","系统提示");
					return;
				}
				if(this.d305_08.value <= 25){
					Alert.show("婴儿的身长应大于25cm！","系统提示");
					return;
				}
				if(this.d305_09.value == 0){
					Alert.show("请输入婴儿的体重！","系统提示");
					return;
				}
				if(this.d305_09.value >= 10000){
					Alert.show("婴儿的体重应小于10000g！","系统提示");
					return;
				}
				if(this.d305_09.value <= 300){
					Alert.show("婴儿的体重应大于300g！","系统提示");
					return;
				}
				if(this.d305_32.selectedItem.data == 0)
				{
					Alert.show("请选择补发原因","系统提示");
					return;
				}else if(StringUtil.trim(this.d305_37.text) == "")
				{
					Alert.show("请输入补证日期!","系统提示");
					return;
				}if(this.d305_32.selectedIndex != 3){
					if(StringUtil.trim(this.d305_40.text) == "")
					{
						Alert.show("请输入报刊名称!","系统提示");
						return;
					}
					if(StringUtil.trim(this.d305_41.text) == "")
					{
						Alert.show("请输入报刊刊登日期!","系统提示");
						return;
					}
				}
				
				if(this.d305_36.selectedItem.data == 0){
					Alert.show("请选择补证机构！","系统提示");
					return;
				}
				if(this.d305_05.getAreaCode().length<8){
					Alert.show("出生地选到乡镇级别!", "系统提示");
					return;
				}
				
				if(parents3.verification()){
					return;
				}
				
				if(StringUtil.trim(this.d305_28.text) == "")
				{
					Alert.show("请输入领证人姓名!","系统提示");
					return;
				}else if(this.d305_29.selectedItem.data == 0)
				{
					Alert.show("请输入领证人与新生儿关系!","系统提示");
					return;
				}else if(this.d305_30.selectedItem.data == 0)
				{
					Alert.show("请输入领证人有效证件类别!","系统提示");
					return;
				}
				if(StringUtil.trim(this.d305_31.text) == "")
				{
					Alert.show("请输入领证人证件号码!","系统提示");
					return;
				}
				
				var queryBirthRequest:QueryBirthRequest = new QueryBirthRequest();
				queryBirthRequest.d301_10 = StringUtil.trim(this.d305_33.text);
				this.birthService.validateSaveBirthCertiticate(queryBirthRequest);
				i=1;
			}
			
			private function validateSaveBirthCertiticateHandler(event:ResultEvent):void
			{
				var queryBirthResponse:Object = event.result;
				if(i==1){
					if(!queryBirthResponse.state){
						Alert.show("请登记补发登记表!","系统提示");
						return;
					}
					var queryBirthRequest:QueryBirthRequest = new QueryBirthRequest();
					queryBirthRequest.d301_10 = StringUtil.trim(this.d305_34.text);
					this.birthService.validateSaveBirthCertiticate(queryBirthRequest);
					i=2;
				}else if(i==2){
					if(!queryBirthResponse.state){
						Alert.show(queryBirthResponse.errorMessage.toString(),"系统提示");
						return;
					}
					Alert.yesLabel = '是'; 
					Alert.noLabel = '否';
					Alert.show('确认保存信息？','保存信息化之前补发登记表',1|2,this,saveReissueBirthCertificateDJB);
				}
			}
			private function saveReissueBirthCertificateDJB(event:CloseEvent):void
			{	
				if(event.detail == Alert.YES){
					var d305Request:D305Request = new D305Request();
					d305 = new D305();
					
					this.d305.d30502 = this.d305_02.text;
					this.d305.d30503 = this.d305_03.selectedItem.data;
					var dateTimeFormatter:DateTimeFormatter = new DateTimeFormatter();
					dateTimeFormatter.dateTimePattern = "yyyy-MM-dd";
					var dateTime_str:String = this.d305_04.text;
					this.d305_04_str = dateTime_str + " " +  this.hour.text + ":" + this.minute.text;
					this.d305_04_date = DateFormatter.parseDateString(this.d305_04_str);
					this.d305.d30504 = this.d305_04_date;
					
					this.d305.d30505 = this.d305_05.getAreaCode();
					this.d305.d30535 = DateFormatter.parseDateString(this.d305_35.text);
					this.d305.d30539 = 0;
					
					this.d305.d30506 = this.d305_06.value;
					this.d305.d30507 = (int)(this.d305_07.text);
					this.d305.d30508 = this.d305_08.value;
					this.d305.d30509 = this.d305_09.value;
					this.d305.d30510 = this.d305_10.text;
					this.d305.d30511 = this.d305_11.selectedItem.data;
					this.d305.d30512 = this.d305_12.text;
					this.d305.d30513 = DateFormatter.parseDateString(this.d305_13.text);
					
					var saveDataArr:Array =parents3.saveRecord();
					this.d305.d30516 =equVaule(saveDataArr[0][0]); //母亲姓名
					this.d305.d30517 =equVaule(saveDataArr[0][1]); //母亲证件类别
					this.d305.d30518 =equVaule(saveDataArr[0][2]); //母亲证件号码
					
					this.d305.d30520 =equVaule(saveDataArr[0][3]); //母亲民族
					this.d305.d30521 =equVaule(saveDataArr[0][4]); //母亲身份证地址
					this.d305.d30519 =equVaule(saveDataArr[0][5]); //母亲国籍
					
					
					this.d305.d30522 =equVaule(saveDataArr[1][0]); //父亲姓名
					this.d305.d30523 =equVaule(saveDataArr[1][1]); //父亲证件类别
					this.d305.d30524 =equVaule(saveDataArr[1][2]); //父亲证件号码
					
					this.d305.d30526 =equVaule(saveDataArr[1][3]); //父亲民族
					this.d305.d30527 =equVaule(saveDataArr[1][4]); //父亲身份证地址
					this.d305.d30525 =equVaule(saveDataArr[1][5]); //父亲国籍
					
					this.d305.d30514 =equVaule(saveDataArr[5][0]);  //结婚证编号
					this.d305.d30515 =equVaule(saveDataArr[6][0]);  //亲子鉴定证明编号
					
					var fm:String="";
					if(saveDataArr[9][0] !=null && saveDataArr[9][0]!="0"){
						fm =saveDataArr[9][0];
					}
					this.d305.d30545=fm;
					
					this.d305.d30528 = this.d305_28.text;
					this.d305.d30529 = this.d305_29.selectedItem.data;
					this.d305.d30530 = this.d305_30.selectedItem.data;
					this.d305.d30531 = this.d305_31.text;
					this.d305.d30532 = this.d305_32.selectedItem.data;
					this.d305.d30533 = this.d305_33.text;
					this.d305.d30534 = this.d305_34.text;
					this.d305.d30536 = this.d305_36.selectedItem.data;
					this.d305.d30537 = DateFormatter.parseDateString(this.d305_37.text);
					this.d305.d30538 = this.d305_38.selectedItem.data;
					this.d305.d30540 = this.d305_40.text;
					this.d305.d30541 = DateFormatter.parseDateString(this.d305_41.text);
					this.d305.d30542 = this.d305_42.selectedItem.data;
					
					d305Request.d305 = this.d305;
					
					this.reissueBirthCertificateDJBService.saveReissueBirthCertificateDJB(d305Request);
					this.validateRenewBirth.enabled =false;
				}
			}
			
			private function equVaule(value:String):String{
				if(value !=null && value !="null")
					return value;
				return "";
			}
			
			private function saveReissueBirthCertificateDJBHandler(event:ResultEvent):void
			{
				var d305Response:D305Response = event.result as D305Response;
				if(d305Response.errorMessage == null){
					//Alert.show(d305Response.promptMessage,"系统提示");
					this.d305PromptMessage = d305Response.promptMessage;
					Alert.show(d305PromptMessage,"系统提示");
					
				}else{
					Alert.show(d305Response.errorMessage,"系统提示");
					return;
				}
			}
			
			private function alertCallBack(event:CloseEvent):void
			{
				var urlRequest:URLRequest = null;
				urlRequest = new URLRequest(this.parentApplication.contextRoot + "/CsyxzmBfDJBServlet?d30534=" + this.d305.d30534 + "&flagF=0&d30502=" + encodeURIComponent(this.d305.d30502));
				navigateToURL(urlRequest,"_blank");
				Alert.show(this.d305PromptMessage,"系统提示");
			}
			
			protected function d305_29ChangeHandler(event:IndexChangeEvent):void
			{
				var d30530DataProvider:ArrayCollection = ArrayCollection(this.d305_30.dataProvider);
				var saveDataArr:Array =parents3.saveRecord();
				
				var id:String = this.d305_29.selectedItem.data;
				if(id == "1"){   //领证人父亲
					this.d305_28.text = saveDataArr[1][0];
					this.d305_31.text = saveDataArr[1][2];
					var d30530Index:int =this.getDropDownListSelectedIndex(d30530DataProvider,saveDataArr[1][1]);
					if(d30530Index != 0){
						this.d305_30.selectedIndex =d30530Index;
					}
				}else if(id == "2"){   //领证人母亲
					this.d305_28.text =equVaule(saveDataArr[0][0]);
					this.d305_31.text =equVaule(saveDataArr[0][2]);
					var d30530Index_:int =this.getDropDownListSelectedIndex(d30530DataProvider,equVaule(saveDataArr[0][1]));
					if(d30530Index_ != 0){
						this.d305_30.selectedIndex =d30530Index_;
					}
				}else {
					this.d305_28.text = "";
					this.d305_31.text = "";
					this.d305_30.selectedIndex =1;
				}
			}
			
			//与新生儿关系（读卡）
			private function readCard_A():void{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						this.d305_28.text = array[0];//领证人姓名
						this.d305_31.text = array[5];//领证人身份证号
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			//读卡获取民族信息
			private function getNationDropDownListSelectedIndex(arrayCollection:ArrayCollection, defaultValue:String):int
			{
				var len:uint = arrayCollection.length;
				var i:uint = 0;
				var index:int = 0;
				while(i < len) {
					var comboBoxDataP:Object = arrayCollection.getItemAt(i);
					if(comboBoxDataP.label == defaultValue) {
						index = arrayCollection.getItemIndex(comboBoxDataP);
						break;
					}
					i++;
				}
				return index;
			}
		]]>
	</fx:Script>
	<s:Scroller width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1070">
				<s:NavigatorContent  label="婴儿信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="姓　　　名"/><s:TextInput id="d305_02"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="性　别"/><s:DropDownList id="d305_03" width="130"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="身长"/><s:NumericStepper minimum="25" stepSize="0.1" maximum="75" value="50" id="d305_08" width="80"/><s:Label text="cm"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="出生日期"/>
									<mx:DateField yearNavigationEnabled="true" id="d305_04" width="110" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD"/>
									<s:TextInput id="hour" maxChars="2" restrict="0-9" width="20"/><s:Label text="时"/>
									<s:TextInput id="minute" maxChars="2" restrict="0-9" width="20"/><s:Label text="分"/>
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="原出生证号"/><s:TextInput id="d305_33"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="病历号"/><s:TextInput id="d305_10"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="体重"/><s:NumericStepper minimum="300" stepSize="0.1" maximum="10000" value="3000" id="d305_09" width="80"/><s:Label text="g"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="助产机构"/>
									<s:DropDownList id="d305_11" width="150"/>
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="原签发时间"/>
									<!--s:TextInput id="d305_35_old"/-->
									<mx:DateField yearNavigationEnabled="true" id="d305_35" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="接生员"/>
									<s:TextInput id="d305_12"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text="出生孕周"/><s:NumericStepper id="d305_06" value="40" maximum="70" minimum="20" width="50"/><s:Label text="周"/>
									<s:TextInput id="d305_07" width="20" text="0" restrict="0-7" /><s:Label text="天"/>
								</mx:GridItem>
								<mx:GridItem horizontalAlign="left">
									<s:Label text=" 胎       数"/>
									<s:DropDownList id="d305_42" width="150"/>
								</mx:GridItem>
							</mx:GridRow>
							<mx:GridRow>
								<mx:GridItem colSpan="12" horizontalAlign="left">
									<s:Label text="出生地址" id="b2"/>
									<component:AreaComboBoxCommon id="d305_05" paddingBottom="10" paddingTop="5" horizontalAlign="left"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1070">
				<s:NavigatorContent label="补发情况" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="新证编号"/><s:TextInput id="d305_34"/>
							<s:Label text="办理户口登记请况"/><s:DropDownList id="d305_38" width="130"/>
							<s:Label text="补发原因"/><s:DropDownList id="d305_32" width="130"/>
							<s:Label text="补证日期"/>
							<mx:DateField yearNavigationEnabled="true" id="d305_37" width="130" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
										  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
										  formatString="YYYY-MM-DD"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="报刊名称"/><s:TextInput id="d305_40"/>
							<s:Label text="报刊刊登日期"/>
							<mx:DateField yearNavigationEnabled="true" id="d305_41" width="130" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
										  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
										  formatString="YYYY-MM-DD"/>
							<s:Label text="　　补证机构"/><s:DropDownList id="d305_36" width="150"/>
						</s:HGroup>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" id="familyInfo"  width="1070">
				<s:NavigatorContent label="单双亲信息" width="1134">
					<component:parents3 id="parents3" gradeVal="{gradeVal}" birthVal="{birthVal}" phoneVal="{phoneVal}" areaVal="{areaVal}" cardVal="{cardVal}" printVal="{printVal}" duka="{this.parentApplication.systemUser.duka}" fumuDuka="{this.parentApplication.systemUser.fumuDuka}" />
				</s:NavigatorContent>
			</mx:TabNavigator>
			<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all" width="1070">
				<s:NavigatorContent label="领证人信息" width="100%">
					<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
						<mx:Grid width="100%">
							<mx:GridRow>
								<mx:GridItem>
									<s:Label text="与新生儿关系"/><s:DropDownList id="d305_29" change="d305_29ChangeHandler(event)"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="领证人"/><s:TextInput id="d305_28"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="证件类别"/><s:DropDownList id="d305_30" />
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="证件号码"/><s:TextInput id="d305_31" width="140"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Label text="填表日期"/>
									<mx:DateField yearNavigationEnabled="true" id="d305_13" width="110" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
												  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
												  formatString="YYYY-MM-DD"/>
								</mx:GridItem>
								<mx:GridItem>
									<s:Button id="btnRead" label="读卡" click="readCard_A()" enabled="false"/>
								</mx:GridItem>
							</mx:GridRow>
						</mx:Grid>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:TabNavigator>
			<s:HGroup contentBackgroundColor="#FF0000" verticalAlign="middle" horizontalAlign="center" paddingBottom="20" paddingTop="10" paddingLeft="10" width="100%" height="30">
				<s:Button label="确定" click="validateRenewBirthCertificate()" id="validateRenewBirth"/>
			</s:HGroup>
		</s:VGroup>
	</s:Scroller>
</s:Module>
