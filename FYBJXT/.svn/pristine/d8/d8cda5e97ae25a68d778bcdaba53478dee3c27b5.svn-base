<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   xmlns:component = "com.xyw.sys.custom.component.*"
			   xmlns:skin = "com.xyw.sys.custom.skin.*"
			   title="首发登记表修改" backgroundColor="white"
			   chromeColor="#5CACEE" close = "removeWindow()" cornerRadius="5"
			   width="1100" height="535" 
			   skinClass="com.xyw.sys.custom.skin.CustomTitleWindow"
			   creationComplete="moduleCreationComplete()">
	<fx:Declarations>
		<s:RemoteObject id="DJBService" destination="DJBService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="updateFirstBirthCertificateDJB" result="updateFirstBirthCertificateDJBHandler(event)"/>
		</s:RemoteObject>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		.gridItem
		{
			horizontalAlign:left;
			verticalAlign:middle;
		}
		.myLabel {
			fontSize:13;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.module.csyxzm.model.D304;
			import com.xyw.module.csyxzm.model.VD304;
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.ComboBoxDataResponse;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ValidationResultEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			import mx.validators.Validator;
			
			import spark.events.TextOperationEvent;
			import spark.formatters.DateTimeFormatter;
			
			private var comboBoxDataRequest:ComboBoxDataRequest;
			public var systemUser:SystemUser = null;
			public var vD304:VD304 = null;
			public var d304:D304;
			private var d304_04_str:String;
			private var d304_04_date:Date;
			private var d304_32:Number;
			private var d304_33:String;
			
			[Bindable]
			public var gradeVal:String; //单双亲  父亲1  母亲2  双亲0
			[Bindable]
			private var birthVal:int=1;  //出生日期   1显示，2不显示
			[Bindable]
			private var phoneVal:int=2;  //联系电话   1显示，2不显示
			[Bindable]
			private var areaVal:int=2; //家庭地址 户口地址    1显示，2不显示
			[Bindable]
			private var cardVal:int=1; //结婚证编号 亲子鉴定证明编号    1显示，2不显示
			[Bindable]
			private var printVal:String="15"; //打印状态  15首发登记表修改
			public var loadDataArr:Array=[[[""],[""],[""],[""],[""],[""]],[[""],[""],[""],[""],[""],[""],],[[""]],[[""],[""]],[[""],[""]],[[""]],[[""]],[[""]],[[""]],[[""]]];
			
			private function moduleCreationComplete():void
			{
				this.systemUser = this.parentApplication.systemUser;
				//检查读卡权限
				if(this.systemUser.duka == "1"){
					this.duka4.enabled = true;
				}
				this.initializeComboBox();//初始化数据
			}
			private function initializeComboBox():void
			{
				this.comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.flag = "S301_01";
				comboBoxDataRequest.sql = "select * from S301_01";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select t.d101_01, t.d101_02 from D101 t";
				comboBoxDataRequest.flag = "D101";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_06";
				comboBoxDataRequest.flag = "S301_06";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
				
				comboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = true;
				comboBoxDataRequest.sql = "select * from S301_07";
				comboBoxDataRequest.flag = "S301_07";
				this.systemService.getComboBoxData(this.comboBoxDataRequest);
			}
			
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object =  event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				
				if(flag == "S301_01")
				{
					this.d304_03.dataProvider = comboBoxDataList;
					this.d304_03.selectedIndex = 0; 
				}else if(flag == "D101")
				{
					var index:int = CompMethod.getDropDownListSelectedIndex(comboBoxDataList, this.systemUser.institutionCode);
					this.d304_11.dataProvider = comboBoxDataList;
					this.d304_11.selectedIndex = index;
					this.d304_11.enabled = false;
				}else if(flag == "S301_06")
				{
					this.d304_30.dataProvider = comboBoxDataList;
					this.d304_30.selectedIndex = 1;
				}else if(flag == "S301_07")
				{
					this.d304_29.dataProvider = comboBoxDataList;
					this.d304_29.selectedIndex = 0;
				}
				this.init();
			}
			
			private function changeLicen():void
			{
				var d30430DataProvider:ArrayCollection = ArrayCollection(this.d304_30.dataProvider);
				var saveDataArr:Array =parents3.saveRecord();
				
				var id:String = this.d304_29.selectedItem.data;
				if(id == "1")   //领证人父亲
				{
					this.d304_28.text =equVaule(saveDataArr[1][0]);
					this.d304_31.text =equVaule(saveDataArr[1][2]);
					var d30430Index:int =CompMethod.getDropDownListSelectedIndex(d30430DataProvider,equVaule(saveDataArr[1][1]));
					if(d30430Index != 0){
						this.d304_30.selectedIndex =d30430Index;
					}
				}else if(id == "2")   //领证人母亲
				{
					this.d304_28.text =equVaule(saveDataArr[0][0]);
					this.d304_31.text =equVaule(saveDataArr[0][2]);
					var d30430Index_:int =CompMethod.getDropDownListSelectedIndex(d30430DataProvider,equVaule(saveDataArr[0][1]));
					if(d30430Index_ != 0){
						this.d304_30.selectedIndex =d30430Index_;
					}
				}else
				{
					this.d304_28.text = "";
					this.d304_31.text = "";
					this.d304_30.selectedIndex = 1;
				}
			}
			
			private function readCard_A():void{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						this.d304_28.text = array[0];//领证人姓名
						this.d304_31.text = array[5];//领证人身份证号
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			protected function init():void				
			{
				this.d304_32 = this.vD304.d30432;
				this.d304_33 = this.vD304.d30433;
				this.d304_02.text = this.vD304.d30402;
				if(StringUtil.trim(this.vD304.d30403) !=""){
					var d30403Index:int = CompMethod.getDropDownListSelectedIndex(ArrayCollection(this.d304_03.dataProvider),this.vD304.d30403);
					this.d304_03.selectedIndex = d30403Index;
				}
				var d304_04:String = this.vD304.d30404;
				this.d304_04.selectedDate = DateFormatter.parseDateString(this.vD304.d30404);
				this.hour.text = d304_04.substring(11,13);
				this.minute.text = d304_04.substring(14,16);
				this.d304_05.setAreaCode(this.vD304.d30405);
				this.d304_06.value = this.vD304.d30406;
				this.d304_07.text = this.vD304.d30407;
				this.d304_08.value = this.vD304.d30408;
				this.d304_09.value = this.vD304.d30409;
				this.d304_10.text = this.vD304.d30410;
				if(StringUtil.trim(this.vD304.d30411) !=""){
					var d30411Index:int = CompMethod.getDropDownListSelectedIndex(ArrayCollection(this.d304_11.dataProvider),this.vD304.d30411);
					this.d304_11.selectedIndex = d30411Index;
				}
				this.d304_12.text = this.vD304.d30412;
				this.d304_13.selectedDate = DateFormatter.parseDateString(this.vD304.d30413);
				
				loadDataArr=putloadDataArr(vD304);
				parents3.putRecord(loadDataArr);
				
				this.d304_28.text = this.vD304.d30428;
				if(StringUtil.trim(this.vD304.d30429) !=""){
					var d30429Index:int = CompMethod.getDropDownListSelectedIndex(ArrayCollection(this.d304_29.dataProvider),this.vD304.d30429);
					this.d304_29.selectedIndex = d30429Index;
				}
				if(StringUtil.trim(this.vD304.d30430) !=""){
					var d30430Index:int = CompMethod.getDropDownListSelectedIndex(ArrayCollection(this.d304_30.dataProvider),this.vD304.d30430);
					this.d304_30.selectedIndex = d30430Index;
				}
				this.d304_31.text = this.vD304.d30431;
			}
			
			private function putloadDataArr(vD304:Object):Array{
				loadDataArr[0][0] =vD304.d30416;  //母亲姓名
				loadDataArr[0][1] =vD304.d30417;  //证件类别
				loadDataArr[0][2] =vD304.d30418;  //母亲证件号码
				
				loadDataArr[0][3] =vD304.d30420;  //母亲民族
				loadDataArr[0][4] =vD304.d30421;  //母亲身份证地址
				loadDataArr[0][5] =vD304.d30419;  //母亲国籍
				
				
				loadDataArr[1][0] =vD304.d30422;  //父亲姓名
				loadDataArr[1][1] =vD304.d30433;  //证件类别
				loadDataArr[1][2] =vD304.d30424;  //父亲证件号码
				
				loadDataArr[1][3] =vD304.d30426;  //父亲民族
				loadDataArr[1][4] =vD304.d30427;  //父亲身份证地址
				loadDataArr[1][5] =vD304.d30425;  //父亲国籍
				
				loadDataArr[2][0] =vD304.d30439;  //电话号码
				
				loadDataArr[3][0] ="";  //母亲户口地址
				loadDataArr[3][1] ="";  //母亲家庭地址
				
				loadDataArr[4][0] ="";  //父亲户口地址
				loadDataArr[4][1] ="";  //父亲家庭地址
				
				loadDataArr[5][0] =vD304.d30414;  //结婚证编号
				
				loadDataArr[6][0] =vD304.d30415;  //亲子鉴定证明编号
				
				loadDataArr[7][0] =vD304.d30434Zh; //母亲出生日期 
				
				loadDataArr[8][0] =vD304.d30435Zh; //父亲出生日期 
				
				loadDataArr[9][0] =vD304.d30445; //单双亲  父亲1    母亲2 
				
				return loadDataArr;
			}
			
			private function SaveFirshBirthCertiticateDJB():void {
				var patternFather:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
				var patternMonther:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
				var patternLingzheng:RegExp = /^(\d{18,18}|\d{15,15}|\d{17,17}X|\d{17,17}x)$/g;
				
				if(this.d304_03.selectedItem.data == 0)
				{
					Alert.show("请选择性别!","系统提示");
					return;
				}
				if(this.d304_04.text == "")
				{
					Alert.show("请选择婴儿出生日期!","系统提示");
					return;
				}
				if((Number)(this.hour.text) < 0 || (Number)(this.hour.text) > 23) 
				{
					Alert.show("输入时间(小时)不符合格式", "系统提示");
					return;
				}
				if((Number)(this.minute.text) < 0 || (Number)(this.minute.text) > 59) 
				{
					Alert.show("输入时间(分钟)不符合格式", "系统提示");
					return;
				}
				if(this.d304_12.text == "")
				{
					Alert.show("请输入接生员!","系统提示");
					return;
				}
				if(this.d304_13.text == "")
				{
					Alert.show("请选择填表日期!","系统提示!");
					return;
				}
				if(this.d304_10.text == "")
				{
					Alert.show("请输入住院病历号!","系统提示!");
					return;
				}
				if(this.d304_07.text == "")
				{
					Alert.show("请输入孕周天数！","系统提示");
					return;
				}
				if((Number)(this.d304_07.text) < 0 || (Number)(this.d304_07.text) > 7) 
				{
					Alert.show("输入天数不符合格式", "系统提示");
					return;
				}
				if(this.d304_08.value == 0){
					Alert.show("请输入婴儿的身长！","系统提示");
					return;
				}
				if(this.d304_08.value >= 75){
					Alert.show("婴儿的身长应小于75cm！","系统提示");
					return;
				}
				if(this.d304_08.value <= 25){
					Alert.show("婴儿的身长应大于25cm！","系统提示");
					return;
				}
				if(this.d304_09.value == 0){
					Alert.show("请输入婴儿的体重！","系统提示");
					return;
				}
				if(this.d304_09.value >= 10000){
					Alert.show("婴儿的体重应小于10000g！","系统提示");
					return;
				}
				if(this.d304_09.value <= 300){
					Alert.show("婴儿的体重应大于300g！","系统提示");
					return;
				}
				if(this.d304_05.getAreaCode().length < 8) {
					Alert.show("出生地选到乡镇级别!", "系统提示");
					return;
				}
				
				if(parents3.verification()){
					return;
				}
				
				/*
				if(this.d304_29.selectedItem.data == 0)
				{
				Alert.show("请选择与新生儿关系!","系统提示");
				return;
				}
				if(this.d304_28.text == "")
				{
				Alert.show("请输入领证人!","系统提示");
				return;
				}
				if(this.d304_30.selectedItem.data == 0)
				{
				Alert.show("请选择领证人有效证件类别!","系统提示");
				return;
				}
				if(this.d304_31.text == "")
				{
				Alert.show("请输入领证人证件号码!","系统提示");
				return;
				}
				if(!patternLingzheng.test(this.d304_31.text))
				{
				Alert.show("领证人证件号码格式有误!","系统提示");
				return;
				}
				*/
				Alert.yesLabel = '是'; 
				Alert.noLabel = '否';
				Alert.show('确认更改信息？','保存首发登记表',1|2,this,savevalidateBirthCertificate);
				
			}
			private function savevalidateBirthCertificate(event:CloseEvent):void
			{
				if(event.detail == Alert.YES){
					
					this.d304 = new D304();
					this.d304.d30401 = this.vD304.d30401;
					this.d304.d30402 = this.d304_02.text;
					this.d304.d30403 = this.d304_03.selectedItem.data;
					
					var dateTimeFormatter:DateTimeFormatter = new DateTimeFormatter();
					dateTimeFormatter.dateTimePattern = "yyyy-MM-dd";
					var dateTime_str:String = this.d304_04.text;
					this.d304_04_str = dateTime_str + " " +  this.hour.text + ":" + this.minute.text;
					this.d304_04_date = DateFormatter.parseDateString(this.d304_04_str);
					this.d304.d30404 = this.d304_04_date;
					
					this.d304.d30405 = this.d304_05.getAreaCode();
					this.d304.d30406 = this.d304_06.value;
					this.d304.d30407 = this.d304_07.text;
					this.d304.d30408 = this.d304_08.value;
					this.d304.d30409 = this.d304_09.value;
					this.d304.d30410 = this.d304_10.text;
					
					this.d304.d30411 = this.d304_11.selectedItem.data;
					this.d304.d30412 = this.d304_12.text;
					this.d304.d30413 = this.d304_13.selectedDate;
					
					var saveDataArr:Array =parents3.saveRecord();
					this.d304.d30416 =equVaule(saveDataArr[0][0]); //母亲姓名
					this.d304.d30417 =equVaule(saveDataArr[0][1]); //母亲证件类别
					this.d304.d30418 =equVaule(saveDataArr[0][2]); //母亲证件号码
					if(saveDataArr[7][0] != null &&  saveDataArr[7][0] !="" ){
						this.d304.d30434 =DateField.stringToDate(saveDataArr[7][0],"YYYY-MM-DD"); //母亲出生日期
					}else{
						this.d304.d30434 =null;
					}
					this.d304.d30420 =equVaule(saveDataArr[0][3]); //母亲民族
					this.d304.d30421 =equVaule(saveDataArr[0][4]); //母亲身份证地址
					this.d304.d30419 =equVaule(saveDataArr[0][5]); //母亲国籍
					
					
					this.d304.d30422 =equVaule(saveDataArr[1][0]); //父亲姓名
					this.d304.d30423 =equVaule(saveDataArr[1][1]); //父亲证件类别
					this.d304.d30424 =equVaule(saveDataArr[1][2]); //父亲证件号码
					if(saveDataArr[8][0] != null && saveDataArr[8][0] !="" ){
						this.d304.d30435 =DateField.stringToDate(saveDataArr[8][0],"YYYY-MM-DD"); //父亲出生日期
					}else{
						this.d304.d30435 =null;
					}
					this.d304.d30426 =equVaule(saveDataArr[1][3]); //父亲民族
					this.d304.d30427 =equVaule(saveDataArr[1][4]); //父亲身份证地址
					this.d304.d30425 =equVaule(saveDataArr[1][5]); //父亲国籍
					
					this.d304.d30439 =equVaule(saveDataArr[2][0]); //电话号码;
					
					this.d304.d30414 =equVaule(saveDataArr[5][0]); //结婚证编号
					
					this.d304.d30415 =equVaule(saveDataArr[6][0]);//亲子鉴定证明编号
					
					var fm:String="";
					if(saveDataArr[9][0] !=null && saveDataArr[9][0]!="0"){
						fm =saveDataArr[9][0];
					}
					this.d304.d30445=fm;
					
					this.d304.d30428 = this.d304_28.text;
					this.d304.d30429 = this.d304_29.selectedItem.data;
					this.d304.d30430 = this.d304_30.selectedItem.data;
					this.d304.d30431 = this.d304_31.text;
					this.d304.d30432 = this.d304_32;
					this.d304.d30433 = this.d304_33;
					this.DJBService.updateFirstBirthCertificateDJB(d304);
				}
			}
			
			private function equVaule(value:String):String{
				if(value !=null && value !="null")
					return value;
				return "";
			}
			
			public function updateFirstBirthCertificateDJBHandler(event:ResultEvent):void
			{
				var queryBirthResponse:Object = event.result;
				if(!queryBirthResponse.state )
				{
					Alert.show(queryBirthResponse.errorMessage,"系统提示");
					return;
				}
				Alert.show("保存成功！","系统提示");
				this.removeWindow();
				var parentIndex:index = this.owner as index;
				parentIndex.refresh();
			}
			private function removeWindow():void
			{
				PopUpManager.removePopUp(this);
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="1100" height="450">
		<s:HGroup width="1100" height="450" paddingTop="10">
			<s:VGroup width="1100" height="450" paddingBottom="10" paddingLeft="10" paddingRight="10">
				<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all">
					<s:NavigatorContent  label="分娩信息" width="1080">
						<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
							<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
								<s:Label styleName="myLabel" text="婴儿姓名"/><s:TextInput id="d304_02" width="130" restrict="^ \f\n\r\t\v"/>
								<s:Label styleName="myLabel" text="性　别"/><s:DropDownList id="d304_03" width="131"/>
								<s:Label styleName="myLabel" text="出生日期"/>
								<mx:DateField yearNavigationEnabled="true" id="d304_04" width="140" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
											  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
											  formatString="YYYY-MM-DD"/>
								<s:TextInput id="hour" maxChars="2" restrict="0-9" width="50"/><s:Label styleName="myLabel" text="时"/>
								<s:TextInput id="minute" maxChars="2" restrict="0-9" width="50"/><s:Label styleName="myLabel" text="分"/>
								<s:Label styleName="myLabel" text="体重"/><s:NumericStepper  minimum="300" stepSize="0.1" maximum="10000" value="3000" id="d304_09" width="60"/><s:Label styleName="myLabel" text="g"/>
								<s:Label styleName="myLabel" text="身长"/><s:NumericStepper minimum="25" stepSize="0.1" maximum="75" value="50" id="d304_08" width="60"/><s:Label styleName="myLabel" text="cm"/>
							</s:HGroup>
							<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
								<s:Label styleName="myLabel" text="接生机构"/><s:DropDownList id="d304_11" width="130"/>
								<s:Label styleName="myLabel" text="接生员"/><s:TextInput id="d304_12" width="131" restrict="^ \f\n\r\t\v"/>
								<s:Label styleName="myLabel" text="填表日期"/>
								<mx:DateField yearNavigationEnabled="true" id="d304_13" width="140" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
											  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
											  formatString="YYYY-MM-DD"/>
								<s:Label styleName="myLabel" text="病历号"/><s:TextInput id="d304_10" restrict="^ \f\n\r\t\v"/>
								<s:Label styleName="myLabel" text="出生孕周"/><s:NumericStepper id="d304_06" value="40" maximum="70" minimum="20" width="60"/>
								<s:Label styleName="myLabel" text="周"/>
								<s:TextInput id="d304_07" width="40" text="0" restrict="0-7"/><s:Label styleName="myLabel" text="天"/>
							</s:HGroup>
							<s:HGroup width="100%" paddingLeft="10" paddingRight="10" verticalAlign="middle">
								<s:Label paddingTop="-5" styleName="myLabel" text="出生地址"/>
								<component:AreaComboBox id="d304_05" paddingBottom="10" paddingTop="5" horizontalAlign="left" areaCode="{this.parentApplication.systemUser.areaCode}"/>
							</s:HGroup>
						</s:VGroup>
					</s:NavigatorContent>
				</mx:TabNavigator>
				
				<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all">
					<s:NavigatorContent label="单双亲信息" width="1080">
						<component:parents3 id="parents3" gradeVal="{gradeVal}" birthVal="{birthVal}" phoneVal="{phoneVal}" areaVal="{areaVal}" cardVal="{cardVal}" printVal="{printVal}" duka="{this.parentApplication.systemUser.duka}" fumuDuka="{this.parentApplication.systemUser.fumuDuka}"/>
					</s:NavigatorContent>
					
				</mx:TabNavigator>
				
				<mx:TabNavigator chromeColor="#ffffff" creationPolicy="all">
					<s:NavigatorContent label="领证人信息" width="1080">
						<s:VGroup paddingBottom="10" paddingLeft="10" paddingRight="10">
							<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
								<s:Label styleName="myLabel" text="与新生儿关系"/><s:DropDownList id="d304_29" width="120" change="changeLicen()"/>
								<s:Label styleName="myLabel" text="领证人"/><s:TextInput id="d304_28" restrict="^ \f\n\r\t\v"/>
								<s:Label styleName="myLabel" text="证件类别"/><s:DropDownList id="d304_30" width="130"/>
								<s:Label styleName="myLabel" text="证件号码"/><s:TextInput id="d304_31" width="140" restrict="^ \f\n\r\t\v"/>
								<s:Button label="读卡" id="duka4" click="readCard_A()" enabled="false"/>
							</s:HGroup>
						</s:VGroup>
					</s:NavigatorContent>
				</mx:TabNavigator>
				<s:HGroup contentBackgroundColor="#FF0000" verticalAlign="middle" horizontalAlign="right" paddingBottom="20" paddingTop="10" width="1080" paddingRight="50" height="30">
					<s:Button label="确定" id="saveButton" click="SaveFirshBirthCertiticateDJB()"/>
				</s:HGroup>
			</s:VGroup>
		</s:HGroup>
	</s:VGroup>
</s:TitleWindow>