<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  creationComplete="moduleCreationCompleteHandler(event)"
		  width="100%" height="100%">
	<fx:Declarations>
		<s:RemoteObject id="childrenService" destination="childrenService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryE303" result="queryE303Handler(event)"/>
			<s:method name="deleteE303" result="deleteE303Handler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		s|DataGrid
		{
			borderAlpha:"0.3";
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDataGridSkin");
			alternatingRowColors:"[#FFFFFF,#EEEEEE]";
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.etbj.model.E303Request;
			import com.xyw.module.etbj.model.E303Response;
			import com.xyw.module.etbj.model.VE303;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.events.GridSelectionEvent;
			
			public var ve303:VE303 = null;
			public var e303Request:E303Request=null;
			public var systemUser:SystemUser =null;
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				this.systemUser = this.parentApplication.systemUser;
				//检查读卡权限
				if(this.systemUser.duka == "1"){
					this.duka1.enabled = true;
				} 
				
				var dateStr:String = DateField.dateToString(new Date(),"YYYY-MM-01");
				this.timeStart.selectedDate = DateFormatter.parseDateString(dateStr);
				this.timeEnd.selectedDate = new Date();
				
				this.certificateDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE,onSelected);
				this.F301_05.addEventListener(FocusEvent.FOCUS_IN,validateN);
				this.F301_05.addEventListener(FocusEvent.FOCUS_OUT,validateCard);
			}
			
			public function validateCard(event:Event):void{
				var IC:String = this.F301_05.text;
				if(IC.length>=15){
					if(IC.length != 15 && IC.length != 18){
						Alert.show("身份证号长度是15或18位","系统提示");
						return;
					}else{
						var n:String = IC.substring(IC.length-1,IC.length);
						if((n>='a'&&n<='z')){
							IC.replace(n,n.toLowerCase());
							this.F301_05.text = IC.substring(0,IC.length-1)+n.toUpperCase();
						}
					}
				}
			}
			
			public function validateN(event:Event):void{}
			
			
			private function onSelected(event:GridSelectionEvent):void
			{
				this.ve303= DataGrid(event.target).selectedItem as VE303;
			}
			
			/*----------获取查询条件数据---------*/
			private function initQueryParam():void
			{
				e303Request = new E303Request();
				try{	
					var type:String = this.e303_13.getLastSelectedInstitution();
					var e303_13_:String = this.e303_13.getLastSelectedInstitutionCode();
				
					e303Request.e30313 = (type == "10")?e303_13_:e303_13_.substring(0,Number(type));
									
					e303Request.e30306Start = this.timeStart.selectedDate;
					e303Request.e30306End = this.timeEnd.selectedDate;					
					e303Request.e30303 = StringUtil.trim(this.e303_03.text);
					e303Request.e30319 = StringUtil.trim(this.e303_19.text);					
					e303Request.f30102 = StringUtil.trim(this.F301_02.text);					
					e303Request.f30105 = StringUtil.trim(this.F301_05.text); 
				}catch(error:Error) {		
					
				}
			}
			
			//读卡(母亲)
			protected function readCard_mother(event:MouseEvent):void
			{
				try
				{
					//readCard是调用index.js下的函数，读卡涉及index.jsp和index.js两个文件
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(sex=="女"){
							this.F301_02.text = array[0];//姓名
							this.F301_05.text = array[5];//身份证号
						}else{
							Alert.show("请读妇女信息！","系统提示");
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			public function querye303(event:MouseEvent):void
			{
				//var e303Request:E303Request = new E303Request();
				this.initQueryParam();
				e303Request.parameterPageindex=1;
				e303Request.parameterPagesize=20;
				this.childrenService.queryE303(e303Request);
			}
			private function queryE303Handler(event:ResultEvent):void{
				var e303Response:Object = event.result;
				var e303s:ArrayCollection =e303Response.ve303s;
				var rowCount:Number = e303Response.rowCount;
				this.certificateDataGrid.dataProvider=e303s;
				this.pagerBar.pageSize = 20;
				this.pagerBar.dataGrid = this.certificateDataGrid;  
				this.pagerBar.rowCount = rowCount;
				this.pagerBar.resultData = e303s;
				this.pagerBar.dataBind();
				this.pagerBar.pagerFunction = pagerFunction;
				if(rowCount > 0) {
					this.pagerBar.enabled = true;
				}	
			}
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				//var e303Request:E303Request = new E303Request();
				e303Request = new E303Request();
				this.initQueryParam();
				e303Request.parameterPageindex=currentPageIndex;
				e303Request.parameterPagesize=pageSize;
				this.childrenService.queryE303(e303Request);		
			}
			public function refresh():void
			{
				e303Request = new E303Request();
				this.initQueryParam();
				e303Request.parameterPageindex = this.pagerBar.currentPageIndex;
				e303Request.parameterPagesize = 20;
				this.childrenService.queryE303(e303Request);
			}
			
			public function update303(event:MouseEvent):void{
				if(this.ve303 == null){
					Alert.show("请选择要操作的行！","系统提示");
					return;
				}else{
					var window:title = new title();
					window.ve303 = this.ve303;
					CompMethod.popUpTitleWindow(window,this,true);
				}
			}
			public function delete303(event:MouseEvent):void
			{
				if(this.ve303 == null){  
					Alert.show("请选择要操作的行");
					return;
				}
				
				e303Request.e30301 =this.ve303.e30301;
				e303Request.e30302 =this.ve303.e30302;
				e303Request.e30303 = this.ve303.e30303;
				e303Request.e30305 =this.ve303.e30305;
				e303Request.e30313 =this.ve303.e30313;
				e303Request.e30319 =this.ve303.e30319;
				this.childrenService.deleteE303(e303Request);
			}
			public function deleteE303Handler(event:ResultEvent):void
			{
				var e303Response:Object = event.result;
				if(e303Response.errorMessage == null){
					if(e303Response.promptMessage != null){
						Alert.show(e303Response.promptMessage, "系统提示");
					}
					refresh();
				} else {
					Alert.show(e303Response.errorMessage, "系统提示");
				}
			}
		]]>
	</fx:Script>
	<mx:TabNavigator  width="100%" chromeColor="#ffffff" creationPolicy="all">
		<s:NavigatorContent width="100%" label="综合查询">
			<s:VGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="检查机构"/>
					<component:InstitutionComboBox id="e303_13" width="730" villageVisible="true"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="随诊日期"/><mx:DateField id="timeStart" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
														monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
														formatString="YYYY-MM-DD" yearNavigationEnabled="true"/>
					<s:Label text="至"/><mx:DateField id="timeEnd" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
													 monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
													 formatString="YYYY-MM-DD" yearNavigationEnabled="true"/>
					<s:Button label="查询" click="querye303(event)"/>
					<s:Button label="修改" click="update303(event)"/>
					<s:Button label="删除" click="delete303(event)"/>
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" label="精确查询">
			<s:VGroup>
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="产妇姓名"/><s:TextInput id="F301_02"/>
					<s:Label text="证件号码"/><s:TextInput id="F301_05" width="200"/>
					<s:Button id="duka1" width="60" label="读卡" click="readCard_mother(event)" enabled="false"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					
					<s:Label text="保健卡号"/><s:TextInput id="e303_19" width="200"/>
					<s:Label text="儿童姓名"/><s:TextInput id="e303_03"/>
					<s:Button label="查询" click="querye303(event)"/>
					<s:Button label="修改" click="update303(event)"/>
					<s:Button label="删除" click="delete303(event)"/>
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
	</mx:TabNavigator>
	<s:Scroller y="95" width="100%" height="680" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup width="100%" paddingBottom="10">
			<s:DataGrid id="certificateDataGrid" width="100%" height="340" alternatingRowColors="[#FFFFFF,#EEEEEE]" editable="true" rowHeight="22">
				<s:columns>     
					<s:ArrayList>
						<s:GridColumn visible="false" dataField="e30301" headerText="主键"/>
						<s:GridColumn width="40" editable="false" headerText="序号" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer"/>
						<s:GridColumn width="80" dataField="e30126" headerText="产妇姓名"/>
						<s:GridColumn width="140" dataField="e30127" headerText="产妇身份证号"/>
						<!--<s:GridColumn width="80" dataField="f30118" headerText="配偶姓名"/>
						<s:GridColumn width="140" dataField="f30121" headerText="配偶身份证号"/>-->
						<s:GridColumn width="80" dataField="e30303" headerText="婴儿姓名"/>
						<s:GridColumn width="80" dataField="e30304Zh" headerText="婴儿性别"/>
						<s:GridColumn width="100" dataField="e30305Str" headerText="出生日期"/>
						
						<s:GridColumn width="140" dataField="e30319" headerText="档案编号"/>
						<s:GridColumn width="80" dataField="e30307" headerText="月龄(周)"/>
						<s:GridColumn width="80" dataField="e30308" headerText="主体特征"/>
						<s:GridColumn width="100" dataField="e30309" headerText="阳体特征"/>
						<s:GridColumn width="100" dataField="e30315Zh" headerText="转归"/>
						<s:GridColumn width="100" dataField="e30317" headerText="结案医生"/>
						<s:GridColumn width="100" dataField="e30316Zh" headerText="结案单位"/>
						<s:GridColumn width="100" dataField="e30314" headerText="检查医生"/>
						<s:GridColumn width="100" dataField="e30313Zh" headerText="检查单位"/>
						<s:GridColumn width="80" dataField="e30306Str" headerText="随诊日期"/>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid> 
			<component:PagerBar id="pagerBar" enabled="false" isExcel="false" isExcel2="false" isPrinter="false"/>
		</s:VGroup>	
	</s:Scroller>
</s:Module>
