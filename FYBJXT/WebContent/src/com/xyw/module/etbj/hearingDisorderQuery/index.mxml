<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  xmlns:mdi="http://code.google.com/p/flexlib/"
		  creationComplete="moduleCreationCompleteHandler(event)"
		  width="100%" height="100%">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<s:RemoteObject id="e503Service" destination="e503Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryE503" result="queryE503Handler(event)"/>
			<s:method name="deleteE503" result="deleteE503Handler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		s|DataGrid
		{
			borderAlpha:"0.3";
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDataGridSkin");
			alternatingRowColors:"[#FFFFFF,#EEEEEE]";
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.etbj.hearingScreening.index;
			import com.xyw.module.etbj.model.E501;
			import com.xyw.module.etbj.model.E501Request;
			import com.xyw.module.etbj.model.E503;
			import com.xyw.module.etbj.model.E503Request;
			import com.xyw.module.etbj.model.VE501;
			import com.xyw.module.etbj.model.VE503;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.controls.ProgressBar;
			import mx.controls.Tree;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ModuleEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.modules.IModuleInfo;
			import mx.modules.ModuleManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.components.BorderContainer;
			import spark.events.GridSelectionEvent;
			private var _moduleInfo:IModuleInfo; 
			public var ve503:VE503 = null;
			public var e503:E503 = null;
			public var e503Request:E503Request=null;
			public var systemUser:SystemUser =null;
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				this.systemUser = this.parentApplication.systemUser;
				//检查读卡权限
				if(this.systemUser.duka == "1"){
					this.duka1.enabled = true;
				} 
				
				var dateStr:String = DateField.dateToString(new Date(),"YYYY-MM-01");
				this.timeStart.selectedDate = DateFormatter.parseDateString(dateStr);
				this.timeEnd.selectedDate = new Date();
				this.certificateDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE,onSelected);
			}
			
			private function onSelected(event:GridSelectionEvent):void
			{
				this.ve503= DataGrid(event.target).selectedItem as VE503;
			}
			
			/*----------获取查询条件数据---------*/
			private function initQueryParam():Boolean
			{
				e503=new E503();
				e503Request = new E503Request();
				try{	
					var type:String = this.E503_88.getLastSelectedInstitution();
					var e50388:String = this.E503_88.getLastSelectedInstitutionCode();
					if(this.systemUser.institutionType == "1")
						e503.e50388 = this.systemUser.institutionCode;
					else
						e503.e50388 = (type == "10")?e50388:e50388.substring(0,Number(type));
					
					if(timeStart.text!="")
						{
					e503Request.timeStr = this.timeStart.selectedDate;
					}
					if(timeEnd.text!="")
						{
					e503Request.timeEnd = this.timeEnd.selectedDate;					
					}
					var index:int=tab.selectedIndex;
					e503Request.flag="false";
					//0为false
					if(Boolean(index)){
					if(E503_05.text==""&&E503_13.text==""
					 &&E503_14.text==""&&E503_17.text==""
					 &&E503_18.text==""&&E503_12.text==""
					)
					{
						Alert.show("请输入查询条件","系统提示");
						return false;
					}else{				
					e503.e50305 = StringUtil.trim(this.E503_05.text);
					e503.e50312 = StringUtil.trim(this.E503_12.text);					
					e503.e50313= StringUtil.trim(this.E503_13.text);					
					e503.e50314= StringUtil.trim(this.E503_14.text);
					e503.e50317= StringUtil.trim(this.E503_17.text);					
					e503.e50318= StringUtil.trim(this.E503_18.text);
					e503Request.flag="true";
					}
				}
					e503Request.e503=e503;
				}catch(error:Error) {		
					Alert.show("查询条件异常");
					return false;
				}
				return true;
			}
			
			//读卡
			protected function readCard(event:MouseEvent):void
			{
				try
				{
					//readCard是调用index.js下的函数，读卡涉及index.jsp和index.js两个文件
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(duka1==event.target){
							if(sex=="女"){
								this.E503_17.text = array[0];//姓名
								this.E503_18.text = array[5];//身份证号
							}else{
								Alert.show("请读母亲信息！","系统提示");
							}
						}else{
							if(sex=="男"){
								this.E503_13.text = array[0];//姓名
								this.E503_14.text = array[5];//身份证号
							}else{
								Alert.show("请读父亲信息！","系统提示");
							}
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			
			public function queryE503(event:MouseEvent):void
			{
			 	var b:Boolean=this.initQueryParam();
				if(!b){
					return ;
				}
				e503Request.parameterPageindex=1;
				e503Request.parameterPagesize=20;
				this.e503Service.queryE503(e503Request);
			}
			private function queryE503Handler(event:ResultEvent):void{
				var e503Response:Object = event.result;
				var ve503:ArrayCollection =e503Response.ve503;
				var rowCount:Number = e503Response.rowCount;
				this.certificateDataGrid.dataProvider=ve503;
				this.pagerBar.pageSize = 20;
				this.pagerBar.dataGrid = this.certificateDataGrid;  
				this.pagerBar.rowCount = rowCount;
				this.pagerBar.resultData = ve503;
				this.pagerBar.dataBind();
				this.pagerBar.pagerFunction = pagerFunction;
				if(rowCount > 0) {
					this.pagerBar.enabled = true;
				}	
			}
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				this.initQueryParam();
				e503Request.parameterPageindex=currentPageIndex;
				e503Request.parameterPagesize=pageSize;
				this.e503Service.queryE503(e503Request);		
			}
			public function refresh():void
			{
				e503Request = new E503Request();
				this.initQueryParam();
				e503Request.parameterPageindex = this.pagerBar.currentPageIndex;
				e503Request.parameterPagesize = 20;
				this.e503Service.queryE503(e503Request);
			}
		 public function deleteE503(event:MouseEvent):void
			{
				if(this.ve503 == null){  
					Alert.show("请选择要操作的行");
					return;
				}
				if(delete1==event.target||delete2==event.target){
					Alert.show("是否删除这条记录","系统提示",3,this,_closeHandler);
				}
			} 
			 public function deleteE503Handler(event:ResultEvent):void
			{
				var e503Response:Object = event.result;
				if(e503Response.errorMessage == null){
					if(e503Response.promptMessage != null){
						Alert.show(e503Response.promptMessage, "系统提示");
					}
					refresh();
				} else {
					Alert.show(e503Response.errorMessage, "系统提示");
				}
			} 
			private function updateE503(event:MouseEvent):void
			{	   
				if(this.ve503 == null){  
					Alert.show("请选择要操作的行");
					return;
				}
				var window:title = new title();
				window.ve503 = this.ve503;
				CompMethod.popUpTitleWindow(window,this,true);
			}
			
			private function _closeHandler(event:CloseEvent):void
			{
				if(event.detail==Alert.YES){
				e503Request.e50301=this.ve503.e50301;
				this.e503Service.deleteE503(e503Request);
				}
			}
		]]>
	</fx:Script>
	<mx:TabNavigator  width="100%" chromeColor="#ffffff" creationPolicy="all" id="tab">
		<s:NavigatorContent width="100%" label="综合查询" buttonMode="true" height="91">
			<s:VGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="诊断医院"/>
					<component:InstitutionComboBox id="E503_88" buttonMode="true" width="730" villageVisible="true"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="登记时间"/><mx:DateField id="timeStart" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
														monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
														formatString="YYYY-MM-DD" yearNavigationEnabled="true" buttonMode="true"/>
					<s:Label text="至"/><mx:DateField id="timeEnd" width="120" dayNames='["周日","周一","周二","周三","周四","周五","周六"]'
													 monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
													 formatString="YYYY-MM-DD" yearNavigationEnabled="true" buttonMode="true"/>
					<s:Button label="查询" click="queryE503(event)" buttonMode="true" />
					<s:Button label="修改" click="updateE503(event)" buttonMode="true" />
					<s:Button label="删除" click="deleteE503(event)" buttonMode="true" id="delete1"/>
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" label="精确查询" buttonMode="true" height="91">
			<s:VGroup>
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
					<s:Label width="70"  text="母亲姓名"/><s:TextInput id="E503_17"/>
					<s:Label text="母亲身份证号"/><s:TextInput id="E503_18" width="200"/>
					<s:Button id="duka1" width="60" label="读卡" click="readCard(event)"
							  enabled="false" buttonMode="true"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
					<s:Label width="70"  text="父亲姓名"/><s:TextInput id="E503_13"/>
					<s:Label text="父亲身份证号"/><s:TextInput id="E503_14" width="200"/>
					<s:Button id="duka2" width="60" label="读卡" click="readCard(event)"
							  enabled="false" buttonMode="true"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
					<s:Label width="70" text="新生儿姓名"/><s:TextInput id="E503_05"/>
					<s:Label text="联系方式" width="78"/><s:TextInput id="E503_12" width="200"/>
					<s:Button label="查询" click="queryE503(event)" buttonMode="true"/>
					<s:Button label="修改" click="updateE503(event)" buttonMode="true"/>
					<s:Button label="删除" click="deleteE503(event)" buttonMode="true" id="delete2"/>
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
	</mx:TabNavigator>
	<s:Scroller y="126" width="100%" height="680" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup width="100%" paddingBottom="10">
			<s:DataGrid id="certificateDataGrid" width="100%" height="340" alternatingRowColors="[#FFFFFF,#EEEEEE]" editable="true" rowHeight="22">
				<s:columns>     
					<s:ArrayList>
						<s:GridColumn visible="false" dataField="e50301" headerText="主键"/>
						<s:GridColumn width="40" editable="false" headerText="序号" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer"/>
						<s:GridColumn width="80" dataField="e50317" headerText="母亲姓名"/>
						<s:GridColumn width="140" dataField="e50318" headerText="身份证号"/>
						<!--<s:GridColumn width="80" dataField="f30118" headerText="配偶姓名"/>
						<s:GridColumn width="140" dataField="f30121" headerText="配偶身份证号"/>-->
						<s:GridColumn width="80" dataField="e50305" headerText="婴儿姓名"/>
						<s:GridColumn width="80" dataField="e50306Zh" headerText="婴儿性别"/>
						<s:GridColumn width="100" dataField="e50308Str" headerText="出生日期"/>
						<s:GridColumn width="140" dataField="e50321Str" headerText="筛查时间"/>
						<s:GridColumn width="100" dataField="e50322Zh" headerText="筛查医院"/>
						<s:GridColumn width="80" dataField="e50304" headerText="诊断编号"/>
						<s:GridColumn width="100" dataField="e50387Str" headerText="诊断时间"/>
						<s:GridColumn width="100" dataField="e50388Zh" headerText="诊断医院"/>
						<s:GridColumn width="100" dataField="e50389" headerText="录入人员"/>
						<s:GridColumn dataField="e50390Str" headerText="录入时间"/>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid> 
			<component:PagerBar id="pagerBar" enabled="false"  isExcel="false" isExcel2="false" isPrinter="false"/>
		</s:VGroup>	
	</s:Scroller>
</s:Module>
