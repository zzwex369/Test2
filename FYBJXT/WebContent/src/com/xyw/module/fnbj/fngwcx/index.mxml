<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  xmlns:component="com.xyw.sys.custom.component.*"
		  creationComplete="moduleCreationCompleteHandler(event)"
		  rollOut="overAndUp(event)"
		  rollOver="overAndUp(event)"
		  width="100%" height="100%">
	<fx:Declarations>
		<s:RemoteObject id="f308Service" destination="f308Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="deleteF308"  result="deleteF308Handler(event)"/>
			<s:method name="queryF308"  result="queryF308Handler(event)"/>
		</s:RemoteObject>
		
		
		<mx:DateValidator id="dateValidator"  property="text"
						  inputFormat="yyyy-mm-dd" 
						  wrongLengthError="格式错误  正确格式例：2008-01-01"
						  wrongDayError="天数错误"
						  wrongMonthError="月份错误"
						  wrongYearError="年份错误"
						  invalidCharError="内容无效"
						  requiredFieldError="内容不能为空"/>
		
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		mx|ToolTip
		{
			fontSize:15;
			backgroundColor:#000000;
			color:#FFFFFF;
			/* leading:12; */			
		}
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.fnbj.model.F303Request;
			import com.xyw.module.fnbj.model.F308;
			import com.xyw.module.fnbj.model.F308Request;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.messaging.AbstractConsumer;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.events.GridSelectionEvent;
			[Embed(source="images/query.png")] 
			private var queryicon:Class; 
			[Embed(source="images/del.png")] 
			private var delicon:Class; 
			[Embed(source="images/modif.png")] 
			private var modificon:Class; 
			private var vf308:Object =null;
			private var f308:F308 =null;
			public var f308Request:F308Request =null; 
			[Bindable]
			private var systemUser:SystemUser =null;
			private var arrayTip:Array=[null,null,null,null];//保存提示信息  objId:Object,objType:String,errorString:String,tip:ToolTip

			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				this.systemUser = this.parentApplication.systemUser;
				this.certificateDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE,onSelected);
			}
			
			private function onSelected(event:GridSelectionEvent):void
			{
				this.vf308 = DataGrid(event.target).selectedItem;
			}
			
			/*----------获取查询条件数据---------*/
			private function initQueryParam():void
			{
				f308Request = new F308Request();
				f308=new F308();
				try
				{	
					var type:String = this.jigou.getLastSelectedInstitution();
					var jigou_:String = this.jigou.getLastSelectedInstitutionCode();
				
					f308.f30816 = (type == "10")?jigou_:jigou_.substring(0,Number(type));
					
					if(this.seleall.selectedIndex==1){
						f308Request.timeStr = null;
						f308Request.timeEnd = null;
						f308.f30803 = this.F308_03.text;
						f308.f30805 = this.F308_05.text;
						
					}else{
						f308Request.timeStr = timeStart.text;
						f308Request.timeEnd = timeEnd.text;
					}
						f308Request.f308=f308;
				} 
				catch(error:Error) 
				{		
				}
			}
			
			private function query(event:MouseEvent):void
			{
				if(arrayTip[3])
					return;
				this.initQueryParam();
				f308Request.parameterPageindex = 1;
				f308Request.parameterPagesize = 20;
				this.f308Service.queryF308(f308Request);
			}
			protected function queryF308Handler(event:ResultEvent):void
			{
				
				var f308Response:Object = event.result;
				var flag:String = f308Response.flag;
				var listVF308:ArrayCollection = f308Response.vf308s;
				var rowCount:Number = f308Response.rowCount;
				if(f308Response.errorMessage == null)
				{ 
					this.pagerBar.dataGrid = this.certificateDataGrid;
					this.pagerBar.rowCount = rowCount;
					this.pagerBar.resultData = listVF308;
					this.pagerBar.dataBind();
					this.pagerBar.pagerFunction = pagerFunction;
					if(rowCount > 0) {
						this.pagerBar.enabled = true;
					}
				} else {
					Alert.show(f308Response.errorMessage, "系统提示");
				}
			}
			protected function deleteF308Handler(event:ResultEvent):void
			{
				var f308Response:Object = event.result;
				if(f308Response.errorMessage == null){
					if(f308Response.promptMessage != null){
						Alert.show(f308Response.promptMessage, "系统提示");
					}
					refresh();
				} else {
					Alert.show(f308Response.errorMessage, "系统提示");
				}
			}
			
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				this.initQueryParam();
				f308Request.parameterPageindex = currentPageIndex;
				f308Request.parameterPagesize = pageSize;
				this.f308Service.queryF308(f308Request);
			}
			
			public function refresh():void
			{
				this.initQueryParam();
				f308Request.parameterPageindex = this.pagerBar.currentPageIndex;
				f308Request.parameterPagesize = 20;
				this.f308Service.queryF308(f308Request);
			}
			public function update(event:MouseEvent):void
			{
				if(!this.vf308){
					Alert.show("请选择要操作的行");
					return;
				}else{
					var window:title =new title();
					window.vf308 = this.vf308;
					CompMethod.popUpTitleWindow(window,this,true);
				}
			}
			//删除妇女检查  只删除 最后一个检查的
			public function deleteF303(event:MouseEvent):void
			{
				if(!this.vf308){
					Alert.show("请选择要操作的行");
					return;
				}else{
					f308Request=new F308Request();
					f308Request.f308=new F308();
					f308Request.f308.f30801=vf308.f30801;
					this.f308Service.deleteF308(f308Request);
				}
			}
			
			
			//读卡(母亲)
			protected function readCard_mother(event:MouseEvent):void
			{
				try
				{
					//readCard是调用index.js下的函数，读卡涉及index.jsp和index.js两个文件
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(sex=="女"){
							this.F308_03.text = array[0];//姓名
							this.F308_05.text = array[5];//身份证号
						}else{
							Alert.show("请读孕产妇信息！","系统提示");
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			/**
			 *时间输入验证
			 */
			private function focusOut(id:Object):Boolean
			{
				var textDate:Date=DateField.stringToDate(id.text,"YYYY-MM-DD");
				if(id.errorString&&!textDate)
				{
					var str:String=id.errorString;
					id.errorString='';
					dateValidator.source=null;
					if((str.lastIndexOf("yyyy-mm-dd"))!=-1)
						str=str.substring(0,str.lastIndexOf("yyyy-mm-dd"));
					//保存提示信息  objId:Object,objType:String,errorString:String,tip:ToolTip
					arrayTip=CompMethod.showTip(id,"3",str,arrayTip[3]);
					return true;
				}else
					return dateValidatorHandler(id,textDate);

			}
			
			/**
			 *清空提示 格式化日期
			 */
			private function dateValidatorHandler(id:Object,textDate:Date):Boolean
			{
				dateValidator.source=null;
				id.errorString='';
				if(arrayTip[3])
				{
					CompMethod.destoryTip(arrayTip[3]);	
					arrayTip=[null,null,null,null]
				}					
				if(textDate)
					id.text=DateField.dateToString(textDate,"YYYY-MM-DD");
				return false;
			}
			
			
			private function setStringDate(item:Object, column:GridColumn):String
			{
				var date:Date=item[column.dataField];
				return DateField.dateToString(date,"YYYY-MM-DD");
			}
			private function printGwzzd():void
			{
				if(!this.vf308){
					Alert.show("请选择要操作的行");
					return;
				}else{
					var window:gwzzTitle =new gwzzTitle();
					window.vf308 = this.vf308;
					CompMethod.popUpTitleWindow(window,this,true);
				}
			}
			
			private function printGwfxpgfj():void
			{
				if(!this.vf308){
					Alert.show("请选择要操作的行");
					return;
				}else{
					var window:gwfxpgfjTitle =new gwfxpgfjTitle();
					window.vf308 = this.vf308;
					CompMethod.popUpTitleWindow(window,this,true);
				}
			}
			
			/**
			 *鼠标离开或悬浮
			 */
			protected function overAndUp(event:MouseEvent):void
			{
				if(event.type==MouseEvent.ROLL_OVER)
				{ 
					if(!arrayTip[3])
						arrayTip=CompMethod.showTip(arrayTip[0],arrayTip[1],arrayTip[2],arrayTip[3]);
					if(!this.hasEventListener(Event.ENTER_FRAME))
						this.addEventListener(Event.ENTER_FRAME,enterFrameHandler); 
				}else
				{
					this.removeEventListener(Event.ENTER_FRAME,enterFrameHandler);			
					arrayTip[3]=CompMethod.destoryTip(arrayTip[3]);		
				}
				
			}
			/**
			 *显示删除提示信息
			 */
			private function enterFrameHandler(event:Event):void
			{
				if(arrayTip[3])	
					arrayTip=CompMethod.showTip(arrayTip[0],arrayTip[1],arrayTip[2],arrayTip[3]);		 
			}
			
			
			protected function certificateDataGrid_creationCompleteHandler(event:FlexEvent):void
			{
				
				
			}
			
		]]>
	</fx:Script>
	
	<mx:TabNavigator id="seleall" width="100%" height="118" chromeColor="#ffffff" creationPolicy="all">
		<s:NavigatorContent width="100%" label="综合查询">
			<s:VGroup width="100%">
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
					<s:Label text="建档机构"/>
					<component:InstitutionComboBox id="jigou" width="730" villageVisible="true"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
					
					<s:Label text="建档日期"/>
					<mx:DateField yearNavigationEnabled="true" id="timeStart" width="120"  editable="true" text="{DateField.dateToString(new Date,'YYYY-MM-01')}"
								  dayNames='["周日","周一","周二","周三","周四","周五","周六"]'  formatString="YYYY-MM-DD"
								  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
								  focusIn="dateValidator.source=timeStart"
								  focusOut="focusOut(timeStart)"
								  restrict="0-9\-"
								  />
					<s:Label text="至" /><mx:DateField yearNavigationEnabled="true" id="timeEnd" width="120"  editable="true"
													  text="{DateField.dateToString(new Date,'YYYY-MM-DD')}"
													  dayNames='["日","一","二","三","四","五","六"]'   formatString="YYYY-MM-DD"
													  monthNames='["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"]'
													  focusIn="dateValidator.source=timeEnd"
													  focusOut="focusOut(timeEnd)"
													  restrict="0-9\-"
													  />
					<s:Button label="查询" click="query(event)" icon="{queryicon}" iconPlacement="left"/>
					<s:Button label="修改" click="update(event)" icon="{modificon}" iconPlacement="left"/>
					<s:Button label="删除" click="deleteF303(event)" icon="{delicon}" iconPlacement="left"/>
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" label="精确查询">
			<s:VGroup>
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10"
						  verticalAlign="middle">
					<s:Label text="孕产妇姓名"/><s:TextInput id="F308_03"/>
					<s:Label text="证件号码"/><s:TextInput id="F308_05" width="200"/>
					<s:Button id="duka1" width="60" label="读卡" click="readCard_mother(event)" enabled="{systemUser.duka=='1'}"/>
				</s:HGroup>
				<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Button label="查询" click="query(event)" icon="{queryicon}" iconPlacement="left"/>
					<s:Button label="修改" click="update(event)" icon="{modificon}" iconPlacement="left"/>
					<s:Button label="删除" click="deleteF303(event)" icon="{delicon}" iconPlacement="left"/>
				</s:HGroup>
			</s:VGroup>
		</s:NavigatorContent>
	</mx:TabNavigator>
	<s:Scroller y="126" width="100%" height="560" horizontalScrollPolicy="auto"
				verticalScrollPolicy="auto">
		<s:VGroup width="100%" paddingBottom="10">
			<s:DataGrid id="certificateDataGrid"  height="340" 
						alternatingRowColors="[#FFFFFF,#EEEEEE]" borderAlpha="0.3"
						skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin"
						editable="true" rowHeight="22" width="100%"
						horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn width="40" editable="false" headerText="序号" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer"/>
						<s:GridColumn width="120" dataField="f30803" headerText="孕产妇姓名"/>
						<s:GridColumn width="150" dataField="f30805" headerText="证件号码"/>
						<s:GridColumn width="120" dataField="f30806" headerText="保健卡号"/>
						<s:GridColumn width="100" dataField="f30807" headerText="出生日期" labelFunction="setStringDate"/>
						<s:GridColumn width="100" dataField="f30810" headerText="联系电话"/>
						<s:GridColumn width="100" dataField="f30811Zh" headerText="产前产后"/>
						<s:GridColumn width="80" dataField="f30812Zh" headerText="转诊"/>
						<s:GridColumn width="120" dataField="f30813Zh" headerText="高危级别"/>
						<s:GridColumn width="120" dataField="f30815" headerText="建档医生"/>
						<s:GridColumn width="100" dataField="f30817" headerText="建档时间" labelFunction="setStringDate"/>
						<s:GridColumn width="200" dataField="f30816Zh" headerText="建档医院"/>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
			<component:PagerBar id="pagerBar" enabled="false" isExcel="false" isExcel2="false" isPrinter="false"/>
			
		</s:VGroup>	
	</s:Scroller>	
</s:Module>
