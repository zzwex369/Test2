<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  width="100%" height="100%"
		  creationComplete="moduleCreationCompleteHandler(event)"
		  xmlns:control="com.xyw.sys.custom.itemrenderer.*"
		  xmlns:component="com.xyw.sys.custom.component.*">
	<fx:Declarations>
		<s:RemoteObject id="f601Service" destination="f601Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryF601" result="queryF601Handler(event)"/>
			<s:method name="deleteF601" result="deleteF601Handler(event)"/>
			<s:method name="_getF60155" result="_getF60155Handler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		.myLabel {
			fontSize:12px;
			paddingTop:4px;
		}
		.myGrid {
			verticalAlign:middle;
		}
		.myTextInput
		{
			fontFamily:微软雅黑;
		}
		.must {
			color:red;
			fontSize:20px;
			fontWeight:bold;
			paddingTop:5px;
		}
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		.textAlign
		{
			textAlign:center;
		}
		.pf8{
			paddingLeft:8px;
		}
		 .textInput{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomTextInputSkin");
		}  
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.msss.fnbj.xq.fnbjxqsqcx.tittle;
			import com.xyw.module.msss.fnbj.model.F601;
			import com.xyw.module.msss.fnbj.model.F601Request;
			import com.xyw.module.msss.fnbj.model.F601Response;
			import com.xyw.module.msss.fnbj.model.VF601;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.custom.component.SecurityControler;
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.ComboBoxDataResponse;
			import com.xyw.sys.model.SystemUser;
			
			import flashx.textLayout.elements.BreakElement;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.controls.dataGridClasses.MXDataGridItemRenderer;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import spark.components.DataGrid;
			import spark.events.GridSelectionEvent;
			
			public var systemUser:SystemUser = null;
			public var f601Request:F601Request;
			public var vF601:Object = null;
			[Bindable] 
			private var f601Arr:ArrayCollection = new ArrayCollection(); 
			
			//========================启动权限控制============//
		
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				//security();
				this.systemUser = this.parentApplication.systemUser;
				//检查读卡权限
				if(this.systemUser.duka == "1"){
					this.duka1.enabled = true;
				}
				
			}
			
	
			
			/*----------获取查询条件数据---------*/
			private function initQueryParam():void
			{
				try
				{
					var type:String = this.f601_29.getLastSelectedInstitution();
					var f60129:String = this.f601_29.getLastSelectedInstitutionCode();
					var f601:F601=new F601();
					f601.f60129 = type == "8"?f60129:f60129.substring(0,Number(type));
					
					if(f601_03.text||f601_04.text)
					{
						f601Request.flag="true"
						f601.f60103 = StringUtil.trim(f601_03.text);
						f601.f60104 = StringUtil.trim(f601_04.text);
					}else
					{
						f601.f60159=CompMethod.getRadioButtonValue([F601_59]);
						var arr:ArrayCollection=new ArrayCollection();
						arr.addItem("t.f601_34");
						f601Request.f60101List=arr;
						f601Request.timeStr = DateField.stringToDate(this.timeStart.text,"YYYY-MM-DD");
						f601Request.timeEnd = DateField.stringToDate(this.timeEnd.text,"YYYY-MM-DD");
						f601Request.flag="false"
					}
					
					f601Request.f601=f601;
				}catch(error:Error){
					Alert.show("出错了");
				}
			}
			
			private function query(event:MouseEvent):void
			{
				_query(1,20);
			}
			
			private function queryF601Handler(event:ResultEvent):void
			{
				var f601Response:Object = event.result;
				var rowCount:Number = f601Response.rowCount;
				if(f601Response.errorMessage == null)
				{
					var listvF601:ArrayCollection = f601Response.vf601s;
					this.certificateDataGrid.dataProvider=listvF601;
					this.pagerBar.dataGrid = new DataGrid();
					this.pagerBar.rowCount = rowCount;
					this.pagerBar.resultData = listvF601;
					this.pagerBar.dataBind();
					this.pagerBar.pagerFunction = pagerFunction;
					if(rowCount > 0) {
						this.pagerBar.enabled = true;
					}
				} else {
					Alert.show(f601Response.errorMessage, "系统提示");
				}
			}
			
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				_query(currentPageIndex,pageSize);
			}
			
			public function refresh():void
			{
				_query(this.pagerBar.currentPageIndex,20);
			}
			
			
			private function _query(pageIndex:int,pageSize:int):void
			{
				f601Request = new F601Request();
				this.initQueryParam();
				f601Request.parameterPageindex = pageIndex;
				f601Request.parameterPagesize = pageSize;
				
				this.f601Service.queryF601(f601Request);
			}
			
			private function printCertificate(event:MouseEvent):void
			{
				var strArr:Array=certificateDataGrid_getSelect();
				if(!strArr[0]){
					Alert.show(strArr[1],"系统提示");
					return;
				}
				
				
				var urlRequest:URLRequest = new URLRequest(this.parentApplication.contextRoot + "/print_new/fnbj/printxqscsqd/xqsqd.jsp?f60101=" + this.vF601.f60101);
				navigateToURL(urlRequest,"_blank");
			 	
				
			}
			
			//读卡(母亲)
			private function readCard_mother(event:MouseEvent):void
			{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(sex=="女"){
							this.f601_03.text = array[0];//姓名
							this.f601_04.text = array[5];//身份证号
						}else{
							Alert.show("请读母亲信息！","系统提示");
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			public function deleteF601():void
			{
				var strArr:Array=certificateDataGrid_getSelect();
				if(!strArr[0]){
					Alert.show(strArr[1],"系统提示");;
					return;
				}
				var validateL30159Arr:Array=validateL60159(vF601);
				if(!validateL30159Arr[0]){
					Alert.show(validateL30159Arr[1],"系统提示");;
					return;
				}
				f601Request.f601.f60101 = this.vF601.f60101;
				this.f601Service.deleteF601(f601Request);
			}
			
			public function  deleteF601Handler(event:ResultEvent):void{
				var f601Response:Object = event.result;
				if(f601Response.state){
					Alert.show("删除成功！", "系统提示");
					refresh();
				} else {
					Alert.show(f601Response.errorMessage, "系统提示");
				}
			}
			
 			public function update(event:MouseEvent):void{
				var strArr:Array=certificateDataGrid_getSelect();
				if(!strArr[0]){
					Alert.show(strArr[1],"系统提示");;
					return;
				}
				var validateL30159Arr:Array=validateL60159(vF601);
				if(!validateL30159Arr[0]){
					Alert.show(validateL30159Arr[1],"系统提示");;
					return;
				}
				var window:tittle = new tittle();
				window.modify="1";
				window.vF601 = this.vF601;
				CompMethod.popUpTitleWindow(window,this);
				
			}  
			
			/**
			 *true 邮寄
			 * false 删除，修改
			 */
			private function certificateDataGrid_getSelect(flag:Boolean=false):Array
			{
				var strArr:Array=new Array(false,null);//0,boolean  1.message
				var itemArr:ArrayCollection=certificateDataGrid.getAllItems();
				if(itemArr.length)
				{
					if(!flag)
					{
						if(itemArr.length>1)
							strArr[1]="只能操作一条数据！";	
						else
						{
							strArr[0]=true;
							this.vF601=itemArr.getItemAt(0);
						}

									
					}else
						strArr[0]=true;
				}else
					strArr[1]="请选择一条数据！";					
				return strArr;	 
			}
			
			private function setF30105(item:Object, column:DataGridColumn):String
			{
				var f30105:Date=item[column.dataField];
				return DateField.dateToString(f30105,'YYYY-MM-DD');
			
			}
			
			private function batchSend(event:MouseEvent):void
			{
				var strArr:Array=certificateDataGrid_getSelect(true);
				if(!strArr[0]){
					Alert.show(strArr[1],"系统提示");;
					return;
				}
				var validateL30159Arr:Array=validateL60159(certificateDataGrid.getAllItems(),false);
				if(!validateL30159Arr[0]){
					Alert.show(validateL30159Arr[1],"系统提示");;
					return;
				}
				
				var window:batchSendTitle = new batchSendTitle();
				window.itemArr = this.certificateDataGrid.getAllItems();
				CompMethod.popUpTitleWindow(window,this,true);
			}
			
			private function printxkbh(size:String=''):void
			{
				var strArr:Array=certificateDataGrid_getSelect();
				if(!strArr[0]){
					Alert.show(strArr[1],"系统提示");;
					return;
				}
				var urlRequest:URLRequest = new URLRequest(this.parentApplication.contextRoot + "/print_new/fnbj/printxkbh/xkbh.jsp?f60101=" + this.vF601.f60101+"&size="+size);
				navigateToURL(urlRequest,"_blank");
			}
			
			/**
			 * true   item vf601
			 * false item ArrayList
			 * 判断信息是否可以操作
			 */
			private function validateL60159(item:Object,flag:Boolean=true):Array
			{
				var arr:Array=new Array(2);//0,boolean  1.str 提示原因 2.count 计数器 
				arr[0]=false;
				var count:int=0;
				if(flag)
				{
					if(item.f60159!='1'&&item.f60159!='4')
						arr[1]="选中的数据不在未邮寄或退回范围内，无法进行操作！";
					else 
						arr[0]=true;
				}else if(!flag)
				{
					for(var i:int=0;i<item.length;i++)
					{
						var vf601:Object=item.getItemAt(i);
						if(vf601.f60159!='1'&&vf601.f60159!='4')
							++count;
					}
					if(!count)
						arr[0]=true;
					else 
						arr[1]="选中的数据有"+count+"条不在未邮寄范围内，无法修改！";
				}
				return arr;
			}
			
			private function setF30161Str(item:Object, column:DataGridColumn):String
			{
				var f30161:String=item[column.dataField];
				if(f30161=='1')
					f30161='通过';
				else if(f30161=='2')
					f30161='未通过';
				else if(f30161=='3')
					f30161='未筛查';
				else 
					f30161='不详';
				return f30161;
			}
			
			
			
			public function  _getF60155Handler(event:ResultEvent):void{
				var str:Object = event.result;
			
				Alert.show(str.toString());
			}
		]]>
	</fx:Script>
	<s:Scroller width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">

	<s:VGroup width="100%">
		<mx:TabNavigator id="xuanze"  width="100%" chromeColor="#ffffff" creationPolicy="all">
			<s:NavigatorContent  label="综合查询" width="100%">
				<s:VGroup>
					<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
						<s:Label text="采血单位"/>
						<component:InstitutionComboBox id="f601_29" width="100%"/>
					</s:HGroup>
					
					<s:HGroup width="100%" paddingBottom="0" paddingLeft="10" paddingRight="10" verticalAlign="middle" gap="10" id="F601_59">
						<s:Label text="标本状态"/>
						<s:RadioButton label="全部" value="" groupName="F601_59" selected="true"/>
						<s:RadioButton label="未邮寄" value="1" groupName="F601_59"/>
						<s:RadioButton label="已邮寄/待审核" value="2" groupName="F601_59"/>
						<s:RadioButton label="已审核" value="3" groupName="F601_59"/>
						<s:RadioButton label="退回" value="4" groupName="F601_59"/>
						<s:RadioButton label="发布" value="5" groupName="F601_59"/>
						<s:HGroup verticalAlign="baseline">
							<s:Label text="录入日期"/>
							<component:CustomRangeDateField  id="timeStart"   isSelectFirst="true"/>
							<s:Label text="至"/>
							<component:CustomRangeDateField  id="timeEnd"  isSelectNow="true"/>
						</s:HGroup>
					</s:HGroup>  
					
					<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
						<s:Label text="产妇姓名"/><s:TextInput id="f601_03"/>
						<s:Label text="证号号码"/><s:TextInput id="f601_04" width="140"/>
						<s:Button label="读卡" id="duka1" width="60" click="readCard_mother(event)" enabled="false"/>
						<s:Button label="查询" click="query(event)"/>
						<s:Button label="打印血卡编号(3.3cm)" click="printxkbh('big')"/>
						<s:Button label="打印血卡编号(2.5cm)" click="printxkbh()"/>
						<s:Button label="打印产筛申请单" click="printCertificate(event)"/>
						<s:Button label="修改" click="update(event)"/>
						<s:Button label="删除" click="CompMethod.delConfirm(deleteF601)"/><!--有了结果才会上传数据，此删除需要未邮寄-->
						<s:Button label="批量邮寄" click="batchSend(event)"/>
					</s:HGroup>
				</s:VGroup>
			</s:NavigatorContent>
		
		</mx:TabNavigator>
		
		
		<control:CheckBoxDataGrid id="certificateDataGrid" width="100%" height="340"
								  borderVisible="true" verticalGridLineColor="#FFFFFF"
								  alternatingItemColors="[#FFFFFF,#EEEEEE]"
								  dataProvider="{f601Arr}"  editable="true"
								  rollOverColor="#D1E3F1" rowHeight="23"
								  horizontalScrollPolicy="auto"
								  verticalScrollPolicy="auto"
								  >
			<control:columns>  
				<mx:DataGridColumn width="41" editable="false" headerText="序号" textAlign="center" 
								   itemRenderer="{new ClassFactory(com.xyw.sys.custom.itemrenderer.DataGridNum)}">
				</mx:DataGridColumn>
				
				<mx:DataGridColumn width="100" dataField="f60103" headerText="产妇姓名" headerStyleName="textAlign"/>
				<mx:DataGridColumn width="160" dataField="f60104" headerText="产妇身份证号" headerStyleName="textAlign"/>
				<mx:DataGridColumn width="90" dataField="f60105Str" headerText="出生日期" headerStyleName="textAlign" editable="false"/>
				<mx:DataGridColumn width="90" dataField="f60109" headerText="联系方式" headerStyleName="textAlign" editable="false"/>
				<mx:DataGridColumn width="90" dataField="f60110" headerText="体重" headerStyleName="textAlign" editable="false"/>
				<mx:DataGridColumn width="190" dataField="f60155" headerText="血卡编号" headerStyleName="textAlign" editable="false"/>
				<mx:DataGridColumn width="90" dataField="f60161" headerText="审核" headerStyleName="textAlign" editable="false" labelFunction="setF30161Str"/>
				<mx:DataGridColumn width="90" dataField="f60159Zh" headerText="标本状态" headerStyleName="textAlign" editable="false"/>
				<mx:DataGridColumn width="100" dataField="f60128" headerText="申请医生" headerStyleName="textAlign" editable="false"/>
				<mx:DataGridColumn width="90" dataField="f60126Str" headerText="采血日期" headerStyleName="textAlign" editable="false"/>
				<mx:DataGridColumn dataField="f60129Zh" headerText="采血单位" headerStyleName="textAlign" editable="false"/>
			</control:columns>  
		</control:CheckBoxDataGrid> 
		<component:PagerBar id="pagerBar" enabled="false" isExcel="false" isExcel2="false" isPrinter="false"/>
	</s:VGroup>
	</s:Scroller>

</s:Module>