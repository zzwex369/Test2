<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" 
		  width="100%" height="100%"
		  xmlns:component="com.xyw.sys.custom.component.*"
		  creationComplete="moduleCreationCompleteHandler(event)">
	<fx:Declarations>
		<s:RemoteObject id="f601Service" destination="f601Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="queryF601Excel" result="queryF601ExcelHandler(event)"/>
		</s:RemoteObject>
		
		<s:RemoteObject id="f602Service" destination="f602Service" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="importF602Excel" result="importF602ExcelHandler(event)"/>
		</s:RemoteObject>
		
		<s:RemoteObject id="systemService" destination="systemService"
						endpoint="{this.parentApplication.contextRoot}/messagebroker/amf"
						showBusyCursor="true">
			<s:method name="getComboBoxData" result="getComboBoxDataHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;	
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
		}
		s|Label
		{
			fontSize:13;
		}
		.textAlign
		{
			textAlign:center;
		}
		
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			import com.xyw.module.msss.fnbj.xq.fnbjxqsqcx.tittle;
			import com.xyw.module.msss.fnbj.model.F601;
			import com.xyw.module.msss.fnbj.model.F601Request;
			import com.xyw.module.msss.fnbj.model.F601Response;
			import com.xyw.module.msss.fnbj.model.F602;
			import com.xyw.module.msss.fnbj.model.F602Request;
			import com.xyw.module.msss.fnbj.model.VF601;
			import com.xyw.sys.custom.component.CompMethod;
			import com.xyw.sys.custom.component.ExportExcel;
			import com.xyw.sys.custom.component.SecurityControler;
			import com.xyw.sys.custom.progressbar.SystemProgressBar;
			import com.xyw.sys.model.ComboBoxData;
			import com.xyw.sys.model.ComboBoxDataRequest;
			import com.xyw.sys.model.ComboBoxDataResponse;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.DateField;
			import mx.controls.dataGridClasses.MXDataGridItemRenderer;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			import org.hamcrest.object.nullValue;
			
			import spark.components.DataGrid;
			import spark.events.GridSelectionEvent;
			
			public var systemUser:SystemUser = null;
			public var f601Request:F601Request;
			public var vF601:VF601 = null;
			[Bindable] 
			private var f601Arr:ArrayCollection = new ArrayCollection(); 
			private var file:FileReference = new FileReference();
			private var sheet:Sheet;
			[Bindable]
			private var arr:ArrayCollection ;
			[Bindable]  
			private var fields:Array = new Array();  
			private var f602:F602;
			private var f602Request:F602Request;
			[Bindable]  
			private var f602list:ArrayCollection; 
			[Bindable]  
			private var f60205s:ArrayCollection; 
			private var saveStatus:Boolean=true;//是否保存 
			private var window:progressBarWindow;
			

			//========================启动权限控制============//
			private function security():void{
				SecurityControler.start(null,'visible');
				SecurityControler.addAllPerms(this.parentApplication.permissionList);
			}
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				//security();
				this.systemUser = this.parentApplication.systemUser;
				//检查读卡权限
				if(this.systemUser.duka == "1"){
					this.duka1.enabled = true;
				}
				
				this.timeStart.text=DateField.dateToString(new Date(),"YYYY-MM-DD");
				this.timeEnd.text=DateField.dateToString(new Date(),"YYYY-MM-DD");
				
				var comboBoxDataRequest:ComboBoxDataRequest = new ComboBoxDataRequest();
				comboBoxDataRequest.showPrompt = false;
				comboBoxDataRequest.sql ="select t.d101_01, t.d101_02 from D101 t where t.D101_19 = " + this.systemUser.institutionCode  ;
				comboBoxDataRequest.flag = "D101";
				
				this.systemService.getComboBoxData(comboBoxDataRequest);
				
			}
			
			
			/******************得到数据******************/
			private function getComboBoxDataHandler(event:ResultEvent):void
			{
				var comboBoxDataResponse:Object =  event.result;
				var flag:String = comboBoxDataResponse.flag;
				var comboBoxDataList:ArrayCollection = comboBoxDataResponse.comboBoxDataList;
				if(flag == "D101")
				{
					this.f60129.dataProvider = comboBoxDataList;
					this.f60129.selectedIndex = 0;	
				}
			}
		
			
			
			
			
			//读卡(母亲)
			protected function readCard_mother(event:MouseEvent):void
			{
				try
				{
					var str:String = ExternalInterface.call("parent.readCard");
					if(str != null && str.length != 0){
						var array:Array = str.split(",");
						var sex:String = array[1];//性别
						if(sex=="女"){
							this.f601_03.text = array[0];//姓名
							this.f601_04.text = array[5];//身份证号
						}else{
							Alert.show("请读母亲信息！","系统提示");
						}
					}else{
						Alert.show("读卡失败！");
					}
				} 
				catch(error:Error) 
				{
					Alert.show("读卡失败！");
				}
			}
			
			
			
			public function queryF601Excel():void
			{
				try
				{
					var f601:F601=new F601();
					f601Request=new F601Request();
				   f601.f60129=f60129.selectedItem.data;
				   
				   if(f601_03.text||f601_04.text)
				   {
					   f601.f60103 = StringUtil.trim(f601_03.text);
					   f601.f60104 = StringUtil.trim(f601_04.text);
					   f602Request.flag="true";
				   } else{
					   f601Request.timeStr = DateField.stringToDate(this.timeStart.text,"YYYY-MM-DD");
					   f601Request.timeEnd = DateField.stringToDate(this.timeEnd.text,"YYYY-MM-DD");
					   f601Request.flag="false"
				   } 
				  
					f601Request.f601=f601;
					this.f601Service.queryF601Excel(f601Request);
				}catch(error:Error){
					Alert.show("出错了");
				}
			}
			
			private function queryF601ExcelHandler(event:ResultEvent):void
			{
				var f601Response:Object = event.result;
				var rowCount:Number = f601Response.rowCount;
				//Alert.show(f601Response.sessionInfo);
				if(f601Response.state)
				{
					//Alert.show(f601Response.promptMessage, "系统提示");
					if(rowCount)
					{
						certificateDataGrid.dataProvider=f601Response.vf601s;
						
					}	
					
					
				} else {
					Alert.show(f601Response.errorMessage, "系统提示");
				}
			}
			
			private function exportToExcel2():void
			{
				var label:String=f60129.selectedItem.label;
				ExportExcel.loadDGInExcel(this.certificateDataGrid,label,
					this.parentApplication.contextRoot + '/print/ExcelExport.jsp');//最多4500调  服务器压力大
			}
			
			private function export():void
			{
			
			   window = new progressBarWindow();
				window.owner = this;
				PopUpManager.addPopUp(window,this,false);
				var x:Number = (this.parentApplication.mdiCanvas.width - window.width)/2;
				var y:Number = (this.parentApplication.mdiCanvas.height - window.height)/2;
				window.move(x,y); 
				exportToExcel();
				
			}
			
			public function exportToExcel():void  
			{  
				try
				{
					
					var sheet:Sheet = new Sheet();  
					var dataProviderCollection:ArrayCollection = certificateDataGrid.dataProvider as ArrayCollection;  
					var rowCount:int = dataProviderCollection.length;  
					sheet.resize(rowCount + 1,certificateDataGrid.columnsLength);  
					var columns:Array = certificateDataGrid.columns.toArray();  
					columns.splice(0,1);//删除序号
					var i:int = 0;  
					for each (var field:GridColumn in columns){  
						fields.push(field.dataField.toString());  
						sheet.setCell(0,i,field.headerText.toString());  //这个方法会将每一列的标题保存到excel当中的第一行
						i++;  
					}  
					var k:int=0;
					for(var r:int=1; r <= rowCount; r++)  
					{  
						
						var record:Object = dataProviderCollection.getItemAt(k);  
						/*insert record starting from row no 2 else  
						headers will be overwritten*/  
						insertRecordInSheet(r,sheet,record);  //加1是为了保存列标题
						k++;
					} 
					var xls:ExcelFile = new ExcelFile();  
					xls.sheets.addItem(sheet);  
					
					var bytes:ByteArray = xls.saveToByteArray();  
					
					PopUpManager.removePopUp(this.window);
					var fr:FileReference = new FileReference();  
					var date:Number=new Date().time;
					fr.save(bytes,(f60129.selectedItem.label)+date+".xls"); 
					//fr.save(bytes,"aaa"+date+".xls"); 
				} catch(error:Error) 
				{
					trace("11"+error.message);
				}
				
			}  
			
		/* 	private function exportToExcelBytes():void
			{
				var fr:FileReference = new FileReference();  
				var date:Number=new Date().time;
				//fr.save(bytes,(f60129.selectedItem.label)+date+".xls"); 
				fr.save(bytes,("aaa")+date+".xls"); 
			} */
			
			
			private function insertRecordInSheet(row:int,sheet:Sheet,record:Object):void  
			{  
				try
				{
					var colStr:String="";
					var colCount:int = certificateDataGrid.columnsLength;  
					for(var c:int; c < colCount; c++)  
					{  
						var i:int = 0;  
						for each(var field:String in fields){  
							if(field=="f60176")
							{
								sheet.setCell(row,i,"");  
							}else if(field=="f60103")
							{
								sheet.setCell(row,i,record.f60103);
							}else if(field=="f60104")
							{
								//sheet.setCell(row,i,record.f60204);
								var value:String=record.f60104;//在字符前面加上一个特殊字符（ASCII 127）。
								sheet.setCell(row,i,value== null ? "" :String.fromCharCode(127) + value); //解决科学计数法  // 参数:1、行号；2、列号；3、单元格的值
							}else if(field=="f60109")
							{
								sheet.setCell(row,i,value== null ? "" :String.fromCharCode(127) + (record.f60109)); //解决科学计数法  // 参数:1、行号；2、列号；3、单元格的值
							}else if(field=="f60105Str")
							{
								sheet.setCell(row,i,record.f60105Str);
							}else if(field=="f60107Zh")
							{
								sheet.setCell(row,i,record.f60107Zh);
							}else if(field=="f60110")
							{
								sheet.setCell(row,i,record.f60110);
							}else if(field=="f60115Zh")
							{
								sheet.setCell(row,i,record.f60115Zh);
							}else if(field=="f60126Str")
							{
								sheet.setCell(row,i,record.f60126Str);
							}else if(field=="sysdateStr")
							{
								sheet.setCell(row,i,record.sysdateStr);
							}else if(field=="f60116Str")
							{
								sheet.setCell(row,i,record.f60116Str);
							}else if(field=="f60119Zh")
							{
								sheet.setCell(row,i,record.f60119Zh);
							}else if(field=="f60111Zh")
							{
								sheet.setCell(row,i,record.f60111Zh);
							}else if(field=="f60132Str")
							{
								sheet.setCell(row,i,record.f60132Str);
							}else if(field=="f60131Zh")
							{
								sheet.setCell(row,i,record.f60131Zh);
							}else if(field=="f60155")
							{
								sheet.setCell(row,i,value== null ? "" :String.fromCharCode(127) + (record.f60155)); //解决科学计数法  // 参数:1、行号；2、列号；3、单元格的值
	
							}else if(field=="f60177")
							{
								sheet.setCell(row,i,value== null ? "" :String.fromCharCode(127) + (record.f60177)); //解决科学计数法  // 参数:1、行号；2、列号；3、单元格的值
	
							}     
							
							i++;  
						}  
					}
					
				} 
				catch(error:Error) 
				{
					trace("22"+error.message);
				}
			}
			
			private function _upload():void{
				importExcel.enabled=false;
				var fileType:FileFilter = new FileFilter("Excel(*.xls)","*.xls");
				file = new FileReference(); 
				file.addEventListener(Event.CANCEL, cancelHandler);
				file.addEventListener(Event.SELECT, file_select); 
				file.addEventListener(Event.COMPLETE,file_complete);  
				file.browse(new Array(fileType)); 
			}
			/** 
			 * 选择了excel之后 
			 * */ 
			private function file_select (e:Event):void {  
				if (file.size > 0) {  
					file.load(); 
				}  
			}  
			
			private function cancelHandler(event:Event):void {
				importExcel.enabled=true;
			}
			
			
			
			
			/** 
			 * excel加载完毕 
			 * */ 
			private function file_complete (e:Event):void { 
				var xls:ExcelFile = new ExcelFile(); 
				try{ 
					xls.loadFromByteArray(e.target.data); 
				}catch(eofe:EOFError){ 
					trace(eofe); 
				} 
				sheet = xls.sheets[0]; 
				//sheet.rows
				var valueStr:String="";
				var valueArr:Array;
				arr=sheet.values;
				f602list=new ArrayCollection();
				
				try
				{
					for(var i:int=1;i<arr.length;i++)
					{ 
						
						var value:String=arr.getItemAt(i).toString();
						valueArr =value.split(",");
						if(!valueArr[18]&&!valueArr[0]&&!valueArr[2])//判断整行是否存在数据
							continue;
						f602=new F602();
						for (var num:int=0;num< valueArr.length;num++)
						{
							if(num<=19)
							{
								valueStr=StringUtil.trim(valueArr[num]);
								if(valueStr)
								{
									
								 if(num==1)
									{
										if(valueStr.length<2)
										{
											i=stopImport(i,num,arr);
											break;
										}
										f602.f60221=valueStr;
										f602.f60222=validateAge(valueStr);
									}else if(num==2)
										f602.f60225=valueStr;
									else if(num==3)
										f602.f60207=valueStr;
									else if(num==4)
										f602.f60211=valueStr;
									else if(num==5)
										f602.f60209=valueStr;
									else if(num==6)
										f602.f60213=valueStr;
									else if(num==7)
										f602.f60215=valueStr;
									else if(num==8)
									{
										valueStr=compare(valueStr);
										if(!valueStr)
										{
											i=stopImport(i,num,arr);
											break;
										}
										f602.f60216=valueStr;
									}
									else if(num==9)
										f602.f60228=valueStr;
									else if(num==10)
									{
										valueStr=compare(valueStr);
										if(!valueStr)
										{
											i=stopImport(i,num,arr);
											break;
										}
										f602.f60229=valueStr;
									}else if(num==11)
										f602.f60217=valueStr;
									else if(num==12)
									{
										valueStr=compare(valueStr);
										if(!valueStr)
										{
											i=stopImport(i,num,arr);
											break;
										}
										f602.f60218=valueStr;
									}else if(num==13)
										f602.f60223=DateField.stringToDate(valueStr,'YYYY-MM-DD');
									else if(num==14)
										f602.f60208=valueStr;
									else if(num==15)
										f602.f60212=valueStr;
									else if(num==16)
										f602.f60210=valueStr;
									else if(num==17)
										f602.f60214=valueStr;
									else if(num==18)
										f602.f60205=valueStr;
									else if(num==19)
										f602.f60224=valueStr;
								}else
								{
									i=stopImport(i,num,arr);
									break;
								}
								
							}else 
								break;
						} 
						
						f602.f60226=systemUser.institutionCode;
						f602list.addItem(f602);
						
					}  
					f602Request=new F602Request();
					f602Request.f602List=f602list;
				} 
				catch(error:Error) 
				{
					importExcel.enabled=true;
					Alert.show("Excel文档内容有错误，请联系客服"+error.getStackTrace(),"系统提示");
				}
				if(saveStatus)
					f602Service.importF602Excel(f602Request);
				else 
					saveStatus=true;
			}
			
			private function importF602ExcelHandler(event:ResultEvent):void
			{
				var f602Response:Object = event.result;
				if(f602Response.state){
					if(!f602Response.rowCount)
						Alert.show(f602Response.promptMessage, "系统提示");
					else
					{
						Alert.yesLabel="查看";
						Alert.noLabel="关闭";
						f60205s=f602Response.f60205s;
						Alert.show(f602Response.promptMessage, "系统提示",3,this,closeHandler);
					}
				} else {
					Alert.show(f602Response.errorMessage, "系统提示");
				}
			}
			
			private function closeHandler(event:CloseEvent):void
			{
				if(event.detail==1)
				{
					var window:queryWindow =new queryWindow();
					window.setdata(f60205s);
					CompMethod.popUpTitleWindow(window,this,true);
				}
			}
			
			
			public function refresh2():void
			{
				importExcel.enabled=true;
			}
			
			private function compare(value:String):String
			{	
				var val:String="";
				if(value=="低风险")
					val="1";
				else if(value=="临界风险")
					val="2";
				else if(value=="高风险")
					val="3";
				else 
					val=null;
				return val;
			}
			
			private function stopImport(i:int,num:int,arr:ArrayCollection):int
			{
				this.saveStatus=false;
				importExcel.enabled=true;
				Alert.show("第"+(++i)+"行,第"+(++num)+"列数据值错误，请检查再从新导入","系统提示");	
				i=arr.length;
				return i
			}
			
			private function  validateAge(val:String):String
			{
				var age:int=Number(val.substr(0,2));
				return val=(age>=35)?"3":"1";
			}
		]]>
	</fx:Script>
	<s:Scroller  width="100%" height="100%" horizontalScrollPolicy="auto" verticalScrollPolicy="auto">
		<s:VGroup width="100%">
			<mx:TabNavigator id="xuanze"  width="100%" chromeColor="#ffffff" creationPolicy="all">
				<s:NavigatorContent  label="综合查询" width="100%">
					<s:VGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="采血单位"/>
							<s:DropDownList width="263" id="f60129"/>
						</s:HGroup>
						<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
							<s:Label text="审核日期"/>
							
							<component:CustomRangeDateField  id="timeStart" isSelectFirst="true" />
							<s:Label text="至"/>
							
							<component:CustomRangeDateField  id="timeEnd"  isSelectNow="true"/>
							<s:Label text="产妇姓名"/><s:TextInput id="f601_03"/>
							<s:Label text="证号号码"/><s:TextInput id="f601_04" width="140"/>
							<s:Button label="读卡" id="duka1" width="60" click="readCard_mother(event)" enabled="false"/>
							<s:Button label="查询" click="queryF601Excel()"/>
							<s:Button label="导出" click="exportToExcel2()" enabled="{certificateDataGrid.dataProvider}"/>
							<s:Button label="导入" click="_upload()" id="importExcel"/>
						</s:HGroup>
					</s:VGroup>
				
				</s:NavigatorContent>
			</mx:TabNavigator>
			
			
			<s:DataGrid id="certificateDataGrid" editable="true" rowHeight="22" width="100%" height="513" borderAlpha="0.3"
						alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn headerText="序号" width="100" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
						<s:GridColumn width="80" dataField="f60176" headerText="实验编号" />
						<s:GridColumn width="160" dataField="f60177" headerText="样品号" />
						<s:GridColumn width="90" dataField="f60103" headerText="姓名" />
						<s:GridColumn width="90" dataField="f60176" headerText="门诊/住院号" />
						<s:GridColumn width="100" dataField="f60104" headerText="身份证号" />
						<s:GridColumn width="160" dataField="f60176" headerText="职业" />
						<s:GridColumn width="90" dataField="f60176" headerText="地址" />
						<s:GridColumn width="90" dataField="f60109" headerText="联系电话" />
						<s:GridColumn width="100" dataField="f60105Str" headerText="出生日期" />
						<s:GridColumn width="160" dataField="f60107Zh" headerText="种族" />
						<s:GridColumn width="90" dataField="f60110" headerText="体重" />
						<s:GridColumn width="90" dataField="f60115Zh" headerText="妊娠胎数" />
						<s:GridColumn width="90" dataField="f60176" headerText="标本类型" />
						<s:GridColumn width="100" dataField="f60126Str" headerText="抽血日期" />
						<s:GridColumn width="160" dataField="sysdateStr" headerText="检测日期" />
						<s:GridColumn width="90" dataField="f60119Zh" headerText="计算方法" />
						<s:GridColumn width="90" dataField="f60116Str" headerText="末次月经" />
						<s:GridColumn width="90" dataField="f60176" headerText="B超日期" />
						<s:GridColumn width="100" dataField="f60176" headerText="B超孕周" />
						<s:GridColumn width="90" dataField="f60176" headerText="B超孕天"/>
						<s:GridColumn width="90" dataField="f60176" headerText="孕周"/>
						<s:GridColumn width="90" dataField="f60176" headerText="孕天"/>
						<s:GridColumn width="100" dataField="f60176" headerText="预产期年龄"/>
						<s:GridColumn width="300" dataField="f60176" headerText="胰岛素依赖的糖尿病"/>
						<s:GridColumn  width="90" dataField="f60111Zh" headerText="吸烟"/>
						<s:GridColumn width="100" dataField="f60176" headerText="Rh" />
						<s:GridColumn width="160" dataField="f60176" headerText="IVF" />
						<s:GridColumn width="200" dataField="f60176" headerText="IVF植入时间" />
						<s:GridColumn width="200" dataField="f60176" headerText="唐氏家族史" />
						<s:GridColumn width="200" dataField="f60176" headerText="OSB家庭史" />
						<s:GridColumn width="100" dataField="f60176" headerText="CRL" />
						<s:GridColumn width="90" dataField="f60176" headerText="BPD"/>
						<s:GridColumn width="90" dataField="f60176" headerText="头围"/>
						<s:GridColumn width="90" dataField="f60176" headerText="NT"/>
						<s:GridColumn width="100" dataField="f60176" headerText="鼻骨"/>
						<s:GridColumn width="90" dataField="f60132Str" headerText="送检日期"/>
						<s:GridColumn  width="200" dataField="f60131Zh" headerText="送检部门"/>
						<s:GridColumn width="100" dataField="f60176" headerText="送检医生" />
						<s:GridColumn width="200" dataField="f60176" headerText="AFP浓度" />
						<s:GridColumn width="200" dataField="f60176" headerText="F_β_HCG浓度" />
						<s:GridColumn width="200" dataField="f60176" headerText="UE3浓度" />
						<s:GridColumn width="200" dataField="f60176" headerText="Inhibin-A浓度" />
						<s:GridColumn width="200" dataField="f60176" headerText="PAPP_A浓度" />
						<s:GridColumn width="200" dataField="f60176" headerText="HCG浓度" />
						<s:GridColumn width="200" dataField="f60176" headerText="检测员"/>
						<s:GridColumn width="200" dataField="f60155" headerText="条形码"/>
						<s:GridColumn width="200" dataField="f60176" headerText="电话号码"/>
						<s:GridColumn width="100" dataField="f60176" headerText="区属"/>
						
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
		</s:VGroup>
	</s:Scroller>
	
</s:Module>