<?xml version="1.0" encoding="utf-8"?>
<s:Module xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  width="100%" height="100%"
		  creationComplete="moduleCreationCompleteHandler(event)"
		  xmlns:component="com.xyw.sys.custom.component.*">
	<fx:Declarations>
		<s:RemoteObject id="systemService" destination="systemService" endpoint="{this.parentApplication.contextRoot}/messagebroker/amf" showBusyCursor="true">
			<s:method name="getAccount" result="getRoleHandler(event)"/>
			<s:method name="modifyAccountState" result="modifyAccountStateHandler(event)"/>
		</s:RemoteObject>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
		mx|Alert{
			/*borderColor: red;*/
			borderVisible:false;
			backgroundColor: yellow;
			dropShadowVisible: true;
			chromeColor: yellow;
			titleStyleName: alertTitle;
			messageStyleName: alertMessage;
			buttonStyleName: alertButton;
		}
		.alertTitle{
			fontSize: 15;
			fontWeight: bold;
			color: black;
		}
		.alertMessage {
			fontWeight: normal;
			color: black;
		}
		.alertButton {
			color: black;
		}
		
		s|DropDownList
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDropDownListSkin");
			selectionColor:#DDDDDD;
			rollOverColor:#EEEEEE;
			cornerRadius:3;
		}
		s|Button
		{
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomButtonSkin");
			cornerRadius:5;
		}
		s|Label
		{
			fontSize:13;
		}
		s|DataGrid
		{
			borderAlpha:"0.3";
			skinClass:ClassReference("com.xyw.sys.custom.skin.CustomDataGridSkin");
			alternatingRowColors:"[#FFFFFF,#EEEEEE]";
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
			import com.xyw.module.xtwh.model.SysView02;
			import com.xyw.module.xtwh.model.SysView02Request;
			import com.xyw.module.xtwh.model.SysView02Response;
			import com.xyw.sys.constant.SystemConstant;
			import com.xyw.sys.model.SessionException;
			import com.xyw.sys.model.SystemUser;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.GridSelectionEvent;
			
			Alert.okLabel = "确认";
			Alert.yesLabel = "是";
			Alert.noLabel = "否";
			Alert.cancelLabel = "取消";
			public var systemUser:SystemUser = null;
			private var sysView02:SysView02 = null;
			private var addRoleTitleWindow:AddRoleTitleWindow = null;
			
			private function moduleCreationCompleteHandler(event:FlexEvent):void
			{
				this.systemUser = this.parentApplication.systemUser;
				this.accountDataGrid.addEventListener(GridSelectionEvent.SELECTION_CHANGE, onSelectionChange);
			}
						
			private function query(event:MouseEvent):void
			{
				var sysView02Request:SysView02Request = new SysView02Request();
				var sysView02:SysView02 = new SysView02();
				var d801_08:String = this.area.getAreaCode();
				sysView02.d801_08 = d801_08;
				sysView02Request.sysView02 = sysView02;
				
				sysView02Request.parameterPageindex = 1;
				sysView02Request.parameterPagesize = 20;
				
				this.systemService.getAccount(sysView02Request);
			}
			
			private function getRoleHandler(event:ResultEvent):void
			{
				var sysView02Response:SysView02Response = event.result as SysView02Response;
				
				if(sysView02Response.errorMessage == null) {
					var rowCount:Number = sysView02Response.rowCount;
					var sysView02List:ArrayCollection = sysView02Response.sysView02List;
					this.pagerBar.dataGrid = this.accountDataGrid;
					this.pagerBar.rowCount = rowCount;
					this.pagerBar.resultData = sysView02List;
					this.pagerBar.dataBind();
					this.pagerBar.pagerFunction = pagerFunction;
					if(rowCount > 0) {
						this.pagerBar.enabled = true;
					}
				} else {
					Alert.show(sysView02Response.errorMessage, "系统提示");
				}
			}
			
			public function pagerFunction(currentPageIndex:int, pageSize:int):void
			{
				var sysView02Request:SysView02Request = new SysView02Request();
				var sysView02:SysView02 = new SysView02();
				var d801_08:String = this.area.getAreaCode();
				sysView02.d801_08 = d801_08;
				sysView02Request.sysView02 = sysView02;
				sysView02Request.parameterPageindex = currentPageIndex;
				sysView02Request.parameterPagesize = pageSize;
				
				this.systemService.getAccount(sysView02Request);
			}
			
			public function refresh():void
			{
				var sysView02Request:SysView02Request = new SysView02Request();
				var sysView02:SysView02 = new SysView02();
				var d801_08:String = this.area.getAreaCode();
				sysView02.d801_08 = d801_08;
				sysView02Request.sysView02 = sysView02;
				sysView02Request.parameterPageindex = this.pagerBar.currentPageIndex;
				sysView02Request.parameterPagesize = 20;
			
				this.systemService.getAccount(sysView02Request);
			}
			
			
			private function onSelectionChange(event:GridSelectionEvent):void
			{
				this.sysView02 = DataGrid(event.target).selectedItem as SysView02;
			}
			
			private function closeAccount(event:MouseEvent):void
			{
				if(this.sysView02 != null) {
					var d801_02_p:String = this.sysView02.d801_02;
					Alert.show("确认注销 " + d801_02_p + " 账号吗?","系统提示", 1|2|8, this, onCloseHandler);
				} else {
					Alert.show("请选择要注销的行!", "系统提示");
					return;
				}
			}
			
			private function onCloseHandler(event:CloseEvent):void
			{
				if(event.detail == Alert.YES) {
					this.systemService.modifyAccountState(this.sysView02.d801_01, "0");
				}
			}
			
			private function modifyAccountStateHandler(event:ResultEvent):void
			{
				var result:Boolean = event.result as Boolean;
				if(result) {
					Alert.show("操作成功!", "系统提示");
					this.refresh();
				} else {
					Alert.show("操作失败!", "系统提示");
					return;
				}
			}
			
			private function openAccount(event:MouseEvent):void
			{
				if(this.sysView02 != null) {
					var d801_02_p:String = this.sysView02.d801_02;
					Alert.show("确认恢复 " + d801_02_p + " 账户吗?","系统提示", 1|2|8, this, onOpenHandler);
				} else {
					Alert.show("请选择要恢复的行!", "系统提示");
					return;
				}
			}
			
			private function onOpenHandler(event:CloseEvent):void
			{
				if(event.detail == Alert.YES) {
					this.systemService.modifyAccountState(this.sysView02.d801_01, "1");
				}
			}
			
			public function replaceLabelFunction(item:Object, column:GridColumn):String
			{
			
				var d801_09_:String = item.d801_09;
				if(d801_09_ == "1") {
					return "正常"
				} else {
					return "注销"
				}
				return "注销";
			}
			
			private function addRole(event:MouseEvent):void
			{
				if(this.sysView02 != null) {
					var d801_01_p:String = this.sysView02.d801_01;
					var d801_02_p:String = this.sysView02.d801_02;
					
					addRoleTitleWindow = new AddRoleTitleWindow();
					addRoleTitleWindow.owner = this;
					addRoleTitleWindow.d801_01 = d801_01_p;
					addRoleTitleWindow.d801_02 = d801_02_p;
					PopUpManager.addPopUp(addRoleTitleWindow, this);
					var x:Number = (this.width - addRoleTitleWindow.width) / 2;
					var y:Number = (this.height - addRoleTitleWindow.height) / 2;
					addRoleTitleWindow.move(x, y);
					
				} else {
					Alert.show("请选择要注销的行!", "系统提示");
					return;
				}
			}
			
			private function faultHandler(event:FaultEvent):void
			{
				var sessionException:SessionException = event.fault.rootCause as SessionException;
				var errorCode:String = "";
				try {
					errorCode = sessionException.errorCode;
					if(errorCode == SystemConstant.LOGIN_USER_INFO_IS_NULL) {
						Alert.show(sessionException.errorMessage, "系统提示");
						return;
					}
				} catch(error:Error) {
					Alert.show("系统异常", "系统提示");
				}
			}
			
		]]>
	</fx:Script>
	<s:VGroup width="100%">
		<mx:TabNavigator  width="100%" chromeColor="#ffffff" creationPolicy="all">
			<s:NavigatorContent  label="用户管理" width="100%">
				<s:HGroup width="100%" paddingBottom="5" paddingLeft="10" paddingRight="10" verticalAlign="middle">
					<s:Label text="地区"/><component:AreaComboBox id="area"/>
					<s:Button label="查询" click="query(event)"/>
					<s:HGroup width="100%" horizontalAlign="right">
						<s:Button label="分配角色" click="addRole(event)"/>
						<s:Button label="注销" click="closeAccount(event)"/>
						<s:Button label="恢复" click="openAccount(event)"/>
					</s:HGroup>
				</s:HGroup>	
			</s:NavigatorContent>
		</mx:TabNavigator>
		<s:DataGrid id="accountDataGrid" editable="true" rowHeight="22" width="100%" height="330" alternatingRowColors="[#FFFFFF,#EEEEEE]" skinClass="com.xyw.sys.custom.skin.CustomDataGridSkin">  
			<s:columns>
				<s:ArrayList>
					<s:GridColumn headerText="序号" width="40" itemRenderer="com.xyw.sys.custom.itemrenderer.CustomGridColumnItemRenderer" editable="false"/>
					<s:GridColumn headerText="用户编号" dataField="d801_01" visible="false"/>
					<s:GridColumn headerText="用户账户" dataField="d801_02"/>
					<s:GridColumn headerText="真实姓名" dataField="d801_04" editable="false"/>
					<s:GridColumn headerText="身份证号" dataField="d801_06" editable="false"/>
					<s:GridColumn headerText="账户状态" dataField="d801_09" editable="false" labelFunction="replaceLabelFunction"/>
					<s:GridColumn headerText="所属单位" dataField="d801_07" editable="false" visible="false"/>
					<s:GridColumn headerText="所属地区" dataField="d801_08" editable="false" visible="false"/>
					<s:GridColumn headerText="所属地区" dataField="d201_05" editable="false"/>
					<s:GridColumn headerText="机构类别" dataField="d804_02" editable="false"/>
					<s:GridColumn headerText="角色" dataField="d806_03" editable="false" visible="false"/>
					<s:GridColumn headerText="机构名称" dataField="d101_02" editable="false"/>
					<s:GridColumn headerText="服务到期时间" dataField="d101_12" editable="false"/>
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
		<component:PagerBar id="pagerBar" enabled="false"/>
	</s:VGroup>
</s:Module>